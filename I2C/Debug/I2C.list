
I2C.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006bbc  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000470  08006cd0  08006cd0  00007cd0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007140  08007140  000091d4  2**0
                  CONTENTS
  4 .ARM          00000008  08007140  08007140  00008140  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007148  08007148  000091d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007148  08007148  00008148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800714c  0800714c  0000814c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  08007150  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000021c  200001d4  08007324  000091d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003f0  08007324  000093f0  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000091d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c63a  00000000  00000000  000091fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001da0  00000000  00000000  00015837  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00005a2f  00000000  00000000  000175d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000850  00000000  00000000  0001d008  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000009a2  00000000  00000000  0001d858  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001793a  00000000  00000000  0001e1fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000100a8  00000000  00000000  00035b34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00083f58  00000000  00000000  00045bdc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000c9b34  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00002bc0  00000000  00000000  000c9b78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000004f  00000000  00000000  000cc738  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d4 	.word	0x200001d4
 800012c:	00000000 	.word	0x00000000
 8000130:	08006cb4 	.word	0x08006cb4

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001d8 	.word	0x200001d8
 800014c:	08006cb4 	.word	0x08006cb4

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_d2f>:
 8000ac8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000acc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000ad0:	bf24      	itt	cs
 8000ad2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000ad6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000ada:	d90d      	bls.n	8000af8 <__aeabi_d2f+0x30>
 8000adc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000ae0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ae8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000aec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af0:	bf08      	it	eq
 8000af2:	f020 0001 	biceq.w	r0, r0, #1
 8000af6:	4770      	bx	lr
 8000af8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000afc:	d121      	bne.n	8000b42 <__aeabi_d2f+0x7a>
 8000afe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b02:	bfbc      	itt	lt
 8000b04:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b08:	4770      	bxlt	lr
 8000b0a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b12:	f1c2 0218 	rsb	r2, r2, #24
 8000b16:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b22:	bf18      	it	ne
 8000b24:	f040 0001 	orrne.w	r0, r0, #1
 8000b28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b34:	ea40 000c 	orr.w	r0, r0, ip
 8000b38:	fa23 f302 	lsr.w	r3, r3, r2
 8000b3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b40:	e7cc      	b.n	8000adc <__aeabi_d2f+0x14>
 8000b42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b46:	d107      	bne.n	8000b58 <__aeabi_d2f+0x90>
 8000b48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b4c:	bf1e      	ittt	ne
 8000b4e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b52:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b56:	4770      	bxne	lr
 8000b58:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b5c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b60:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <__aeabi_frsub>:
 8000b68:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000b6c:	e002      	b.n	8000b74 <__addsf3>
 8000b6e:	bf00      	nop

08000b70 <__aeabi_fsub>:
 8000b70:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000b74 <__addsf3>:
 8000b74:	0042      	lsls	r2, r0, #1
 8000b76:	bf1f      	itttt	ne
 8000b78:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b7c:	ea92 0f03 	teqne	r2, r3
 8000b80:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b84:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b88:	d06a      	beq.n	8000c60 <__addsf3+0xec>
 8000b8a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b8e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b92:	bfc1      	itttt	gt
 8000b94:	18d2      	addgt	r2, r2, r3
 8000b96:	4041      	eorgt	r1, r0
 8000b98:	4048      	eorgt	r0, r1
 8000b9a:	4041      	eorgt	r1, r0
 8000b9c:	bfb8      	it	lt
 8000b9e:	425b      	neglt	r3, r3
 8000ba0:	2b19      	cmp	r3, #25
 8000ba2:	bf88      	it	hi
 8000ba4:	4770      	bxhi	lr
 8000ba6:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000baa:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bae:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000bb2:	bf18      	it	ne
 8000bb4:	4240      	negne	r0, r0
 8000bb6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bba:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000bbe:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000bc2:	bf18      	it	ne
 8000bc4:	4249      	negne	r1, r1
 8000bc6:	ea92 0f03 	teq	r2, r3
 8000bca:	d03f      	beq.n	8000c4c <__addsf3+0xd8>
 8000bcc:	f1a2 0201 	sub.w	r2, r2, #1
 8000bd0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bd4:	eb10 000c 	adds.w	r0, r0, ip
 8000bd8:	f1c3 0320 	rsb	r3, r3, #32
 8000bdc:	fa01 f103 	lsl.w	r1, r1, r3
 8000be0:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000be4:	d502      	bpl.n	8000bec <__addsf3+0x78>
 8000be6:	4249      	negs	r1, r1
 8000be8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bec:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000bf0:	d313      	bcc.n	8000c1a <__addsf3+0xa6>
 8000bf2:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000bf6:	d306      	bcc.n	8000c06 <__addsf3+0x92>
 8000bf8:	0840      	lsrs	r0, r0, #1
 8000bfa:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bfe:	f102 0201 	add.w	r2, r2, #1
 8000c02:	2afe      	cmp	r2, #254	@ 0xfe
 8000c04:	d251      	bcs.n	8000caa <__addsf3+0x136>
 8000c06:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c0a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c0e:	bf08      	it	eq
 8000c10:	f020 0001 	biceq.w	r0, r0, #1
 8000c14:	ea40 0003 	orr.w	r0, r0, r3
 8000c18:	4770      	bx	lr
 8000c1a:	0049      	lsls	r1, r1, #1
 8000c1c:	eb40 0000 	adc.w	r0, r0, r0
 8000c20:	3a01      	subs	r2, #1
 8000c22:	bf28      	it	cs
 8000c24:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000c28:	d2ed      	bcs.n	8000c06 <__addsf3+0x92>
 8000c2a:	fab0 fc80 	clz	ip, r0
 8000c2e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c32:	ebb2 020c 	subs.w	r2, r2, ip
 8000c36:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c3a:	bfaa      	itet	ge
 8000c3c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c40:	4252      	neglt	r2, r2
 8000c42:	4318      	orrge	r0, r3
 8000c44:	bfbc      	itt	lt
 8000c46:	40d0      	lsrlt	r0, r2
 8000c48:	4318      	orrlt	r0, r3
 8000c4a:	4770      	bx	lr
 8000c4c:	f092 0f00 	teq	r2, #0
 8000c50:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c54:	bf06      	itte	eq
 8000c56:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c5a:	3201      	addeq	r2, #1
 8000c5c:	3b01      	subne	r3, #1
 8000c5e:	e7b5      	b.n	8000bcc <__addsf3+0x58>
 8000c60:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c64:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c68:	bf18      	it	ne
 8000c6a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c6e:	d021      	beq.n	8000cb4 <__addsf3+0x140>
 8000c70:	ea92 0f03 	teq	r2, r3
 8000c74:	d004      	beq.n	8000c80 <__addsf3+0x10c>
 8000c76:	f092 0f00 	teq	r2, #0
 8000c7a:	bf08      	it	eq
 8000c7c:	4608      	moveq	r0, r1
 8000c7e:	4770      	bx	lr
 8000c80:	ea90 0f01 	teq	r0, r1
 8000c84:	bf1c      	itt	ne
 8000c86:	2000      	movne	r0, #0
 8000c88:	4770      	bxne	lr
 8000c8a:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000c8e:	d104      	bne.n	8000c9a <__addsf3+0x126>
 8000c90:	0040      	lsls	r0, r0, #1
 8000c92:	bf28      	it	cs
 8000c94:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000c98:	4770      	bx	lr
 8000c9a:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000c9e:	bf3c      	itt	cc
 8000ca0:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000ca4:	4770      	bxcc	lr
 8000ca6:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000caa:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000cae:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cb2:	4770      	bx	lr
 8000cb4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cb8:	bf16      	itet	ne
 8000cba:	4608      	movne	r0, r1
 8000cbc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000cc0:	4601      	movne	r1, r0
 8000cc2:	0242      	lsls	r2, r0, #9
 8000cc4:	bf06      	itte	eq
 8000cc6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cca:	ea90 0f01 	teqeq	r0, r1
 8000cce:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000cd2:	4770      	bx	lr

08000cd4 <__aeabi_ui2f>:
 8000cd4:	f04f 0300 	mov.w	r3, #0
 8000cd8:	e004      	b.n	8000ce4 <__aeabi_i2f+0x8>
 8000cda:	bf00      	nop

08000cdc <__aeabi_i2f>:
 8000cdc:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000ce0:	bf48      	it	mi
 8000ce2:	4240      	negmi	r0, r0
 8000ce4:	ea5f 0c00 	movs.w	ip, r0
 8000ce8:	bf08      	it	eq
 8000cea:	4770      	bxeq	lr
 8000cec:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000cf0:	4601      	mov	r1, r0
 8000cf2:	f04f 0000 	mov.w	r0, #0
 8000cf6:	e01c      	b.n	8000d32 <__aeabi_l2f+0x2a>

08000cf8 <__aeabi_ul2f>:
 8000cf8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cfc:	bf08      	it	eq
 8000cfe:	4770      	bxeq	lr
 8000d00:	f04f 0300 	mov.w	r3, #0
 8000d04:	e00a      	b.n	8000d1c <__aeabi_l2f+0x14>
 8000d06:	bf00      	nop

08000d08 <__aeabi_l2f>:
 8000d08:	ea50 0201 	orrs.w	r2, r0, r1
 8000d0c:	bf08      	it	eq
 8000d0e:	4770      	bxeq	lr
 8000d10:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d14:	d502      	bpl.n	8000d1c <__aeabi_l2f+0x14>
 8000d16:	4240      	negs	r0, r0
 8000d18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d1c:	ea5f 0c01 	movs.w	ip, r1
 8000d20:	bf02      	ittt	eq
 8000d22:	4684      	moveq	ip, r0
 8000d24:	4601      	moveq	r1, r0
 8000d26:	2000      	moveq	r0, #0
 8000d28:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000d2c:	bf08      	it	eq
 8000d2e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000d32:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000d36:	fabc f28c 	clz	r2, ip
 8000d3a:	3a08      	subs	r2, #8
 8000d3c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d40:	db10      	blt.n	8000d64 <__aeabi_l2f+0x5c>
 8000d42:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d46:	4463      	add	r3, ip
 8000d48:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d4c:	f1c2 0220 	rsb	r2, r2, #32
 8000d50:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d54:	fa20 f202 	lsr.w	r2, r0, r2
 8000d58:	eb43 0002 	adc.w	r0, r3, r2
 8000d5c:	bf08      	it	eq
 8000d5e:	f020 0001 	biceq.w	r0, r0, #1
 8000d62:	4770      	bx	lr
 8000d64:	f102 0220 	add.w	r2, r2, #32
 8000d68:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d74:	fa21 f202 	lsr.w	r2, r1, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d82:	4770      	bx	lr

08000d84 <__aeabi_fmul>:
 8000d84:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000d88:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d8c:	bf1e      	ittt	ne
 8000d8e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d92:	ea92 0f0c 	teqne	r2, ip
 8000d96:	ea93 0f0c 	teqne	r3, ip
 8000d9a:	d06f      	beq.n	8000e7c <__aeabi_fmul+0xf8>
 8000d9c:	441a      	add	r2, r3
 8000d9e:	ea80 0c01 	eor.w	ip, r0, r1
 8000da2:	0240      	lsls	r0, r0, #9
 8000da4:	bf18      	it	ne
 8000da6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000daa:	d01e      	beq.n	8000dea <__aeabi_fmul+0x66>
 8000dac:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000db0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000db4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000db8:	fba0 3101 	umull	r3, r1, r0, r1
 8000dbc:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000dc0:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000dc4:	bf3e      	ittt	cc
 8000dc6:	0049      	lslcc	r1, r1, #1
 8000dc8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dcc:	005b      	lslcc	r3, r3, #1
 8000dce:	ea40 0001 	orr.w	r0, r0, r1
 8000dd2:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000dd6:	2afd      	cmp	r2, #253	@ 0xfd
 8000dd8:	d81d      	bhi.n	8000e16 <__aeabi_fmul+0x92>
 8000dda:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000dde:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000de2:	bf08      	it	eq
 8000de4:	f020 0001 	biceq.w	r0, r0, #1
 8000de8:	4770      	bx	lr
 8000dea:	f090 0f00 	teq	r0, #0
 8000dee:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000df2:	bf08      	it	eq
 8000df4:	0249      	lsleq	r1, r1, #9
 8000df6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dfa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dfe:	3a7f      	subs	r2, #127	@ 0x7f
 8000e00:	bfc2      	ittt	gt
 8000e02:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000e06:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e0a:	4770      	bxgt	lr
 8000e0c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e10:	f04f 0300 	mov.w	r3, #0
 8000e14:	3a01      	subs	r2, #1
 8000e16:	dc5d      	bgt.n	8000ed4 <__aeabi_fmul+0x150>
 8000e18:	f112 0f19 	cmn.w	r2, #25
 8000e1c:	bfdc      	itt	le
 8000e1e:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000e22:	4770      	bxle	lr
 8000e24:	f1c2 0200 	rsb	r2, r2, #0
 8000e28:	0041      	lsls	r1, r0, #1
 8000e2a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e2e:	f1c2 0220 	rsb	r2, r2, #32
 8000e32:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e36:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e3a:	f140 0000 	adc.w	r0, r0, #0
 8000e3e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e42:	bf08      	it	eq
 8000e44:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e48:	4770      	bx	lr
 8000e4a:	f092 0f00 	teq	r2, #0
 8000e4e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e52:	bf02      	ittt	eq
 8000e54:	0040      	lsleq	r0, r0, #1
 8000e56:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e5a:	3a01      	subeq	r2, #1
 8000e5c:	d0f9      	beq.n	8000e52 <__aeabi_fmul+0xce>
 8000e5e:	ea40 000c 	orr.w	r0, r0, ip
 8000e62:	f093 0f00 	teq	r3, #0
 8000e66:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000e6a:	bf02      	ittt	eq
 8000e6c:	0049      	lsleq	r1, r1, #1
 8000e6e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000e72:	3b01      	subeq	r3, #1
 8000e74:	d0f9      	beq.n	8000e6a <__aeabi_fmul+0xe6>
 8000e76:	ea41 010c 	orr.w	r1, r1, ip
 8000e7a:	e78f      	b.n	8000d9c <__aeabi_fmul+0x18>
 8000e7c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e80:	ea92 0f0c 	teq	r2, ip
 8000e84:	bf18      	it	ne
 8000e86:	ea93 0f0c 	teqne	r3, ip
 8000e8a:	d00a      	beq.n	8000ea2 <__aeabi_fmul+0x11e>
 8000e8c:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000e90:	bf18      	it	ne
 8000e92:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000e96:	d1d8      	bne.n	8000e4a <__aeabi_fmul+0xc6>
 8000e98:	ea80 0001 	eor.w	r0, r0, r1
 8000e9c:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ea0:	4770      	bx	lr
 8000ea2:	f090 0f00 	teq	r0, #0
 8000ea6:	bf17      	itett	ne
 8000ea8:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000eac:	4608      	moveq	r0, r1
 8000eae:	f091 0f00 	teqne	r1, #0
 8000eb2:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000eb6:	d014      	beq.n	8000ee2 <__aeabi_fmul+0x15e>
 8000eb8:	ea92 0f0c 	teq	r2, ip
 8000ebc:	d101      	bne.n	8000ec2 <__aeabi_fmul+0x13e>
 8000ebe:	0242      	lsls	r2, r0, #9
 8000ec0:	d10f      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ec2:	ea93 0f0c 	teq	r3, ip
 8000ec6:	d103      	bne.n	8000ed0 <__aeabi_fmul+0x14c>
 8000ec8:	024b      	lsls	r3, r1, #9
 8000eca:	bf18      	it	ne
 8000ecc:	4608      	movne	r0, r1
 8000ece:	d108      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ed0:	ea80 0001 	eor.w	r0, r0, r1
 8000ed4:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ed8:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000edc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ee0:	4770      	bx	lr
 8000ee2:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ee6:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000eea:	4770      	bx	lr

08000eec <__aeabi_fdiv>:
 8000eec:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000ef0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000ef4:	bf1e      	ittt	ne
 8000ef6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000efa:	ea92 0f0c 	teqne	r2, ip
 8000efe:	ea93 0f0c 	teqne	r3, ip
 8000f02:	d069      	beq.n	8000fd8 <__aeabi_fdiv+0xec>
 8000f04:	eba2 0203 	sub.w	r2, r2, r3
 8000f08:	ea80 0c01 	eor.w	ip, r0, r1
 8000f0c:	0249      	lsls	r1, r1, #9
 8000f0e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f12:	d037      	beq.n	8000f84 <__aeabi_fdiv+0x98>
 8000f14:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000f18:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f1c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f20:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000f24:	428b      	cmp	r3, r1
 8000f26:	bf38      	it	cc
 8000f28:	005b      	lslcc	r3, r3, #1
 8000f2a:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000f2e:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000f32:	428b      	cmp	r3, r1
 8000f34:	bf24      	itt	cs
 8000f36:	1a5b      	subcs	r3, r3, r1
 8000f38:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f3c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f40:	bf24      	itt	cs
 8000f42:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f46:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f4a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f4e:	bf24      	itt	cs
 8000f50:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f54:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f58:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f5c:	bf24      	itt	cs
 8000f5e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f62:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f66:	011b      	lsls	r3, r3, #4
 8000f68:	bf18      	it	ne
 8000f6a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f6e:	d1e0      	bne.n	8000f32 <__aeabi_fdiv+0x46>
 8000f70:	2afd      	cmp	r2, #253	@ 0xfd
 8000f72:	f63f af50 	bhi.w	8000e16 <__aeabi_fmul+0x92>
 8000f76:	428b      	cmp	r3, r1
 8000f78:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f7c:	bf08      	it	eq
 8000f7e:	f020 0001 	biceq.w	r0, r0, #1
 8000f82:	4770      	bx	lr
 8000f84:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000f88:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f8c:	327f      	adds	r2, #127	@ 0x7f
 8000f8e:	bfc2      	ittt	gt
 8000f90:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000f94:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f98:	4770      	bxgt	lr
 8000f9a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f9e:	f04f 0300 	mov.w	r3, #0
 8000fa2:	3a01      	subs	r2, #1
 8000fa4:	e737      	b.n	8000e16 <__aeabi_fmul+0x92>
 8000fa6:	f092 0f00 	teq	r2, #0
 8000faa:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000fae:	bf02      	ittt	eq
 8000fb0:	0040      	lsleq	r0, r0, #1
 8000fb2:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000fb6:	3a01      	subeq	r2, #1
 8000fb8:	d0f9      	beq.n	8000fae <__aeabi_fdiv+0xc2>
 8000fba:	ea40 000c 	orr.w	r0, r0, ip
 8000fbe:	f093 0f00 	teq	r3, #0
 8000fc2:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000fc6:	bf02      	ittt	eq
 8000fc8:	0049      	lsleq	r1, r1, #1
 8000fca:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000fce:	3b01      	subeq	r3, #1
 8000fd0:	d0f9      	beq.n	8000fc6 <__aeabi_fdiv+0xda>
 8000fd2:	ea41 010c 	orr.w	r1, r1, ip
 8000fd6:	e795      	b.n	8000f04 <__aeabi_fdiv+0x18>
 8000fd8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000fdc:	ea92 0f0c 	teq	r2, ip
 8000fe0:	d108      	bne.n	8000ff4 <__aeabi_fdiv+0x108>
 8000fe2:	0242      	lsls	r2, r0, #9
 8000fe4:	f47f af7d 	bne.w	8000ee2 <__aeabi_fmul+0x15e>
 8000fe8:	ea93 0f0c 	teq	r3, ip
 8000fec:	f47f af70 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8000ff0:	4608      	mov	r0, r1
 8000ff2:	e776      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ff4:	ea93 0f0c 	teq	r3, ip
 8000ff8:	d104      	bne.n	8001004 <__aeabi_fdiv+0x118>
 8000ffa:	024b      	lsls	r3, r1, #9
 8000ffc:	f43f af4c 	beq.w	8000e98 <__aeabi_fmul+0x114>
 8001000:	4608      	mov	r0, r1
 8001002:	e76e      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001004:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8001008:	bf18      	it	ne
 800100a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800100e:	d1ca      	bne.n	8000fa6 <__aeabi_fdiv+0xba>
 8001010:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8001014:	f47f af5c 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8001018:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 800101c:	f47f af3c 	bne.w	8000e98 <__aeabi_fmul+0x114>
 8001020:	e75f      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001022:	bf00      	nop

08001024 <__aeabi_d2lz>:
 8001024:	b538      	push	{r3, r4, r5, lr}
 8001026:	2200      	movs	r2, #0
 8001028:	2300      	movs	r3, #0
 800102a:	4604      	mov	r4, r0
 800102c:	460d      	mov	r5, r1
 800102e:	f7ff fcc5 	bl	80009bc <__aeabi_dcmplt>
 8001032:	b928      	cbnz	r0, 8001040 <__aeabi_d2lz+0x1c>
 8001034:	4620      	mov	r0, r4
 8001036:	4629      	mov	r1, r5
 8001038:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800103c:	f000 b80a 	b.w	8001054 <__aeabi_d2ulz>
 8001040:	4620      	mov	r0, r4
 8001042:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8001046:	f000 f805 	bl	8001054 <__aeabi_d2ulz>
 800104a:	4240      	negs	r0, r0
 800104c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001050:	bd38      	pop	{r3, r4, r5, pc}
 8001052:	bf00      	nop

08001054 <__aeabi_d2ulz>:
 8001054:	b5d0      	push	{r4, r6, r7, lr}
 8001056:	2200      	movs	r2, #0
 8001058:	4b0b      	ldr	r3, [pc, #44]	@ (8001088 <__aeabi_d2ulz+0x34>)
 800105a:	4606      	mov	r6, r0
 800105c:	460f      	mov	r7, r1
 800105e:	f7ff fa3b 	bl	80004d8 <__aeabi_dmul>
 8001062:	f7ff fd11 	bl	8000a88 <__aeabi_d2uiz>
 8001066:	4604      	mov	r4, r0
 8001068:	f7ff f9bc 	bl	80003e4 <__aeabi_ui2d>
 800106c:	2200      	movs	r2, #0
 800106e:	4b07      	ldr	r3, [pc, #28]	@ (800108c <__aeabi_d2ulz+0x38>)
 8001070:	f7ff fa32 	bl	80004d8 <__aeabi_dmul>
 8001074:	4602      	mov	r2, r0
 8001076:	460b      	mov	r3, r1
 8001078:	4630      	mov	r0, r6
 800107a:	4639      	mov	r1, r7
 800107c:	f7ff f874 	bl	8000168 <__aeabi_dsub>
 8001080:	f7ff fd02 	bl	8000a88 <__aeabi_d2uiz>
 8001084:	4621      	mov	r1, r4
 8001086:	bdd0      	pop	{r4, r6, r7, pc}
 8001088:	3df00000 	.word	0x3df00000
 800108c:	41f00000 	.word	0x41f00000

08001090 <BMP_Readcalibration>:
static void MX_GPIO_Init(void);
static void MX_I2C1_Init(void);
static void MX_USART1_UART_Init(void);
/* USER CODE BEGIN PFP */

void BMP_Readcalibration(){
 8001090:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}

	uint8_t calib[6];
	HAL_I2C_Mem_Read(&hi2c1, BMP_ADDR, CALIB_TEMP_REG, 1, calib, 6, HAL_MAX_DELAY);
 8001092:	2306      	movs	r3, #6
 8001094:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001098:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800109c:	ab04      	add	r3, sp, #16
 800109e:	9300      	str	r3, [sp, #0]
 80010a0:	2288      	movs	r2, #136	@ 0x88
 80010a2:	2301      	movs	r3, #1
 80010a4:	21ec      	movs	r1, #236	@ 0xec
 80010a6:	4809      	ldr	r0, [pc, #36]	@ (80010cc <BMP_Readcalibration+0x3c>)
 80010a8:	f000 fdd0 	bl	8001c4c <HAL_I2C_Mem_Read>
	digt1 = (calib[1]<<8) | calib[0];
 80010ac:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80010b0:	4b07      	ldr	r3, [pc, #28]	@ (80010d0 <BMP_Readcalibration+0x40>)
 80010b2:	801a      	strh	r2, [r3, #0]
	digt2 = (calib[3]<<8) | calib[2];
 80010b4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80010b8:	4b06      	ldr	r3, [pc, #24]	@ (80010d4 <BMP_Readcalibration+0x44>)
 80010ba:	801a      	strh	r2, [r3, #0]
	digt3 = (calib[5]<<8) | calib[4];
 80010bc:	4b06      	ldr	r3, [pc, #24]	@ (80010d8 <BMP_Readcalibration+0x48>)
 80010be:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80010c2:	801a      	strh	r2, [r3, #0]

}
 80010c4:	b007      	add	sp, #28
 80010c6:	f85d fb04 	ldr.w	pc, [sp], #4
 80010ca:	bf00      	nop
 80010cc:	20000248 	.word	0x20000248
 80010d0:	200001f8 	.word	0x200001f8
 80010d4:	200001f6 	.word	0x200001f6
 80010d8:	200001f4 	.word	0x200001f4

080010dc <Read_temperature>:

int32_t Read_temperature(){
 80010dc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
	uint8_t tmp_raw[3];
	int32_t tmp_adc;

	HAL_I2C_Mem_Read(&hi2c1, BMP_ADDR, TEMP_ADDR, 1, tmp_raw, 3, HAL_MAX_DELAY);
 80010de:	2303      	movs	r3, #3
 80010e0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80010e4:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80010e8:	ab05      	add	r3, sp, #20
 80010ea:	9300      	str	r3, [sp, #0]
 80010ec:	22fa      	movs	r2, #250	@ 0xfa
 80010ee:	2301      	movs	r3, #1
 80010f0:	21ec      	movs	r1, #236	@ 0xec
 80010f2:	4808      	ldr	r0, [pc, #32]	@ (8001114 <Read_temperature+0x38>)
 80010f4:	f000 fdaa 	bl	8001c4c <HAL_I2C_Mem_Read>

	tmp_adc = ((int32_t)tmp_raw[0]<<12) | ((int32_t)tmp_raw[1]<<4) | ((int32_t)tmp_raw[2]>>4);
 80010f8:	f89d 3015 	ldrb.w	r3, [sp, #21]
 80010fc:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8001100:	f89d 0016 	ldrb.w	r0, [sp, #22]
 8001104:	011b      	lsls	r3, r3, #4
 8001106:	ea43 3302 	orr.w	r3, r3, r2, lsl #12

	return tmp_adc;

}
 800110a:	ea43 1010 	orr.w	r0, r3, r0, lsr #4
 800110e:	b007      	add	sp, #28
 8001110:	f85d fb04 	ldr.w	pc, [sp], #4
 8001114:	20000248 	.word	0x20000248

08001118 <BMP_in_celsius>:

float BMP_in_celsius(int32_t tmp_adc){
 8001118:	b508      	push	{r3, lr}

	int32_t var1,var2;
	float temp;

	var1 = ((tmp_adc>>3) - (digt1<<1))*(digt2>>11);
 800111a:	4b10      	ldr	r3, [pc, #64]	@ (800115c <BMP_in_celsius+0x44>)
 800111c:	881b      	ldrh	r3, [r3, #0]
	var2 = ((tmp_adc>>4)- (digt1)) * ((tmp_adc>>4)-(digt1>>12)) * (digt3>>14);
 800111e:	ebc3 1120 	rsb	r1, r3, r0, asr #4
 8001122:	0b1a      	lsrs	r2, r3, #12
	var1 = ((tmp_adc>>3) - (digt1<<1))*(digt2>>11);
 8001124:	005b      	lsls	r3, r3, #1
	var2 = ((tmp_adc>>4)- (digt1)) * ((tmp_adc>>4)-(digt1>>12)) * (digt3>>14);
 8001126:	ebc2 1220 	rsb	r2, r2, r0, asr #4
	var1 = ((tmp_adc>>3) - (digt1<<1))*(digt2>>11);
 800112a:	ebc3 00e0 	rsb	r0, r3, r0, asr #3
 800112e:	4b0c      	ldr	r3, [pc, #48]	@ (8001160 <BMP_in_celsius+0x48>)
	var2 = ((tmp_adc>>4)- (digt1)) * ((tmp_adc>>4)-(digt1>>12)) * (digt3>>14);
 8001130:	434a      	muls	r2, r1
	var1 = ((tmp_adc>>3) - (digt1<<1))*(digt2>>11);
 8001132:	881b      	ldrh	r3, [r3, #0]
	var2 = ((tmp_adc>>4)- (digt1)) * ((tmp_adc>>4)-(digt1>>12)) * (digt3>>14);
 8001134:	490b      	ldr	r1, [pc, #44]	@ (8001164 <BMP_in_celsius+0x4c>)
	var1 = ((tmp_adc>>3) - (digt1<<1))*(digt2>>11);
 8001136:	0adb      	lsrs	r3, r3, #11
 8001138:	4358      	muls	r0, r3
	var2 = ((tmp_adc>>4)- (digt1)) * ((tmp_adc>>4)-(digt1>>12)) * (digt3>>14);
 800113a:	8809      	ldrh	r1, [r1, #0]
	temp_conv = var1+var2;
 800113c:	4b0a      	ldr	r3, [pc, #40]	@ (8001168 <BMP_in_celsius+0x50>)
	var2 = ((tmp_adc>>4)- (digt1)) * ((tmp_adc>>4)-(digt1>>12)) * (digt3>>14);
 800113e:	0b89      	lsrs	r1, r1, #14
	temp_conv = var1+var2;
 8001140:	fb01 0002 	mla	r0, r1, r2, r0
 8001144:	6018      	str	r0, [r3, #0]
	temp = (temp_conv*5+128)>>8;
 8001146:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800114a:	3080      	adds	r0, #128	@ 0x80
 800114c:	1200      	asrs	r0, r0, #8
 800114e:	f7ff fdc5 	bl	8000cdc <__aeabi_i2f>
	return temp/100.0;
 8001152:	4906      	ldr	r1, [pc, #24]	@ (800116c <BMP_in_celsius+0x54>)
 8001154:	f7ff feca 	bl	8000eec <__aeabi_fdiv>
}
 8001158:	bd08      	pop	{r3, pc}
 800115a:	bf00      	nop
 800115c:	200001f8 	.word	0x200001f8
 8001160:	200001f6 	.word	0x200001f6
 8001164:	200001f4 	.word	0x200001f4
 8001168:	200001fc 	.word	0x200001fc
 800116c:	42c80000 	.word	0x42c80000

08001170 <printtemperature>:

void printtemperature(float temp_c){
 8001170:	b500      	push	{lr}
 8001172:	b08f      	sub	sp, #60	@ 0x3c

	char msg[50];
	sprintf(msg, "Temerature: %.2f C\r\n",temp_c);
 8001174:	f7ff f958 	bl	8000428 <__aeabi_f2d>
 8001178:	4602      	mov	r2, r0
 800117a:	460b      	mov	r3, r1
 800117c:	a801      	add	r0, sp, #4
 800117e:	4908      	ldr	r1, [pc, #32]	@ (80011a0 <printtemperature+0x30>)
 8001180:	f002 f96c 	bl	800345c <siprintf>
	HAL_UART_Transmit(&huart1, (uint8_t *)msg, strlen(msg), HAL_MAX_DELAY);
 8001184:	a801      	add	r0, sp, #4
 8001186:	f7fe ffe3 	bl	8000150 <strlen>
 800118a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800118e:	b282      	uxth	r2, r0
 8001190:	a901      	add	r1, sp, #4
 8001192:	4804      	ldr	r0, [pc, #16]	@ (80011a4 <printtemperature+0x34>)
 8001194:	f001 f9e5 	bl	8002562 <HAL_UART_Transmit>

}
 8001198:	b00f      	add	sp, #60	@ 0x3c
 800119a:	f85d fb04 	ldr.w	pc, [sp], #4
 800119e:	bf00      	nop
 80011a0:	08006cd0 	.word	0x08006cd0
 80011a4:	20000200 	.word	0x20000200

080011a8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80011a8:	b500      	push	{lr}
 80011aa:	b091      	sub	sp, #68	@ 0x44
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011ac:	2224      	movs	r2, #36	@ 0x24
 80011ae:	2100      	movs	r1, #0
 80011b0:	a807      	add	r0, sp, #28
 80011b2:	f002 f9b6 	bl	8003522 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80011b6:	2214      	movs	r2, #20
 80011b8:	2100      	movs	r1, #0
 80011ba:	a801      	add	r0, sp, #4
 80011bc:	f002 f9b1 	bl	8003522 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80011c0:	2302      	movs	r3, #2
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011c2:	2101      	movs	r1, #1
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80011c4:	9306      	str	r3, [sp, #24]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011c6:	2310      	movs	r3, #16
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011c8:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011ca:	e9cd 130a 	strd	r1, r3, [sp, #40]	@ 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011ce:	f000 fe81 	bl	8001ed4 <HAL_RCC_OscConfig>
 80011d2:	4601      	mov	r1, r0
 80011d4:	b108      	cbz	r0, 80011da <SystemClock_Config+0x32>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80011d6:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80011d8:	e7fe      	b.n	80011d8 <SystemClock_Config+0x30>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011da:	230f      	movs	r3, #15
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80011dc:	e9cd 0003 	strd	r0, r0, [sp, #12]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80011e0:	e9cd 3001 	strd	r3, r0, [sp, #4]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80011e4:	9005      	str	r0, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80011e6:	a801      	add	r0, sp, #4
 80011e8:	f001 f836 	bl	8002258 <HAL_RCC_ClockConfig>
 80011ec:	b108      	cbz	r0, 80011f2 <SystemClock_Config+0x4a>
 80011ee:	b672      	cpsid	i
  while (1)
 80011f0:	e7fe      	b.n	80011f0 <SystemClock_Config+0x48>
}
 80011f2:	b011      	add	sp, #68	@ 0x44
 80011f4:	f85d fb04 	ldr.w	pc, [sp], #4

080011f8 <main>:
{
 80011f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  HAL_Init();
 80011fa:	f000 f9a3 	bl	8001544 <HAL_Init>
  SystemClock_Config();
 80011fe:	f7ff ffd3 	bl	80011a8 <SystemClock_Config>
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001202:	4b29      	ldr	r3, [pc, #164]	@ (80012a8 <main+0xb0>)
  hi2c1.Instance = I2C1;
 8001204:	4829      	ldr	r0, [pc, #164]	@ (80012ac <main+0xb4>)
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001206:	699a      	ldr	r2, [r3, #24]
  hi2c1.Init.ClockSpeed = 100000;
 8001208:	4c29      	ldr	r4, [pc, #164]	@ (80012b0 <main+0xb8>)
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800120a:	f042 0220 	orr.w	r2, r2, #32
 800120e:	619a      	str	r2, [r3, #24]
 8001210:	699a      	ldr	r2, [r3, #24]
 8001212:	f002 0220 	and.w	r2, r2, #32
 8001216:	9201      	str	r2, [sp, #4]
 8001218:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800121a:	699a      	ldr	r2, [r3, #24]
 800121c:	f042 0204 	orr.w	r2, r2, #4
 8001220:	619a      	str	r2, [r3, #24]
 8001222:	699a      	ldr	r2, [r3, #24]
 8001224:	f002 0204 	and.w	r2, r2, #4
 8001228:	9202      	str	r2, [sp, #8]
 800122a:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800122c:	699a      	ldr	r2, [r3, #24]
 800122e:	f042 0208 	orr.w	r2, r2, #8
 8001232:	619a      	str	r2, [r3, #24]
 8001234:	699b      	ldr	r3, [r3, #24]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001236:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800123a:	f003 0308 	and.w	r3, r3, #8
 800123e:	9303      	str	r3, [sp, #12]
 8001240:	9b03      	ldr	r3, [sp, #12]
  hi2c1.Init.ClockSpeed = 100000;
 8001242:	4b1c      	ldr	r3, [pc, #112]	@ (80012b4 <main+0xbc>)
 8001244:	e9c0 4300 	strd	r4, r3, [r0]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001248:	2300      	movs	r3, #0
  hi2c1.Init.OwnAddress1 = 0;
 800124a:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800124e:	e9c0 2304 	strd	r2, r3, [r0, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001252:	e9c0 3306 	strd	r3, r3, [r0, #24]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001256:	6203      	str	r3, [r0, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001258:	f000 fc50 	bl	8001afc <HAL_I2C_Init>
 800125c:	4603      	mov	r3, r0
 800125e:	b108      	cbz	r0, 8001264 <main+0x6c>
 8001260:	b672      	cpsid	i
  while (1)
 8001262:	e7fe      	b.n	8001262 <main+0x6a>
  huart1.Init.BaudRate = 115200;
 8001264:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
  huart1.Instance = USART1;
 8001268:	4813      	ldr	r0, [pc, #76]	@ (80012b8 <main+0xc0>)
  huart1.Init.BaudRate = 115200;
 800126a:	4914      	ldr	r1, [pc, #80]	@ (80012bc <main+0xc4>)
  huart1.Init.StopBits = UART_STOPBITS_1;
 800126c:	e9c0 3302 	strd	r3, r3, [r0, #8]
  huart1.Init.BaudRate = 115200;
 8001270:	e9c0 1200 	strd	r1, r2, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001274:	220c      	movs	r2, #12
  huart1.Init.Parity = UART_PARITY_NONE;
 8001276:	6103      	str	r3, [r0, #16]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001278:	e9c0 2305 	strd	r2, r3, [r0, #20]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800127c:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800127e:	f001 f941 	bl	8002504 <HAL_UART_Init>
 8001282:	b108      	cbz	r0, 8001288 <main+0x90>
 8001284:	b672      	cpsid	i
  while (1)
 8001286:	e7fe      	b.n	8001286 <main+0x8e>
  BMP_Readcalibration();
 8001288:	f7ff ff02 	bl	8001090 <BMP_Readcalibration>
	  temp_c = BMP_in_celsius(raw_temp);
 800128c:	4c0c      	ldr	r4, [pc, #48]	@ (80012c0 <main+0xc8>)
	  int32_t raw_temp = Read_temperature();
 800128e:	f7ff ff25 	bl	80010dc <Read_temperature>
	  temp_c = BMP_in_celsius(raw_temp);
 8001292:	f7ff ff41 	bl	8001118 <BMP_in_celsius>
 8001296:	6020      	str	r0, [r4, #0]
	  printtemperature(temp_c);
 8001298:	6820      	ldr	r0, [r4, #0]
 800129a:	f7ff ff69 	bl	8001170 <printtemperature>
	  HAL_Delay(1000);
 800129e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80012a2:	f000 f973 	bl	800158c <HAL_Delay>
  while (1)
 80012a6:	e7f2      	b.n	800128e <main+0x96>
 80012a8:	40021000 	.word	0x40021000
 80012ac:	20000248 	.word	0x20000248
 80012b0:	40005400 	.word	0x40005400
 80012b4:	000186a0 	.word	0x000186a0
 80012b8:	20000200 	.word	0x20000200
 80012bc:	40013800 	.word	0x40013800
 80012c0:	200001f0 	.word	0x200001f0

080012c4 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 80012c4:	4b0e      	ldr	r3, [pc, #56]	@ (8001300 <HAL_MspInit+0x3c>)
{
 80012c6:	b082      	sub	sp, #8
  __HAL_RCC_AFIO_CLK_ENABLE();
 80012c8:	699a      	ldr	r2, [r3, #24]
 80012ca:	f042 0201 	orr.w	r2, r2, #1
 80012ce:	619a      	str	r2, [r3, #24]
 80012d0:	699a      	ldr	r2, [r3, #24]
 80012d2:	f002 0201 	and.w	r2, r2, #1
 80012d6:	9200      	str	r2, [sp, #0]
 80012d8:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80012da:	69da      	ldr	r2, [r3, #28]
 80012dc:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80012e0:	61da      	str	r2, [r3, #28]
 80012e2:	69db      	ldr	r3, [r3, #28]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 80012e4:	4a07      	ldr	r2, [pc, #28]	@ (8001304 <HAL_MspInit+0x40>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80012e6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80012ea:	9301      	str	r3, [sp, #4]
 80012ec:	9b01      	ldr	r3, [sp, #4]
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 80012ee:	6853      	ldr	r3, [r2, #4]
 80012f0:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80012f4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80012f8:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80012fa:	b002      	add	sp, #8
 80012fc:	4770      	bx	lr
 80012fe:	bf00      	nop
 8001300:	40021000 	.word	0x40021000
 8001304:	40010000 	.word	0x40010000

08001308 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001308:	b510      	push	{r4, lr}
 800130a:	4604      	mov	r4, r0
 800130c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800130e:	2210      	movs	r2, #16
 8001310:	2100      	movs	r1, #0
 8001312:	a802      	add	r0, sp, #8
 8001314:	f002 f905 	bl	8003522 <memset>
  if(hi2c->Instance==I2C1)
 8001318:	6822      	ldr	r2, [r4, #0]
 800131a:	4b12      	ldr	r3, [pc, #72]	@ (8001364 <HAL_I2C_MspInit+0x5c>)
 800131c:	429a      	cmp	r2, r3
 800131e:	d11e      	bne.n	800135e <HAL_I2C_MspInit+0x56>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001320:	4c11      	ldr	r4, [pc, #68]	@ (8001368 <HAL_I2C_MspInit+0x60>)
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = Clock_Pin|Data_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001322:	22c0      	movs	r2, #192	@ 0xc0
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001324:	69a3      	ldr	r3, [r4, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001326:	2101      	movs	r1, #1
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001328:	f043 0308 	orr.w	r3, r3, #8
 800132c:	61a3      	str	r3, [r4, #24]
 800132e:	69a3      	ldr	r3, [r4, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001330:	480e      	ldr	r0, [pc, #56]	@ (800136c <HAL_I2C_MspInit+0x64>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001332:	f003 0308 	and.w	r3, r3, #8
 8001336:	9300      	str	r3, [sp, #0]
 8001338:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800133a:	2312      	movs	r3, #18
 800133c:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001340:	2303      	movs	r3, #3
 8001342:	e9cd 1304 	strd	r1, r3, [sp, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001346:	a902      	add	r1, sp, #8
 8001348:	f000 f988 	bl	800165c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800134c:	69e3      	ldr	r3, [r4, #28]
 800134e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001352:	61e3      	str	r3, [r4, #28]
 8001354:	69e3      	ldr	r3, [r4, #28]
 8001356:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800135a:	9301      	str	r3, [sp, #4]
 800135c:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 800135e:	b006      	add	sp, #24
 8001360:	bd10      	pop	{r4, pc}
 8001362:	bf00      	nop
 8001364:	40005400 	.word	0x40005400
 8001368:	40021000 	.word	0x40021000
 800136c:	40010c00 	.word	0x40010c00

08001370 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001370:	b510      	push	{r4, lr}
 8001372:	4604      	mov	r4, r0
 8001374:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001376:	2210      	movs	r2, #16
 8001378:	2100      	movs	r1, #0
 800137a:	a802      	add	r0, sp, #8
 800137c:	f002 f8d1 	bl	8003522 <memset>
  if(huart->Instance==USART1)
 8001380:	6822      	ldr	r2, [r4, #0]
 8001382:	4b17      	ldr	r3, [pc, #92]	@ (80013e0 <HAL_UART_MspInit+0x70>)
 8001384:	429a      	cmp	r2, r3
 8001386:	d128      	bne.n	80013da <HAL_UART_MspInit+0x6a>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001388:	f503 4358 	add.w	r3, r3, #55296	@ 0xd800
 800138c:	699a      	ldr	r2, [r3, #24]
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800138e:	4815      	ldr	r0, [pc, #84]	@ (80013e4 <HAL_UART_MspInit+0x74>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8001390:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8001394:	619a      	str	r2, [r3, #24]
 8001396:	699a      	ldr	r2, [r3, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001398:	a902      	add	r1, sp, #8
    __HAL_RCC_USART1_CLK_ENABLE();
 800139a:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 800139e:	9200      	str	r2, [sp, #0]
 80013a0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80013a2:	699a      	ldr	r2, [r3, #24]
 80013a4:	f042 0204 	orr.w	r2, r2, #4
 80013a8:	619a      	str	r2, [r3, #24]
 80013aa:	699b      	ldr	r3, [r3, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013ac:	f44f 7200 	mov.w	r2, #512	@ 0x200
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80013b0:	f003 0304 	and.w	r3, r3, #4
 80013b4:	9301      	str	r3, [sp, #4]
 80013b6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013b8:	2302      	movs	r3, #2
 80013ba:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013be:	2303      	movs	r3, #3
 80013c0:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013c2:	f000 f94b 	bl	800165c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80013c6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80013ca:	2300      	movs	r3, #0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013cc:	4805      	ldr	r0, [pc, #20]	@ (80013e4 <HAL_UART_MspInit+0x74>)
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80013ce:	e9cd 1302 	strd	r1, r3, [sp, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013d2:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013d4:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013d6:	f000 f941 	bl	800165c <HAL_GPIO_Init>

  /* USER CODE END USART1_MspInit 1 */

  }

}
 80013da:	b006      	add	sp, #24
 80013dc:	bd10      	pop	{r4, pc}
 80013de:	bf00      	nop
 80013e0:	40013800 	.word	0x40013800
 80013e4:	40010800 	.word	0x40010800

080013e8 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80013e8:	e7fe      	b.n	80013e8 <NMI_Handler>

080013ea <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80013ea:	e7fe      	b.n	80013ea <HardFault_Handler>

080013ec <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80013ec:	e7fe      	b.n	80013ec <MemManage_Handler>

080013ee <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80013ee:	e7fe      	b.n	80013ee <BusFault_Handler>

080013f0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80013f0:	e7fe      	b.n	80013f0 <UsageFault_Handler>

080013f2 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80013f2:	4770      	bx	lr

080013f4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 80013f4:	4770      	bx	lr

080013f6 <PendSV_Handler>:
}

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
 80013f6:	4770      	bx	lr

080013f8 <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80013f8:	f000 b8b6 	b.w	8001568 <HAL_IncTick>

080013fc <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 80013fc:	2001      	movs	r0, #1
 80013fe:	4770      	bx	lr

08001400 <_kill>:

int _kill(int pid, int sig)
{
 8001400:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001402:	f002 f8e1 	bl	80035c8 <__errno>
 8001406:	2316      	movs	r3, #22
 8001408:	6003      	str	r3, [r0, #0]
  return -1;
}
 800140a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800140e:	bd08      	pop	{r3, pc}

08001410 <_exit>:

void _exit (int status)
{
 8001410:	b508      	push	{r3, lr}
  errno = EINVAL;
 8001412:	f002 f8d9 	bl	80035c8 <__errno>
 8001416:	2316      	movs	r3, #22
 8001418:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 800141a:	e7fe      	b.n	800141a <_exit+0xa>

0800141c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800141c:	b570      	push	{r4, r5, r6, lr}
 800141e:	460d      	mov	r5, r1
 8001420:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001422:	460e      	mov	r6, r1
 8001424:	1b73      	subs	r3, r6, r5
 8001426:	429c      	cmp	r4, r3
 8001428:	dc01      	bgt.n	800142e <_read+0x12>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 800142a:	4620      	mov	r0, r4
 800142c:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 800142e:	f3af 8000 	nop.w
 8001432:	f806 0b01 	strb.w	r0, [r6], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001436:	e7f5      	b.n	8001424 <_read+0x8>

08001438 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001438:	b570      	push	{r4, r5, r6, lr}
 800143a:	460d      	mov	r5, r1
 800143c:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800143e:	460e      	mov	r6, r1
 8001440:	1b73      	subs	r3, r6, r5
 8001442:	429c      	cmp	r4, r3
 8001444:	dc01      	bgt.n	800144a <_write+0x12>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 8001446:	4620      	mov	r0, r4
 8001448:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 800144a:	f816 0b01 	ldrb.w	r0, [r6], #1
 800144e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001452:	e7f5      	b.n	8001440 <_write+0x8>

08001454 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8001454:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001458:	4770      	bx	lr

0800145a <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 800145a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  return 0;
}
 800145e:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8001460:	604b      	str	r3, [r1, #4]
}
 8001462:	4770      	bx	lr

08001464 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8001464:	2001      	movs	r0, #1
 8001466:	4770      	bx	lr

08001468 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8001468:	2000      	movs	r0, #0
 800146a:	4770      	bx	lr

0800146c <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800146c:	4a0b      	ldr	r2, [pc, #44]	@ (800149c <_sbrk+0x30>)
{
 800146e:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 8001470:	6811      	ldr	r1, [r2, #0]
{
 8001472:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8001474:	b909      	cbnz	r1, 800147a <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 8001476:	490a      	ldr	r1, [pc, #40]	@ (80014a0 <_sbrk+0x34>)
 8001478:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800147a:	6810      	ldr	r0, [r2, #0]
 800147c:	4909      	ldr	r1, [pc, #36]	@ (80014a4 <_sbrk+0x38>)
 800147e:	4c0a      	ldr	r4, [pc, #40]	@ (80014a8 <_sbrk+0x3c>)
 8001480:	4403      	add	r3, r0
 8001482:	1b09      	subs	r1, r1, r4
 8001484:	428b      	cmp	r3, r1
 8001486:	d906      	bls.n	8001496 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 8001488:	f002 f89e 	bl	80035c8 <__errno>
 800148c:	230c      	movs	r3, #12
 800148e:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8001490:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8001494:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8001496:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 8001498:	e7fc      	b.n	8001494 <_sbrk+0x28>
 800149a:	bf00      	nop
 800149c:	2000029c 	.word	0x2000029c
 80014a0:	200003f0 	.word	0x200003f0
 80014a4:	20002800 	.word	0x20002800
 80014a8:	00000400 	.word	0x00000400

080014ac <SystemInit>:

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80014ac:	4770      	bx	lr
	...

080014b0 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 80014b0:	f7ff fffc 	bl	80014ac <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80014b4:	480b      	ldr	r0, [pc, #44]	@ (80014e4 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 80014b6:	490c      	ldr	r1, [pc, #48]	@ (80014e8 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 80014b8:	4a0c      	ldr	r2, [pc, #48]	@ (80014ec <LoopFillZerobss+0x16>)
  movs r3, #0
 80014ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80014bc:	e002      	b.n	80014c4 <LoopCopyDataInit>

080014be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80014be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80014c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80014c2:	3304      	adds	r3, #4

080014c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80014c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80014c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80014c8:	d3f9      	bcc.n	80014be <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80014ca:	4a09      	ldr	r2, [pc, #36]	@ (80014f0 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 80014cc:	4c09      	ldr	r4, [pc, #36]	@ (80014f4 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80014ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80014d0:	e001      	b.n	80014d6 <LoopFillZerobss>

080014d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80014d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80014d4:	3204      	adds	r2, #4

080014d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80014d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80014d8:	d3fb      	bcc.n	80014d2 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80014da:	f002 f87b 	bl	80035d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80014de:	f7ff fe8b 	bl	80011f8 <main>
  bx lr
 80014e2:	4770      	bx	lr
  ldr r0, =_sdata
 80014e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80014e8:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 80014ec:	08007150 	.word	0x08007150
  ldr r2, =_sbss
 80014f0:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 80014f4:	200003f0 	.word	0x200003f0

080014f8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80014f8:	e7fe      	b.n	80014f8 <ADC1_2_IRQHandler>
	...

080014fc <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80014fc:	b538      	push	{r3, r4, r5, lr}
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80014fe:	4b0e      	ldr	r3, [pc, #56]	@ (8001538 <HAL_InitTick+0x3c>)
{
 8001500:	4605      	mov	r5, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001502:	781a      	ldrb	r2, [r3, #0]
 8001504:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001508:	fbb3 f3f2 	udiv	r3, r3, r2
 800150c:	4a0b      	ldr	r2, [pc, #44]	@ (800153c <HAL_InitTick+0x40>)
 800150e:	6810      	ldr	r0, [r2, #0]
 8001510:	fbb0 f0f3 	udiv	r0, r0, r3
 8001514:	f000 f88e 	bl	8001634 <HAL_SYSTICK_Config>
 8001518:	4604      	mov	r4, r0
 800151a:	b958      	cbnz	r0, 8001534 <HAL_InitTick+0x38>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800151c:	2d0f      	cmp	r5, #15
 800151e:	d809      	bhi.n	8001534 <HAL_InitTick+0x38>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001520:	4602      	mov	r2, r0
 8001522:	4629      	mov	r1, r5
 8001524:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001528:	f000 f854 	bl	80015d4 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800152c:	4620      	mov	r0, r4
 800152e:	4b04      	ldr	r3, [pc, #16]	@ (8001540 <HAL_InitTick+0x44>)
 8001530:	601d      	str	r5, [r3, #0]
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
 8001532:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8001534:	2001      	movs	r0, #1
 8001536:	e7fc      	b.n	8001532 <HAL_InitTick+0x36>
 8001538:	20000004 	.word	0x20000004
 800153c:	20000000 	.word	0x20000000
 8001540:	20000008 	.word	0x20000008

08001544 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001544:	4a07      	ldr	r2, [pc, #28]	@ (8001564 <HAL_Init+0x20>)
{
 8001546:	b508      	push	{r3, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001548:	6813      	ldr	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800154a:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800154c:	f043 0310 	orr.w	r3, r3, #16
 8001550:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001552:	f000 f82d 	bl	80015b0 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8001556:	200f      	movs	r0, #15
 8001558:	f7ff ffd0 	bl	80014fc <HAL_InitTick>
  HAL_MspInit();
 800155c:	f7ff feb2 	bl	80012c4 <HAL_MspInit>
}
 8001560:	2000      	movs	r0, #0
 8001562:	bd08      	pop	{r3, pc}
 8001564:	40022000 	.word	0x40022000

08001568 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8001568:	4a03      	ldr	r2, [pc, #12]	@ (8001578 <HAL_IncTick+0x10>)
 800156a:	4b04      	ldr	r3, [pc, #16]	@ (800157c <HAL_IncTick+0x14>)
 800156c:	6811      	ldr	r1, [r2, #0]
 800156e:	781b      	ldrb	r3, [r3, #0]
 8001570:	440b      	add	r3, r1
 8001572:	6013      	str	r3, [r2, #0]
}
 8001574:	4770      	bx	lr
 8001576:	bf00      	nop
 8001578:	200002a0 	.word	0x200002a0
 800157c:	20000004 	.word	0x20000004

08001580 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8001580:	4b01      	ldr	r3, [pc, #4]	@ (8001588 <HAL_GetTick+0x8>)
 8001582:	6818      	ldr	r0, [r3, #0]
}
 8001584:	4770      	bx	lr
 8001586:	bf00      	nop
 8001588:	200002a0 	.word	0x200002a0

0800158c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800158c:	b538      	push	{r3, r4, r5, lr}
 800158e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8001590:	f7ff fff6 	bl	8001580 <HAL_GetTick>
 8001594:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001596:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8001598:	bf1e      	ittt	ne
 800159a:	4b04      	ldrne	r3, [pc, #16]	@ (80015ac <HAL_Delay+0x20>)
 800159c:	781b      	ldrbne	r3, [r3, #0]
 800159e:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80015a0:	f7ff ffee 	bl	8001580 <HAL_GetTick>
 80015a4:	1b43      	subs	r3, r0, r5
 80015a6:	42a3      	cmp	r3, r4
 80015a8:	d3fa      	bcc.n	80015a0 <HAL_Delay+0x14>
  {
  }
}
 80015aa:	bd38      	pop	{r3, r4, r5, pc}
 80015ac:	20000004 	.word	0x20000004

080015b0 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80015b0:	4907      	ldr	r1, [pc, #28]	@ (80015d0 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 80015b2:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80015b4:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 80015b6:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80015ba:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 80015be:	0412      	lsls	r2, r2, #16
 80015c0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80015c2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80015c4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80015c8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 80015cc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80015ce:	4770      	bx	lr
 80015d0:	e000ed00 	.word	0xe000ed00

080015d4 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80015d4:	4b15      	ldr	r3, [pc, #84]	@ (800162c <HAL_NVIC_SetPriority+0x58>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80015d6:	b530      	push	{r4, r5, lr}
 80015d8:	68dc      	ldr	r4, [r3, #12]
 80015da:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80015de:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80015e2:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80015e4:	2b04      	cmp	r3, #4
 80015e6:	bf28      	it	cs
 80015e8:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80015ea:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80015ec:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80015f0:	bf94      	ite	ls
 80015f2:	2400      	movls	r4, #0
 80015f4:	3c03      	subhi	r4, #3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80015f6:	fa05 f303 	lsl.w	r3, r5, r3
 80015fa:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80015fe:	40a5      	lsls	r5, r4
 8001600:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001604:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8001606:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001608:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800160c:	bfac      	ite	ge
 800160e:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001612:	4a07      	ldrlt	r2, [pc, #28]	@ (8001630 <HAL_NVIC_SetPriority+0x5c>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001614:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8001618:	b2db      	uxtb	r3, r3
 800161a:	bfab      	itete	ge
 800161c:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001620:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001624:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001628:	5413      	strblt	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800162a:	bd30      	pop	{r4, r5, pc}
 800162c:	e000ed00 	.word	0xe000ed00
 8001630:	e000ed14 	.word	0xe000ed14

08001634 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001634:	3801      	subs	r0, #1
 8001636:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 800163a:	d20b      	bcs.n	8001654 <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800163c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001640:	21f0      	movs	r1, #240	@ 0xf0
 8001642:	4a05      	ldr	r2, [pc, #20]	@ (8001658 <HAL_SYSTICK_Config+0x24>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001644:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001646:	f882 1023 	strb.w	r1, [r2, #35]	@ 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800164a:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800164c:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800164e:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001650:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001652:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 8001654:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8001656:	4770      	bx	lr
 8001658:	e000ed00 	.word	0xe000ed00

0800165c <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800165c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00u;
  uint32_t ioposition;
  uint32_t iocurrent;
  uint32_t temp;
  uint32_t config = 0x00u;
 8001660:	2200      	movs	r2, #0
  uint32_t position = 0x00u;
 8001662:	4616      	mov	r6, r2
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable AFIO Clock */
        __HAL_RCC_AFIO_CLK_ENABLE();
 8001664:	f8df c17c 	ldr.w	ip, [pc, #380]	@ 80017e4 <HAL_GPIO_Init+0x188>
 8001668:	4b5f      	ldr	r3, [pc, #380]	@ (80017e8 <HAL_GPIO_Init+0x18c>)
      switch (GPIO_Init->Mode)
 800166a:	f8df e180 	ldr.w	lr, [pc, #384]	@ 80017ec <HAL_GPIO_Init+0x190>
 800166e:	f8df 8180 	ldr.w	r8, [pc, #384]	@ 80017f0 <HAL_GPIO_Init+0x194>
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001672:	680d      	ldr	r5, [r1, #0]
 8001674:	fa35 f406 	lsrs.w	r4, r5, r6
 8001678:	d102      	bne.n	8001680 <HAL_GPIO_Init+0x24>
      }
    }

	position++;
  }
}
 800167a:	b003      	add	sp, #12
 800167c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ioposition = (0x01uL << position);
 8001680:	2701      	movs	r7, #1
 8001682:	40b7      	lsls	r7, r6
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8001684:	ea05 0407 	and.w	r4, r5, r7
    if (iocurrent == ioposition)
 8001688:	ea37 0505 	bics.w	r5, r7, r5
 800168c:	d175      	bne.n	800177a <HAL_GPIO_Init+0x11e>
      switch (GPIO_Init->Mode)
 800168e:	684d      	ldr	r5, [r1, #4]
 8001690:	2d03      	cmp	r5, #3
 8001692:	d806      	bhi.n	80016a2 <HAL_GPIO_Init+0x46>
 8001694:	3d01      	subs	r5, #1
 8001696:	2d02      	cmp	r5, #2
 8001698:	d87e      	bhi.n	8001798 <HAL_GPIO_Init+0x13c>
 800169a:	e8df f005 	tbb	[pc, r5]
 800169e:	948f      	.short	0x948f
 80016a0:	9a          	.byte	0x9a
 80016a1:	00          	.byte	0x00
 80016a2:	2d12      	cmp	r5, #18
 80016a4:	f000 8092 	beq.w	80017cc <HAL_GPIO_Init+0x170>
 80016a8:	d869      	bhi.n	800177e <HAL_GPIO_Init+0x122>
 80016aa:	2d11      	cmp	r5, #17
 80016ac:	f000 8088 	beq.w	80017c0 <HAL_GPIO_Init+0x164>
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 80016b0:	2cff      	cmp	r4, #255	@ 0xff
 80016b2:	bf98      	it	ls
 80016b4:	4681      	movls	r9, r0
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 80016b6:	f04f 0b0f 	mov.w	fp, #15
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 80016ba:	bf88      	it	hi
 80016bc:	f100 0904 	addhi.w	r9, r0, #4
 80016c0:	ea4f 0586 	mov.w	r5, r6, lsl #2
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 80016c4:	f8d9 7000 	ldr.w	r7, [r9]
      registeroffset = (iocurrent < GPIO_PIN_8) ? (position << 2u) : ((position - 8u) << 2u);
 80016c8:	bf88      	it	hi
 80016ca:	3d20      	subhi	r5, #32
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 80016cc:	fa0b fa05 	lsl.w	sl, fp, r5
 80016d0:	ea27 070a 	bic.w	r7, r7, sl
 80016d4:	fa02 f505 	lsl.w	r5, r2, r5
 80016d8:	432f      	orrs	r7, r5
 80016da:	f8c9 7000 	str.w	r7, [r9]
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80016de:	f8d1 9004 	ldr.w	r9, [r1, #4]
 80016e2:	f019 5f80 	tst.w	r9, #268435456	@ 0x10000000
 80016e6:	d048      	beq.n	800177a <HAL_GPIO_Init+0x11e>
        __HAL_RCC_AFIO_CLK_ENABLE();
 80016e8:	f8dc 5018 	ldr.w	r5, [ip, #24]
 80016ec:	f026 0703 	bic.w	r7, r6, #3
 80016f0:	f045 0501 	orr.w	r5, r5, #1
 80016f4:	f8cc 5018 	str.w	r5, [ip, #24]
 80016f8:	f8dc 5018 	ldr.w	r5, [ip, #24]
 80016fc:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8001700:	f005 0501 	and.w	r5, r5, #1
 8001704:	9501      	str	r5, [sp, #4]
 8001706:	f507 3780 	add.w	r7, r7, #65536	@ 0x10000
        CLEAR_BIT(temp, (0x0Fu) << (4u * (position & 0x03u)));
 800170a:	f006 0a03 	and.w	sl, r6, #3
        __HAL_RCC_AFIO_CLK_ENABLE();
 800170e:	9d01      	ldr	r5, [sp, #4]
        CLEAR_BIT(temp, (0x0Fu) << (4u * (position & 0x03u)));
 8001710:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
        temp = AFIO->EXTICR[position >> 2u];
 8001714:	68bd      	ldr	r5, [r7, #8]
        CLEAR_BIT(temp, (0x0Fu) << (4u * (position & 0x03u)));
 8001716:	fa0b fb0a 	lsl.w	fp, fp, sl
 800171a:	ea25 0b0b 	bic.w	fp, r5, fp
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4u * (position & 0x03u)));
 800171e:	4d35      	ldr	r5, [pc, #212]	@ (80017f4 <HAL_GPIO_Init+0x198>)
 8001720:	42a8      	cmp	r0, r5
 8001722:	d05a      	beq.n	80017da <HAL_GPIO_Init+0x17e>
 8001724:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 8001728:	42a8      	cmp	r0, r5
 800172a:	d058      	beq.n	80017de <HAL_GPIO_Init+0x182>
 800172c:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 8001730:	42a8      	cmp	r0, r5
 8001732:	bf14      	ite	ne
 8001734:	2503      	movne	r5, #3
 8001736:	2502      	moveq	r5, #2
 8001738:	fa05 f50a 	lsl.w	r5, r5, sl
 800173c:	ea45 050b 	orr.w	r5, r5, fp
        AFIO->EXTICR[position >> 2u] = temp;
 8001740:	60bd      	str	r5, [r7, #8]
          SET_BIT(EXTI->RTSR, iocurrent);
 8001742:	689d      	ldr	r5, [r3, #8]
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8001744:	f419 1f80 	tst.w	r9, #1048576	@ 0x100000
          SET_BIT(EXTI->RTSR, iocurrent);
 8001748:	bf14      	ite	ne
 800174a:	4325      	orrne	r5, r4
          CLEAR_BIT(EXTI->RTSR, iocurrent);
 800174c:	43a5      	biceq	r5, r4
 800174e:	609d      	str	r5, [r3, #8]
          SET_BIT(EXTI->FTSR, iocurrent);
 8001750:	68dd      	ldr	r5, [r3, #12]
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001752:	f419 1f00 	tst.w	r9, #2097152	@ 0x200000
          SET_BIT(EXTI->FTSR, iocurrent);
 8001756:	bf14      	ite	ne
 8001758:	4325      	orrne	r5, r4
          CLEAR_BIT(EXTI->FTSR, iocurrent);
 800175a:	43a5      	biceq	r5, r4
 800175c:	60dd      	str	r5, [r3, #12]
          SET_BIT(EXTI->EMR, iocurrent);
 800175e:	685d      	ldr	r5, [r3, #4]
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8001760:	f419 3f00 	tst.w	r9, #131072	@ 0x20000
          SET_BIT(EXTI->EMR, iocurrent);
 8001764:	bf14      	ite	ne
 8001766:	4325      	orrne	r5, r4
          CLEAR_BIT(EXTI->EMR, iocurrent);
 8001768:	43a5      	biceq	r5, r4
 800176a:	605d      	str	r5, [r3, #4]
          SET_BIT(EXTI->IMR, iocurrent);
 800176c:	681d      	ldr	r5, [r3, #0]
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800176e:	f419 3f80 	tst.w	r9, #65536	@ 0x10000
          SET_BIT(EXTI->IMR, iocurrent);
 8001772:	bf14      	ite	ne
 8001774:	4325      	orrne	r5, r4
          CLEAR_BIT(EXTI->IMR, iocurrent);
 8001776:	43a5      	biceq	r5, r4
 8001778:	601d      	str	r5, [r3, #0]
	position++;
 800177a:	3601      	adds	r6, #1
 800177c:	e779      	b.n	8001672 <HAL_GPIO_Init+0x16>
      switch (GPIO_Init->Mode)
 800177e:	f8df 9078 	ldr.w	r9, [pc, #120]	@ 80017f8 <HAL_GPIO_Init+0x19c>
 8001782:	454d      	cmp	r5, r9
 8001784:	d008      	beq.n	8001798 <HAL_GPIO_Init+0x13c>
 8001786:	d811      	bhi.n	80017ac <HAL_GPIO_Init+0x150>
 8001788:	f5a9 1980 	sub.w	r9, r9, #1048576	@ 0x100000
 800178c:	454d      	cmp	r5, r9
 800178e:	d003      	beq.n	8001798 <HAL_GPIO_Init+0x13c>
 8001790:	4575      	cmp	r5, lr
 8001792:	d001      	beq.n	8001798 <HAL_GPIO_Init+0x13c>
 8001794:	4545      	cmp	r5, r8
 8001796:	d18b      	bne.n	80016b0 <HAL_GPIO_Init+0x54>
          if (GPIO_Init->Pull == GPIO_NOPULL)
 8001798:	688a      	ldr	r2, [r1, #8]
 800179a:	b1e2      	cbz	r2, 80017d6 <HAL_GPIO_Init+0x17a>
          else if (GPIO_Init->Pull == GPIO_PULLUP)
 800179c:	2a01      	cmp	r2, #1
            GPIOx->BSRR = ioposition;
 800179e:	bf08      	it	eq
 80017a0:	6107      	streq	r7, [r0, #16]
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 80017a2:	f04f 0208 	mov.w	r2, #8
            GPIOx->BRR = ioposition;
 80017a6:	bf18      	it	ne
 80017a8:	6147      	strne	r7, [r0, #20]
 80017aa:	e781      	b.n	80016b0 <HAL_GPIO_Init+0x54>
      switch (GPIO_Init->Mode)
 80017ac:	f8df 904c 	ldr.w	r9, [pc, #76]	@ 80017fc <HAL_GPIO_Init+0x1a0>
 80017b0:	454d      	cmp	r5, r9
 80017b2:	d0f1      	beq.n	8001798 <HAL_GPIO_Init+0x13c>
 80017b4:	f509 3980 	add.w	r9, r9, #65536	@ 0x10000
 80017b8:	454d      	cmp	r5, r9
 80017ba:	e7ec      	b.n	8001796 <HAL_GPIO_Init+0x13a>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_PP;
 80017bc:	68ca      	ldr	r2, [r1, #12]
          break;
 80017be:	e777      	b.n	80016b0 <HAL_GPIO_Init+0x54>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_OD;
 80017c0:	68ca      	ldr	r2, [r1, #12]
 80017c2:	3204      	adds	r2, #4
          break;
 80017c4:	e774      	b.n	80016b0 <HAL_GPIO_Init+0x54>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_PP;
 80017c6:	68ca      	ldr	r2, [r1, #12]
 80017c8:	3208      	adds	r2, #8
          break;
 80017ca:	e771      	b.n	80016b0 <HAL_GPIO_Init+0x54>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_OD;
 80017cc:	68ca      	ldr	r2, [r1, #12]
 80017ce:	320c      	adds	r2, #12
          break;
 80017d0:	e76e      	b.n	80016b0 <HAL_GPIO_Init+0x54>
      switch (GPIO_Init->Mode)
 80017d2:	2200      	movs	r2, #0
 80017d4:	e76c      	b.n	80016b0 <HAL_GPIO_Init+0x54>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_FLOATING;
 80017d6:	2204      	movs	r2, #4
 80017d8:	e76a      	b.n	80016b0 <HAL_GPIO_Init+0x54>
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4u * (position & 0x03u)));
 80017da:	2500      	movs	r5, #0
 80017dc:	e7ac      	b.n	8001738 <HAL_GPIO_Init+0xdc>
 80017de:	2501      	movs	r5, #1
 80017e0:	e7aa      	b.n	8001738 <HAL_GPIO_Init+0xdc>
 80017e2:	bf00      	nop
 80017e4:	40021000 	.word	0x40021000
 80017e8:	40010400 	.word	0x40010400
 80017ec:	10210000 	.word	0x10210000
 80017f0:	10110000 	.word	0x10110000
 80017f4:	40010800 	.word	0x40010800
 80017f8:	10220000 	.word	0x10220000
 80017fc:	10310000 	.word	0x10310000

08001800 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001800:	6801      	ldr	r1, [r0, #0]
 8001802:	2200      	movs	r2, #0
 8001804:	694b      	ldr	r3, [r1, #20]
 8001806:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 800180a:	d010      	beq.n	800182e <I2C_IsAcknowledgeFailed+0x2e>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800180c:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8001810:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8001812:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8001814:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8001816:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800181a:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800181e:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8001820:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8001824:	f043 0304 	orr.w	r3, r3, #4
 8001828:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 800182a:	2001      	movs	r0, #1
 800182c:	4770      	bx	lr
  }
  return HAL_OK;
 800182e:	4618      	mov	r0, r3
}
 8001830:	4770      	bx	lr

08001832 <I2C_WaitOnFlagUntilTimeout>:
{
 8001832:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8001836:	4606      	mov	r6, r0
 8001838:	460f      	mov	r7, r1
 800183a:	4691      	mov	r9, r2
 800183c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800183e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8001842:	6833      	ldr	r3, [r6, #0]
 8001844:	f1ba 0f01 	cmp.w	sl, #1
 8001848:	bf0c      	ite	eq
 800184a:	695c      	ldreq	r4, [r3, #20]
 800184c:	699c      	ldrne	r4, [r3, #24]
 800184e:	ea27 0404 	bic.w	r4, r7, r4
 8001852:	b2a4      	uxth	r4, r4
 8001854:	fab4 f484 	clz	r4, r4
 8001858:	0964      	lsrs	r4, r4, #5
 800185a:	45a1      	cmp	r9, r4
 800185c:	d001      	beq.n	8001862 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800185e:	2000      	movs	r0, #0
 8001860:	e025      	b.n	80018ae <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8001862:	1c6a      	adds	r2, r5, #1
 8001864:	d0ee      	beq.n	8001844 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001866:	f7ff fe8b 	bl	8001580 <HAL_GetTick>
 800186a:	9b08      	ldr	r3, [sp, #32]
 800186c:	1ac0      	subs	r0, r0, r3
 800186e:	42a8      	cmp	r0, r5
 8001870:	d801      	bhi.n	8001876 <I2C_WaitOnFlagUntilTimeout+0x44>
 8001872:	2d00      	cmp	r5, #0
 8001874:	d1e5      	bne.n	8001842 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8001876:	6833      	ldr	r3, [r6, #0]
 8001878:	f1ba 0f01 	cmp.w	sl, #1
 800187c:	bf0c      	ite	eq
 800187e:	695b      	ldreq	r3, [r3, #20]
 8001880:	699b      	ldrne	r3, [r3, #24]
 8001882:	ea27 0303 	bic.w	r3, r7, r3
 8001886:	b29b      	uxth	r3, r3
 8001888:	fab3 f383 	clz	r3, r3
 800188c:	095b      	lsrs	r3, r3, #5
 800188e:	4599      	cmp	r9, r3
 8001890:	d1d7      	bne.n	8001842 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8001892:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8001894:	2220      	movs	r2, #32
          return HAL_ERROR;
 8001896:	2001      	movs	r0, #1
          hi2c->PreviousState     = I2C_STATE_NONE;
 8001898:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800189a:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800189e:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80018a2:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80018a4:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80018a8:	f042 0220 	orr.w	r2, r2, #32
 80018ac:	6432      	str	r2, [r6, #64]	@ 0x40
}
 80018ae:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080018b2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80018b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80018b6:	4604      	mov	r4, r0
 80018b8:	460f      	mov	r7, r1
 80018ba:	4616      	mov	r6, r2
 80018bc:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80018be:	6825      	ldr	r5, [r4, #0]
 80018c0:	6968      	ldr	r0, [r5, #20]
 80018c2:	ea27 0000 	bic.w	r0, r7, r0
 80018c6:	b280      	uxth	r0, r0
 80018c8:	b1c0      	cbz	r0, 80018fc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80018ca:	696b      	ldr	r3, [r5, #20]
 80018cc:	055a      	lsls	r2, r3, #21
 80018ce:	d517      	bpl.n	8001900 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80018d0:	682b      	ldr	r3, [r5, #0]
      hi2c->State               = HAL_I2C_STATE_READY;
 80018d2:	2220      	movs	r2, #32
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80018d4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80018d8:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80018da:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80018de:	616b      	str	r3, [r5, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80018e0:	2300      	movs	r3, #0
 80018e2:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80018e4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80018e8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80018ec:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80018ee:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80018f2:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80018f4:	2300      	movs	r3, #0
      return HAL_ERROR;
 80018f6:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
 80018f8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 80018fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8001900:	1c73      	adds	r3, r6, #1
 8001902:	d0dd      	beq.n	80018c0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001904:	f7ff fe3c 	bl	8001580 <HAL_GetTick>
 8001908:	eba0 0008 	sub.w	r0, r0, r8
 800190c:	42b0      	cmp	r0, r6
 800190e:	d801      	bhi.n	8001914 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8001910:	2e00      	cmp	r6, #0
 8001912:	d1d4      	bne.n	80018be <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8001914:	6823      	ldr	r3, [r4, #0]
 8001916:	695a      	ldr	r2, [r3, #20]
 8001918:	ea27 0202 	bic.w	r2, r7, r2
 800191c:	b292      	uxth	r2, r2
 800191e:	2a00      	cmp	r2, #0
 8001920:	d0cd      	beq.n	80018be <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8001922:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 8001924:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8001926:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8001928:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800192c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8001930:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001932:	4313      	orrs	r3, r2
 8001934:	e7dd      	b.n	80018f2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08001936 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8001936:	b570      	push	{r4, r5, r6, lr}
 8001938:	4604      	mov	r4, r0
 800193a:	460d      	mov	r5, r1
 800193c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800193e:	6823      	ldr	r3, [r4, #0]
 8001940:	695b      	ldr	r3, [r3, #20]
 8001942:	061b      	lsls	r3, r3, #24
 8001944:	d501      	bpl.n	800194a <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8001946:	2000      	movs	r0, #0
 8001948:	e01e      	b.n	8001988 <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800194a:	4620      	mov	r0, r4
 800194c:	f7ff ff58 	bl	8001800 <I2C_IsAcknowledgeFailed>
 8001950:	b9c8      	cbnz	r0, 8001986 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8001952:	1c6a      	adds	r2, r5, #1
 8001954:	d0f3      	beq.n	800193e <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001956:	f7ff fe13 	bl	8001580 <HAL_GetTick>
 800195a:	1b80      	subs	r0, r0, r6
 800195c:	42a8      	cmp	r0, r5
 800195e:	d801      	bhi.n	8001964 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8001960:	2d00      	cmp	r5, #0
 8001962:	d1ec      	bne.n	800193e <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8001964:	6823      	ldr	r3, [r4, #0]
 8001966:	695b      	ldr	r3, [r3, #20]
 8001968:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 800196c:	d1e7      	bne.n	800193e <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800196e:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8001970:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8001972:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8001976:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800197a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800197c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8001980:	f042 0220 	orr.w	r2, r2, #32
 8001984:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8001986:	2001      	movs	r0, #1
}
 8001988:	bd70      	pop	{r4, r5, r6, pc}
	...

0800198c <I2C_RequestMemoryRead>:
{
 800198c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001990:	469a      	mov	sl, r3
 8001992:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8001996:	6803      	ldr	r3, [r0, #0]
{
 8001998:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800199a:	681a      	ldr	r2, [r3, #0]
{
 800199c:	460e      	mov	r6, r1
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800199e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80019a2:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80019a4:	681a      	ldr	r2, [r3, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80019a6:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80019aa:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80019ae:	601a      	str	r2, [r3, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80019b0:	463b      	mov	r3, r7
 80019b2:	2200      	movs	r2, #0
 80019b4:	f8cd 8000 	str.w	r8, [sp]
{
 80019b8:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80019ba:	f7ff ff3a 	bl	8001832 <I2C_WaitOnFlagUntilTimeout>
 80019be:	6823      	ldr	r3, [r4, #0]
 80019c0:	b148      	cbz	r0, 80019d6 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80019c2:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80019c4:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80019c6:	bf48      	it	mi
 80019c8:	f44f 7300 	movmi.w	r3, #512	@ 0x200
    return HAL_TIMEOUT;
 80019cc:	f04f 0003 	mov.w	r0, #3
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80019d0:	bf48      	it	mi
 80019d2:	6423      	strmi	r3, [r4, #64]	@ 0x40
 80019d4:	e021      	b.n	8001a1a <I2C_RequestMemoryRead+0x8e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80019d6:	fa5f f986 	uxtb.w	r9, r6
 80019da:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 80019de:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80019e0:	463a      	mov	r2, r7
 80019e2:	4643      	mov	r3, r8
 80019e4:	4620      	mov	r0, r4
 80019e6:	492a      	ldr	r1, [pc, #168]	@ (8001a90 <I2C_RequestMemoryRead+0x104>)
 80019e8:	f7ff ff63 	bl	80018b2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80019ec:	b9a0      	cbnz	r0, 8001a18 <I2C_RequestMemoryRead+0x8c>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80019ee:	6823      	ldr	r3, [r4, #0]
 80019f0:	9003      	str	r0, [sp, #12]
 80019f2:	695a      	ldr	r2, [r3, #20]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80019f4:	4639      	mov	r1, r7
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80019f6:	9203      	str	r2, [sp, #12]
 80019f8:	699b      	ldr	r3, [r3, #24]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80019fa:	4642      	mov	r2, r8
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80019fc:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80019fe:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001a00:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001a02:	f7ff ff98 	bl	8001936 <I2C_WaitOnTXEFlagUntilTimeout>
 8001a06:	b158      	cbz	r0, 8001a20 <I2C_RequestMemoryRead+0x94>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8001a08:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001a0a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8001a0c:	bf01      	itttt	eq
 8001a0e:	6822      	ldreq	r2, [r4, #0]
 8001a10:	6813      	ldreq	r3, [r2, #0]
 8001a12:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8001a16:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8001a18:	2001      	movs	r0, #1
}
 8001a1a:	b004      	add	sp, #16
 8001a1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8001a20:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8001a24:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8001a26:	d11a      	bne.n	8001a5e <I2C_RequestMemoryRead+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8001a28:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001a2a:	4642      	mov	r2, r8
 8001a2c:	4639      	mov	r1, r7
 8001a2e:	4620      	mov	r0, r4
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8001a30:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001a32:	f7ff ff80 	bl	8001936 <I2C_WaitOnTXEFlagUntilTimeout>
 8001a36:	4602      	mov	r2, r0
 8001a38:	2800      	cmp	r0, #0
 8001a3a:	d1e5      	bne.n	8001a08 <I2C_RequestMemoryRead+0x7c>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8001a3c:	6821      	ldr	r1, [r4, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8001a3e:	4620      	mov	r0, r4
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8001a40:	680b      	ldr	r3, [r1, #0]
 8001a42:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001a46:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8001a48:	463b      	mov	r3, r7
 8001a4a:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8001a4e:	f8cd 8000 	str.w	r8, [sp]
 8001a52:	f7ff feee 	bl	8001832 <I2C_WaitOnFlagUntilTimeout>
 8001a56:	6822      	ldr	r2, [r4, #0]
 8001a58:	b160      	cbz	r0, 8001a74 <I2C_RequestMemoryRead+0xe8>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8001a5a:	6813      	ldr	r3, [r2, #0]
 8001a5c:	e7b2      	b.n	80019c4 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8001a5e:	0a2a      	lsrs	r2, r5, #8
 8001a60:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001a62:	4639      	mov	r1, r7
 8001a64:	4642      	mov	r2, r8
 8001a66:	4620      	mov	r0, r4
 8001a68:	f7ff ff65 	bl	8001936 <I2C_WaitOnTXEFlagUntilTimeout>
 8001a6c:	2800      	cmp	r0, #0
 8001a6e:	d1cb      	bne.n	8001a08 <I2C_RequestMemoryRead+0x7c>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8001a70:	6823      	ldr	r3, [r4, #0]
 8001a72:	e7d9      	b.n	8001a28 <I2C_RequestMemoryRead+0x9c>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8001a74:	f049 0301 	orr.w	r3, r9, #1
 8001a78:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8001a7a:	4620      	mov	r0, r4
 8001a7c:	4643      	mov	r3, r8
 8001a7e:	463a      	mov	r2, r7
 8001a80:	4903      	ldr	r1, [pc, #12]	@ (8001a90 <I2C_RequestMemoryRead+0x104>)
 8001a82:	f7ff ff16 	bl	80018b2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001a86:	3800      	subs	r0, #0
 8001a88:	bf18      	it	ne
 8001a8a:	2001      	movne	r0, #1
 8001a8c:	e7c5      	b.n	8001a1a <I2C_RequestMemoryRead+0x8e>
 8001a8e:	bf00      	nop
 8001a90:	00010002 	.word	0x00010002

08001a94 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8001a94:	b570      	push	{r4, r5, r6, lr}
 8001a96:	4604      	mov	r4, r0
 8001a98:	460d      	mov	r5, r1
 8001a9a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8001a9c:	6821      	ldr	r1, [r4, #0]
 8001a9e:	694b      	ldr	r3, [r1, #20]
 8001aa0:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8001aa4:	d001      	beq.n	8001aaa <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8001aa6:	2000      	movs	r0, #0
 8001aa8:	e011      	b.n	8001ace <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8001aaa:	694a      	ldr	r2, [r1, #20]
 8001aac:	06d2      	lsls	r2, r2, #27
 8001aae:	d50f      	bpl.n	8001ad0 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001ab0:	f06f 0210 	mvn.w	r2, #16
 8001ab4:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8001ab6:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8001ab8:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8001aba:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8001abe:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8001ac2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8001ac4:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 8001ac6:	2300      	movs	r3, #0
      return HAL_ERROR;
 8001ac8:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
 8001aca:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 8001ace:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001ad0:	f7ff fd56 	bl	8001580 <HAL_GetTick>
 8001ad4:	1b80      	subs	r0, r0, r6
 8001ad6:	42a8      	cmp	r0, r5
 8001ad8:	d801      	bhi.n	8001ade <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8001ada:	2d00      	cmp	r5, #0
 8001adc:	d1de      	bne.n	8001a9c <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8001ade:	6823      	ldr	r3, [r4, #0]
 8001ae0:	695b      	ldr	r3, [r3, #20]
 8001ae2:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8001ae6:	d1d9      	bne.n	8001a9c <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8001ae8:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8001aea:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8001aec:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8001af0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8001af4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001af6:	4313      	orrs	r3, r2
 8001af8:	e7e4      	b.n	8001ac4 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08001afc <HAL_I2C_Init>:
{
 8001afc:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8001afe:	4604      	mov	r4, r0
 8001b00:	b908      	cbnz	r0, 8001b06 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8001b02:	2001      	movs	r0, #1
}
 8001b04:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8001b06:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8001b0a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8001b0e:	b91b      	cbnz	r3, 8001b18 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8001b10:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8001b14:	f7ff fbf8 	bl	8001308 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8001b18:	2324      	movs	r3, #36	@ 0x24
 8001b1a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8001b1e:	6823      	ldr	r3, [r4, #0]
 8001b20:	681a      	ldr	r2, [r3, #0]
 8001b22:	f022 0201 	bic.w	r2, r2, #1
 8001b26:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8001b28:	681a      	ldr	r2, [r3, #0]
 8001b2a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8001b2e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8001b30:	681a      	ldr	r2, [r3, #0]
 8001b32:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8001b36:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8001b38:	f000 fc2a 	bl	8002390 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8001b3c:	4b3f      	ldr	r3, [pc, #252]	@ (8001c3c <HAL_I2C_Init+0x140>)
 8001b3e:	6865      	ldr	r5, [r4, #4]
 8001b40:	429d      	cmp	r5, r3
 8001b42:	bf94      	ite	ls
 8001b44:	4b3e      	ldrls	r3, [pc, #248]	@ (8001c40 <HAL_I2C_Init+0x144>)
 8001b46:	4b3f      	ldrhi	r3, [pc, #252]	@ (8001c44 <HAL_I2C_Init+0x148>)
 8001b48:	4298      	cmp	r0, r3
 8001b4a:	bf8c      	ite	hi
 8001b4c:	2300      	movhi	r3, #0
 8001b4e:	2301      	movls	r3, #1
 8001b50:	2b00      	cmp	r3, #0
 8001b52:	d1d6      	bne.n	8001b02 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8001b54:	4e39      	ldr	r6, [pc, #228]	@ (8001c3c <HAL_I2C_Init+0x140>)
  freqrange = I2C_FREQRANGE(pclk1);
 8001b56:	4b3c      	ldr	r3, [pc, #240]	@ (8001c48 <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8001b58:	42b5      	cmp	r5, r6
  freqrange = I2C_FREQRANGE(pclk1);
 8001b5a:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8001b5e:	bf88      	it	hi
 8001b60:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8001b64:	6822      	ldr	r2, [r4, #0]
 8001b66:	6851      	ldr	r1, [r2, #4]
 8001b68:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8001b6c:	ea41 0103 	orr.w	r1, r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8001b70:	bf82      	ittt	hi
 8001b72:	4373      	mulhi	r3, r6
 8001b74:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8001b78:	fbb3 f3f6 	udivhi	r3, r3, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8001b7c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8001b7e:	6a11      	ldr	r1, [r2, #32]
 8001b80:	3301      	adds	r3, #1
 8001b82:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8001b86:	430b      	orrs	r3, r1
 8001b88:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8001b8a:	69d1      	ldr	r1, [r2, #28]
 8001b8c:	1e43      	subs	r3, r0, #1
 8001b8e:	482b      	ldr	r0, [pc, #172]	@ (8001c3c <HAL_I2C_Init+0x140>)
 8001b90:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8001b94:	4285      	cmp	r5, r0
 8001b96:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8001b9a:	d832      	bhi.n	8001c02 <HAL_I2C_Init+0x106>
 8001b9c:	006d      	lsls	r5, r5, #1
 8001b9e:	fbb3 f3f5 	udiv	r3, r3, r5
 8001ba2:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8001ba6:	3301      	adds	r3, #1
 8001ba8:	4203      	tst	r3, r0
 8001baa:	d042      	beq.n	8001c32 <HAL_I2C_Init+0x136>
 8001bac:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001bb0:	4319      	orrs	r1, r3
 8001bb2:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8001bb4:	6811      	ldr	r1, [r2, #0]
 8001bb6:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8001bba:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8001bbe:	4303      	orrs	r3, r0
 8001bc0:	430b      	orrs	r3, r1
 8001bc2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8001bc4:	6891      	ldr	r1, [r2, #8]
 8001bc6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8001bca:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8001bce:	4303      	orrs	r3, r0
 8001bd0:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8001bd4:	430b      	orrs	r3, r1
 8001bd6:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8001bd8:	68d1      	ldr	r1, [r2, #12]
 8001bda:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8001bde:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8001be2:	4303      	orrs	r3, r0
 8001be4:	430b      	orrs	r3, r1
 8001be6:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8001be8:	6813      	ldr	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001bea:	2000      	movs	r0, #0
  __HAL_I2C_ENABLE(hi2c);
 8001bec:	f043 0301 	orr.w	r3, r3, #1
 8001bf0:	6013      	str	r3, [r2, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8001bf2:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001bf4:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8001bf6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8001bfa:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8001bfc:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8001c00:	e780      	b.n	8001b04 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8001c02:	68a0      	ldr	r0, [r4, #8]
 8001c04:	b950      	cbnz	r0, 8001c1c <HAL_I2C_Init+0x120>
 8001c06:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8001c0a:	fbb3 f3f5 	udiv	r3, r3, r5
 8001c0e:	3301      	adds	r3, #1
 8001c10:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001c14:	b17b      	cbz	r3, 8001c36 <HAL_I2C_Init+0x13a>
 8001c16:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001c1a:	e7c9      	b.n	8001bb0 <HAL_I2C_Init+0xb4>
 8001c1c:	2019      	movs	r0, #25
 8001c1e:	4368      	muls	r0, r5
 8001c20:	fbb3 f3f0 	udiv	r3, r3, r0
 8001c24:	3301      	adds	r3, #1
 8001c26:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001c2a:	b123      	cbz	r3, 8001c36 <HAL_I2C_Init+0x13a>
 8001c2c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001c30:	e7be      	b.n	8001bb0 <HAL_I2C_Init+0xb4>
 8001c32:	2304      	movs	r3, #4
 8001c34:	e7bc      	b.n	8001bb0 <HAL_I2C_Init+0xb4>
 8001c36:	2301      	movs	r3, #1
 8001c38:	e7ba      	b.n	8001bb0 <HAL_I2C_Init+0xb4>
 8001c3a:	bf00      	nop
 8001c3c:	000186a0 	.word	0x000186a0
 8001c40:	001e847f 	.word	0x001e847f
 8001c44:	003d08ff 	.word	0x003d08ff
 8001c48:	000f4240 	.word	0x000f4240

08001c4c <HAL_I2C_Mem_Read>:
{
 8001c4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c50:	4699      	mov	r9, r3
  __IO uint32_t count = 0U;
 8001c52:	2300      	movs	r3, #0
{
 8001c54:	4604      	mov	r4, r0
 8001c56:	b089      	sub	sp, #36	@ 0x24
  __IO uint32_t count = 0U;
 8001c58:	9303      	str	r3, [sp, #12]
{
 8001c5a:	460d      	mov	r5, r1
 8001c5c:	4690      	mov	r8, r2
 8001c5e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
  uint32_t tickstart = HAL_GetTick();
 8001c60:	f7ff fc8e 	bl	8001580 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001c64:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
  uint32_t tickstart = HAL_GetTick();
 8001c68:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001c6a:	2b20      	cmp	r3, #32
 8001c6c:	d004      	beq.n	8001c78 <HAL_I2C_Mem_Read+0x2c>
      return HAL_BUSY;
 8001c6e:	2502      	movs	r5, #2
}
 8001c70:	4628      	mov	r0, r5
 8001c72:	b009      	add	sp, #36	@ 0x24
 8001c74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8001c78:	9000      	str	r0, [sp, #0]
 8001c7a:	2319      	movs	r3, #25
 8001c7c:	2201      	movs	r2, #1
 8001c7e:	4620      	mov	r0, r4
 8001c80:	4990      	ldr	r1, [pc, #576]	@ (8001ec4 <HAL_I2C_Mem_Read+0x278>)
 8001c82:	f7ff fdd6 	bl	8001832 <I2C_WaitOnFlagUntilTimeout>
 8001c86:	2800      	cmp	r0, #0
 8001c88:	d1f1      	bne.n	8001c6e <HAL_I2C_Mem_Read+0x22>
    __HAL_LOCK(hi2c);
 8001c8a:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8001c8e:	2b01      	cmp	r3, #1
 8001c90:	d0ed      	beq.n	8001c6e <HAL_I2C_Mem_Read+0x22>
 8001c92:	2301      	movs	r3, #1
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8001c94:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8001c96:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8001c9a:	6803      	ldr	r3, [r0, #0]
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8001c9c:	4629      	mov	r1, r5
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8001c9e:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8001ca0:	bf58      	it	pl
 8001ca2:	6803      	ldrpl	r3, [r0, #0]
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8001ca4:	4642      	mov	r2, r8
      __HAL_I2C_ENABLE(hi2c);
 8001ca6:	bf5c      	itt	pl
 8001ca8:	f043 0301 	orrpl.w	r3, r3, #1
 8001cac:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8001cae:	6803      	ldr	r3, [r0, #0]
 8001cb0:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8001cb4:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8001cb6:	2322      	movs	r3, #34	@ 0x22
 8001cb8:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8001cbc:	2340      	movs	r3, #64	@ 0x40
 8001cbe:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001cc2:	2300      	movs	r3, #0
 8001cc4:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8001cc6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8001cc8:	4620      	mov	r0, r4
    hi2c->pBuffPtr    = pData;
 8001cca:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8001ccc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8001cd0:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8001cd2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8001cd4:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8001cd6:	4b7c      	ldr	r3, [pc, #496]	@ (8001ec8 <HAL_I2C_Mem_Read+0x27c>)
 8001cd8:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8001cda:	464b      	mov	r3, r9
 8001cdc:	e9cd 7600 	strd	r7, r6, [sp]
 8001ce0:	f7ff fe54 	bl	800198c <I2C_RequestMemoryRead>
 8001ce4:	4605      	mov	r5, r0
 8001ce6:	2800      	cmp	r0, #0
 8001ce8:	f040 80ba 	bne.w	8001e60 <HAL_I2C_Mem_Read+0x214>
    if (hi2c->XferSize == 0U)
 8001cec:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001cee:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8001cf0:	b9c2      	cbnz	r2, 8001d24 <HAL_I2C_Mem_Read+0xd8>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001cf2:	9004      	str	r0, [sp, #16]
 8001cf4:	695a      	ldr	r2, [r3, #20]
 8001cf6:	9204      	str	r2, [sp, #16]
 8001cf8:	699a      	ldr	r2, [r3, #24]
 8001cfa:	9204      	str	r2, [sp, #16]
 8001cfc:	9a04      	ldr	r2, [sp, #16]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8001cfe:	681a      	ldr	r2, [r3, #0]
 8001d00:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001d04:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8001d06:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8001ecc <HAL_I2C_Mem_Read+0x280>
          count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8001d0a:	f8df 91c4 	ldr.w	r9, [pc, #452]	@ 8001ed0 <HAL_I2C_Mem_Read+0x284>
    while (hi2c->XferSize > 0U)
 8001d0e:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8001d10:	2b00      	cmp	r3, #0
 8001d12:	d137      	bne.n	8001d84 <HAL_I2C_Mem_Read+0x138>
    hi2c->State = HAL_I2C_STATE_READY;
 8001d14:	2220      	movs	r2, #32
    __HAL_UNLOCK(hi2c);
 8001d16:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->State = HAL_I2C_STATE_READY;
 8001d1a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001d1e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8001d22:	e7a5      	b.n	8001c70 <HAL_I2C_Mem_Read+0x24>
    else if (hi2c->XferSize == 1U)
 8001d24:	2a01      	cmp	r2, #1
 8001d26:	d111      	bne.n	8001d4c <HAL_I2C_Mem_Read+0x100>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8001d28:	681a      	ldr	r2, [r3, #0]
 8001d2a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001d2e:	601a      	str	r2, [r3, #0]
 8001d30:	b672      	cpsid	i
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001d32:	6823      	ldr	r3, [r4, #0]
 8001d34:	9005      	str	r0, [sp, #20]
 8001d36:	695a      	ldr	r2, [r3, #20]
 8001d38:	9205      	str	r2, [sp, #20]
 8001d3a:	699a      	ldr	r2, [r3, #24]
 8001d3c:	9205      	str	r2, [sp, #20]
 8001d3e:	9a05      	ldr	r2, [sp, #20]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8001d40:	681a      	ldr	r2, [r3, #0]
 8001d42:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001d46:	601a      	str	r2, [r3, #0]
  __ASM volatile ("cpsie i" : : : "memory");
 8001d48:	b662      	cpsie	i
}
 8001d4a:	e7dc      	b.n	8001d06 <HAL_I2C_Mem_Read+0xba>
    else if (hi2c->XferSize == 2U)
 8001d4c:	2a02      	cmp	r2, #2
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8001d4e:	681a      	ldr	r2, [r3, #0]
    else if (hi2c->XferSize == 2U)
 8001d50:	d10e      	bne.n	8001d70 <HAL_I2C_Mem_Read+0x124>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8001d52:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8001d56:	601a      	str	r2, [r3, #0]
  __ASM volatile ("cpsid i" : : : "memory");
 8001d58:	b672      	cpsid	i
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001d5a:	6823      	ldr	r3, [r4, #0]
 8001d5c:	9006      	str	r0, [sp, #24]
 8001d5e:	695a      	ldr	r2, [r3, #20]
 8001d60:	9206      	str	r2, [sp, #24]
 8001d62:	699a      	ldr	r2, [r3, #24]
 8001d64:	9206      	str	r2, [sp, #24]
 8001d66:	9a06      	ldr	r2, [sp, #24]
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8001d68:	681a      	ldr	r2, [r3, #0]
 8001d6a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001d6e:	e7ea      	b.n	8001d46 <HAL_I2C_Mem_Read+0xfa>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8001d70:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8001d74:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001d76:	9007      	str	r0, [sp, #28]
 8001d78:	695a      	ldr	r2, [r3, #20]
 8001d7a:	9207      	str	r2, [sp, #28]
 8001d7c:	699b      	ldr	r3, [r3, #24]
 8001d7e:	9307      	str	r3, [sp, #28]
 8001d80:	9b07      	ldr	r3, [sp, #28]
 8001d82:	e7c0      	b.n	8001d06 <HAL_I2C_Mem_Read+0xba>
      if (hi2c->XferSize <= 3U)
 8001d84:	2b03      	cmp	r3, #3
 8001d86:	d878      	bhi.n	8001e7a <HAL_I2C_Mem_Read+0x22e>
        if (hi2c->XferSize == 1U)
 8001d88:	2b01      	cmp	r3, #1
 8001d8a:	d115      	bne.n	8001db8 <HAL_I2C_Mem_Read+0x16c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001d8c:	4632      	mov	r2, r6
 8001d8e:	4639      	mov	r1, r7
 8001d90:	4620      	mov	r0, r4
 8001d92:	f7ff fe7f 	bl	8001a94 <I2C_WaitOnRXNEFlagUntilTimeout>
 8001d96:	2800      	cmp	r0, #0
 8001d98:	d162      	bne.n	8001e60 <HAL_I2C_Mem_Read+0x214>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8001d9a:	6823      	ldr	r3, [r4, #0]
 8001d9c:	691a      	ldr	r2, [r3, #16]
 8001d9e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8001da0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8001da2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8001da4:	3301      	adds	r3, #1
 8001da6:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8001da8:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8001daa:	3b01      	subs	r3, #1
 8001dac:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8001dae:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8001db0:	3b01      	subs	r3, #1
 8001db2:	b29b      	uxth	r3, r3
 8001db4:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8001db6:	e7aa      	b.n	8001d0e <HAL_I2C_Mem_Read+0xc2>
        else if (hi2c->XferSize == 2U)
 8001db8:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8001dba:	f04f 0200 	mov.w	r2, #0
 8001dbe:	463b      	mov	r3, r7
 8001dc0:	4641      	mov	r1, r8
 8001dc2:	4620      	mov	r0, r4
 8001dc4:	9600      	str	r6, [sp, #0]
        else if (hi2c->XferSize == 2U)
 8001dc6:	d118      	bne.n	8001dfa <HAL_I2C_Mem_Read+0x1ae>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8001dc8:	f7ff fd33 	bl	8001832 <I2C_WaitOnFlagUntilTimeout>
 8001dcc:	2800      	cmp	r0, #0
 8001dce:	d147      	bne.n	8001e60 <HAL_I2C_Mem_Read+0x214>
 8001dd0:	b672      	cpsid	i
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8001dd2:	6823      	ldr	r3, [r4, #0]
 8001dd4:	681a      	ldr	r2, [r3, #0]
 8001dd6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001dda:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8001ddc:	691a      	ldr	r2, [r3, #16]
 8001dde:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8001de0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8001de2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8001de4:	3301      	adds	r3, #1
 8001de6:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8001de8:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8001dea:	3b01      	subs	r3, #1
 8001dec:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8001dee:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8001df0:	3b01      	subs	r3, #1
 8001df2:	b29b      	uxth	r3, r3
 8001df4:	8563      	strh	r3, [r4, #42]	@ 0x2a
  __ASM volatile ("cpsie i" : : : "memory");
 8001df6:	b662      	cpsie	i
 8001df8:	e7cf      	b.n	8001d9a <HAL_I2C_Mem_Read+0x14e>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8001dfa:	f7ff fd1a 	bl	8001832 <I2C_WaitOnFlagUntilTimeout>
 8001dfe:	2800      	cmp	r0, #0
 8001e00:	d12e      	bne.n	8001e60 <HAL_I2C_Mem_Read+0x214>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8001e02:	6822      	ldr	r2, [r4, #0]
 8001e04:	6813      	ldr	r3, [r2, #0]
 8001e06:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001e0a:	6013      	str	r3, [r2, #0]
  __ASM volatile ("cpsid i" : : : "memory");
 8001e0c:	b672      	cpsid	i
          count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8001e0e:	f246 11a8 	movw	r1, #25000	@ 0x61a8
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8001e12:	6823      	ldr	r3, [r4, #0]
 8001e14:	691a      	ldr	r2, [r3, #16]
 8001e16:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8001e18:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8001e1a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8001e1c:	1c53      	adds	r3, r2, #1
 8001e1e:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8001e20:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8001e22:	3b01      	subs	r3, #1
 8001e24:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8001e26:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8001e28:	3b01      	subs	r3, #1
 8001e2a:	b29b      	uxth	r3, r3
 8001e2c:	8563      	strh	r3, [r4, #42]	@ 0x2a
          count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8001e2e:	f8d9 3000 	ldr.w	r3, [r9]
 8001e32:	fbb3 f3f1 	udiv	r3, r3, r1
 8001e36:	2123      	movs	r1, #35	@ 0x23
 8001e38:	434b      	muls	r3, r1
 8001e3a:	9303      	str	r3, [sp, #12]
            count--;
 8001e3c:	9b03      	ldr	r3, [sp, #12]
 8001e3e:	3b01      	subs	r3, #1
 8001e40:	9303      	str	r3, [sp, #12]
            if (count == 0U)
 8001e42:	9b03      	ldr	r3, [sp, #12]
 8001e44:	b973      	cbnz	r3, 8001e64 <HAL_I2C_Mem_Read+0x218>
              hi2c->State               = HAL_I2C_STATE_READY;
 8001e46:	2220      	movs	r2, #32
              hi2c->PreviousState       = I2C_STATE_NONE;
 8001e48:	6323      	str	r3, [r4, #48]	@ 0x30
              hi2c->State               = HAL_I2C_STATE_READY;
 8001e4a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
              hi2c->Mode                = HAL_I2C_MODE_NONE;
 8001e4e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
              hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8001e52:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8001e54:	f042 0220 	orr.w	r2, r2, #32
 8001e58:	6422      	str	r2, [r4, #64]	@ 0x40
  __ASM volatile ("cpsie i" : : : "memory");
 8001e5a:	b662      	cpsie	i
              __HAL_UNLOCK(hi2c);
 8001e5c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8001e60:	2501      	movs	r5, #1
 8001e62:	e705      	b.n	8001c70 <HAL_I2C_Mem_Read+0x24>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET);
 8001e64:	6823      	ldr	r3, [r4, #0]
 8001e66:	6959      	ldr	r1, [r3, #20]
 8001e68:	0749      	lsls	r1, r1, #29
 8001e6a:	d5e7      	bpl.n	8001e3c <HAL_I2C_Mem_Read+0x1f0>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8001e6c:	6819      	ldr	r1, [r3, #0]
 8001e6e:	f441 7100 	orr.w	r1, r1, #512	@ 0x200
 8001e72:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8001e74:	691b      	ldr	r3, [r3, #16]
 8001e76:	7053      	strb	r3, [r2, #1]
 8001e78:	e7b3      	b.n	8001de2 <HAL_I2C_Mem_Read+0x196>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001e7a:	4632      	mov	r2, r6
 8001e7c:	4639      	mov	r1, r7
 8001e7e:	4620      	mov	r0, r4
 8001e80:	f7ff fe08 	bl	8001a94 <I2C_WaitOnRXNEFlagUntilTimeout>
 8001e84:	2800      	cmp	r0, #0
 8001e86:	d1eb      	bne.n	8001e60 <HAL_I2C_Mem_Read+0x214>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8001e88:	6823      	ldr	r3, [r4, #0]
 8001e8a:	691a      	ldr	r2, [r3, #16]
 8001e8c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8001e8e:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8001e90:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8001e92:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8001e94:	3a01      	subs	r2, #1
 8001e96:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8001e98:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8001e9a:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8001e9c:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8001e9e:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8001ea0:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8001ea2:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 8001ea4:	3b01      	subs	r3, #1
 8001ea6:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8001ea8:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8001eaa:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8001eac:	f57f af2f 	bpl.w	8001d0e <HAL_I2C_Mem_Read+0xc2>
          if (hi2c->XferSize == 3U)
 8001eb0:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8001eb2:	bf02      	ittt	eq
 8001eb4:	6813      	ldreq	r3, [r2, #0]
 8001eb6:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8001eba:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8001ebc:	6913      	ldr	r3, [r2, #16]
 8001ebe:	704b      	strb	r3, [r1, #1]
 8001ec0:	e76f      	b.n	8001da2 <HAL_I2C_Mem_Read+0x156>
 8001ec2:	bf00      	nop
 8001ec4:	00100002 	.word	0x00100002
 8001ec8:	ffff0000 	.word	0xffff0000
 8001ecc:	00010004 	.word	0x00010004
 8001ed0:	20000000 	.word	0x20000000

08001ed4 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8001ed4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8001ed8:	4605      	mov	r5, r0
 8001eda:	b338      	cbz	r0, 8001f2c <HAL_RCC_OscConfig+0x58>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001edc:	6803      	ldr	r3, [r0, #0]
 8001ede:	07db      	lsls	r3, r3, #31
 8001ee0:	d410      	bmi.n	8001f04 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8001ee2:	682b      	ldr	r3, [r5, #0]
 8001ee4:	079f      	lsls	r7, r3, #30
 8001ee6:	d45e      	bmi.n	8001fa6 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001ee8:	682b      	ldr	r3, [r5, #0]
 8001eea:	0719      	lsls	r1, r3, #28
 8001eec:	f100 8095 	bmi.w	800201a <HAL_RCC_OscConfig+0x146>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001ef0:	682b      	ldr	r3, [r5, #0]
 8001ef2:	075a      	lsls	r2, r3, #29
 8001ef4:	f100 80c1 	bmi.w	800207a <HAL_RCC_OscConfig+0x1a6>

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001ef8:	69eb      	ldr	r3, [r5, #28]
 8001efa:	2b00      	cmp	r3, #0
 8001efc:	f040 812c 	bne.w	8002158 <HAL_RCC_OscConfig+0x284>
        }
      }
    }
  }

  return HAL_OK;
 8001f00:	2000      	movs	r0, #0
 8001f02:	e029      	b.n	8001f58 <HAL_RCC_OscConfig+0x84>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8001f04:	4c90      	ldr	r4, [pc, #576]	@ (8002148 <HAL_RCC_OscConfig+0x274>)
 8001f06:	6863      	ldr	r3, [r4, #4]
 8001f08:	f003 030c 	and.w	r3, r3, #12
 8001f0c:	2b04      	cmp	r3, #4
 8001f0e:	d007      	beq.n	8001f20 <HAL_RCC_OscConfig+0x4c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8001f10:	6863      	ldr	r3, [r4, #4]
 8001f12:	f003 030c 	and.w	r3, r3, #12
 8001f16:	2b08      	cmp	r3, #8
 8001f18:	d10a      	bne.n	8001f30 <HAL_RCC_OscConfig+0x5c>
 8001f1a:	6863      	ldr	r3, [r4, #4]
 8001f1c:	03de      	lsls	r6, r3, #15
 8001f1e:	d507      	bpl.n	8001f30 <HAL_RCC_OscConfig+0x5c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001f20:	6823      	ldr	r3, [r4, #0]
 8001f22:	039c      	lsls	r4, r3, #14
 8001f24:	d5dd      	bpl.n	8001ee2 <HAL_RCC_OscConfig+0xe>
 8001f26:	686b      	ldr	r3, [r5, #4]
 8001f28:	2b00      	cmp	r3, #0
 8001f2a:	d1da      	bne.n	8001ee2 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8001f2c:	2001      	movs	r0, #1
 8001f2e:	e013      	b.n	8001f58 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001f30:	686b      	ldr	r3, [r5, #4]
 8001f32:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001f36:	d112      	bne.n	8001f5e <HAL_RCC_OscConfig+0x8a>
 8001f38:	6823      	ldr	r3, [r4, #0]
 8001f3a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001f3e:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001f40:	f7ff fb1e 	bl	8001580 <HAL_GetTick>
 8001f44:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001f46:	6823      	ldr	r3, [r4, #0]
 8001f48:	0398      	lsls	r0, r3, #14
 8001f4a:	d4ca      	bmi.n	8001ee2 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001f4c:	f7ff fb18 	bl	8001580 <HAL_GetTick>
 8001f50:	1b80      	subs	r0, r0, r6
 8001f52:	2864      	cmp	r0, #100	@ 0x64
 8001f54:	d9f7      	bls.n	8001f46 <HAL_RCC_OscConfig+0x72>
            return HAL_TIMEOUT;
 8001f56:	2003      	movs	r0, #3
}
 8001f58:	b002      	add	sp, #8
 8001f5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001f5e:	b99b      	cbnz	r3, 8001f88 <HAL_RCC_OscConfig+0xb4>
 8001f60:	6823      	ldr	r3, [r4, #0]
 8001f62:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001f66:	6023      	str	r3, [r4, #0]
 8001f68:	6823      	ldr	r3, [r4, #0]
 8001f6a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001f6e:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001f70:	f7ff fb06 	bl	8001580 <HAL_GetTick>
 8001f74:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001f76:	6823      	ldr	r3, [r4, #0]
 8001f78:	0399      	lsls	r1, r3, #14
 8001f7a:	d5b2      	bpl.n	8001ee2 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001f7c:	f7ff fb00 	bl	8001580 <HAL_GetTick>
 8001f80:	1b80      	subs	r0, r0, r6
 8001f82:	2864      	cmp	r0, #100	@ 0x64
 8001f84:	d9f7      	bls.n	8001f76 <HAL_RCC_OscConfig+0xa2>
 8001f86:	e7e6      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001f88:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001f8c:	6823      	ldr	r3, [r4, #0]
 8001f8e:	d103      	bne.n	8001f98 <HAL_RCC_OscConfig+0xc4>
 8001f90:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001f94:	6023      	str	r3, [r4, #0]
 8001f96:	e7cf      	b.n	8001f38 <HAL_RCC_OscConfig+0x64>
 8001f98:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001f9c:	6023      	str	r3, [r4, #0]
 8001f9e:	6823      	ldr	r3, [r4, #0]
 8001fa0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001fa4:	e7cb      	b.n	8001f3e <HAL_RCC_OscConfig+0x6a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8001fa6:	4c68      	ldr	r4, [pc, #416]	@ (8002148 <HAL_RCC_OscConfig+0x274>)
 8001fa8:	6863      	ldr	r3, [r4, #4]
 8001faa:	f013 0f0c 	tst.w	r3, #12
 8001fae:	d007      	beq.n	8001fc0 <HAL_RCC_OscConfig+0xec>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 8001fb0:	6863      	ldr	r3, [r4, #4]
 8001fb2:	f003 030c 	and.w	r3, r3, #12
 8001fb6:	2b08      	cmp	r3, #8
 8001fb8:	d110      	bne.n	8001fdc <HAL_RCC_OscConfig+0x108>
 8001fba:	6863      	ldr	r3, [r4, #4]
 8001fbc:	03da      	lsls	r2, r3, #15
 8001fbe:	d40d      	bmi.n	8001fdc <HAL_RCC_OscConfig+0x108>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001fc0:	6823      	ldr	r3, [r4, #0]
 8001fc2:	079b      	lsls	r3, r3, #30
 8001fc4:	d502      	bpl.n	8001fcc <HAL_RCC_OscConfig+0xf8>
 8001fc6:	692b      	ldr	r3, [r5, #16]
 8001fc8:	2b01      	cmp	r3, #1
 8001fca:	d1af      	bne.n	8001f2c <HAL_RCC_OscConfig+0x58>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001fcc:	6823      	ldr	r3, [r4, #0]
 8001fce:	696a      	ldr	r2, [r5, #20]
 8001fd0:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8001fd4:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8001fd8:	6023      	str	r3, [r4, #0]
 8001fda:	e785      	b.n	8001ee8 <HAL_RCC_OscConfig+0x14>
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8001fdc:	692a      	ldr	r2, [r5, #16]
 8001fde:	4b5b      	ldr	r3, [pc, #364]	@ (800214c <HAL_RCC_OscConfig+0x278>)
 8001fe0:	b16a      	cbz	r2, 8001ffe <HAL_RCC_OscConfig+0x12a>
        __HAL_RCC_HSI_ENABLE();
 8001fe2:	2201      	movs	r2, #1
 8001fe4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8001fe6:	f7ff facb 	bl	8001580 <HAL_GetTick>
 8001fea:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001fec:	6823      	ldr	r3, [r4, #0]
 8001fee:	079f      	lsls	r7, r3, #30
 8001ff0:	d4ec      	bmi.n	8001fcc <HAL_RCC_OscConfig+0xf8>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001ff2:	f7ff fac5 	bl	8001580 <HAL_GetTick>
 8001ff6:	1b80      	subs	r0, r0, r6
 8001ff8:	2802      	cmp	r0, #2
 8001ffa:	d9f7      	bls.n	8001fec <HAL_RCC_OscConfig+0x118>
 8001ffc:	e7ab      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
        __HAL_RCC_HSI_DISABLE();
 8001ffe:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8002000:	f7ff fabe 	bl	8001580 <HAL_GetTick>
 8002004:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002006:	6823      	ldr	r3, [r4, #0]
 8002008:	0798      	lsls	r0, r3, #30
 800200a:	f57f af6d 	bpl.w	8001ee8 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800200e:	f7ff fab7 	bl	8001580 <HAL_GetTick>
 8002012:	1b80      	subs	r0, r0, r6
 8002014:	2802      	cmp	r0, #2
 8002016:	d9f6      	bls.n	8002006 <HAL_RCC_OscConfig+0x132>
 8002018:	e79d      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 800201a:	69aa      	ldr	r2, [r5, #24]
 800201c:	4e4a      	ldr	r6, [pc, #296]	@ (8002148 <HAL_RCC_OscConfig+0x274>)
 800201e:	4b4b      	ldr	r3, [pc, #300]	@ (800214c <HAL_RCC_OscConfig+0x278>)
 8002020:	b1e2      	cbz	r2, 800205c <HAL_RCC_OscConfig+0x188>
      __HAL_RCC_LSI_ENABLE();
 8002022:	2201      	movs	r2, #1
 8002024:	f8c3 2480 	str.w	r2, [r3, #1152]	@ 0x480
      tickstart = HAL_GetTick();
 8002028:	f7ff faaa 	bl	8001580 <HAL_GetTick>
 800202c:	4604      	mov	r4, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800202e:	6a73      	ldr	r3, [r6, #36]	@ 0x24
 8002030:	079b      	lsls	r3, r3, #30
 8002032:	d50d      	bpl.n	8002050 <HAL_RCC_OscConfig+0x17c>
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 8002034:	f44f 52fa 	mov.w	r2, #8000	@ 0x1f40
 8002038:	4b45      	ldr	r3, [pc, #276]	@ (8002150 <HAL_RCC_OscConfig+0x27c>)
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	fbb3 f3f2 	udiv	r3, r3, r2
 8002040:	9301      	str	r3, [sp, #4]
  do
  {
    __NOP();
 8002042:	bf00      	nop
  }
  while (Delay --);
 8002044:	9b01      	ldr	r3, [sp, #4]
 8002046:	1e5a      	subs	r2, r3, #1
 8002048:	9201      	str	r2, [sp, #4]
 800204a:	2b00      	cmp	r3, #0
 800204c:	d1f9      	bne.n	8002042 <HAL_RCC_OscConfig+0x16e>
 800204e:	e74f      	b.n	8001ef0 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8002050:	f7ff fa96 	bl	8001580 <HAL_GetTick>
 8002054:	1b00      	subs	r0, r0, r4
 8002056:	2802      	cmp	r0, #2
 8002058:	d9e9      	bls.n	800202e <HAL_RCC_OscConfig+0x15a>
 800205a:	e77c      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
      __HAL_RCC_LSI_DISABLE();
 800205c:	f8c3 2480 	str.w	r2, [r3, #1152]	@ 0x480
      tickstart = HAL_GetTick();
 8002060:	f7ff fa8e 	bl	8001580 <HAL_GetTick>
 8002064:	4604      	mov	r4, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002066:	6a73      	ldr	r3, [r6, #36]	@ 0x24
 8002068:	079f      	lsls	r7, r3, #30
 800206a:	f57f af41 	bpl.w	8001ef0 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800206e:	f7ff fa87 	bl	8001580 <HAL_GetTick>
 8002072:	1b00      	subs	r0, r0, r4
 8002074:	2802      	cmp	r0, #2
 8002076:	d9f6      	bls.n	8002066 <HAL_RCC_OscConfig+0x192>
 8002078:	e76d      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800207a:	4c33      	ldr	r4, [pc, #204]	@ (8002148 <HAL_RCC_OscConfig+0x274>)
 800207c:	69e3      	ldr	r3, [r4, #28]
 800207e:	00d8      	lsls	r0, r3, #3
 8002080:	d424      	bmi.n	80020cc <HAL_RCC_OscConfig+0x1f8>
      pwrclkchanged = SET;
 8002082:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8002084:	69e3      	ldr	r3, [r4, #28]
 8002086:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800208a:	61e3      	str	r3, [r4, #28]
 800208c:	69e3      	ldr	r3, [r4, #28]
 800208e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002092:	9300      	str	r3, [sp, #0]
 8002094:	9b00      	ldr	r3, [sp, #0]
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002096:	4e2f      	ldr	r6, [pc, #188]	@ (8002154 <HAL_RCC_OscConfig+0x280>)
 8002098:	6833      	ldr	r3, [r6, #0]
 800209a:	05d9      	lsls	r1, r3, #23
 800209c:	d518      	bpl.n	80020d0 <HAL_RCC_OscConfig+0x1fc>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800209e:	68eb      	ldr	r3, [r5, #12]
 80020a0:	2b01      	cmp	r3, #1
 80020a2:	d126      	bne.n	80020f2 <HAL_RCC_OscConfig+0x21e>
 80020a4:	6a23      	ldr	r3, [r4, #32]
 80020a6:	f043 0301 	orr.w	r3, r3, #1
 80020aa:	6223      	str	r3, [r4, #32]
      tickstart = HAL_GetTick();
 80020ac:	f7ff fa68 	bl	8001580 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80020b0:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 80020b4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80020b6:	6a23      	ldr	r3, [r4, #32]
 80020b8:	079b      	lsls	r3, r3, #30
 80020ba:	d53f      	bpl.n	800213c <HAL_RCC_OscConfig+0x268>
    if (pwrclkchanged == SET)
 80020bc:	2f00      	cmp	r7, #0
 80020be:	f43f af1b 	beq.w	8001ef8 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80020c2:	69e3      	ldr	r3, [r4, #28]
 80020c4:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80020c8:	61e3      	str	r3, [r4, #28]
 80020ca:	e715      	b.n	8001ef8 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80020cc:	2700      	movs	r7, #0
 80020ce:	e7e2      	b.n	8002096 <HAL_RCC_OscConfig+0x1c2>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80020d0:	6833      	ldr	r3, [r6, #0]
 80020d2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80020d6:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 80020d8:	f7ff fa52 	bl	8001580 <HAL_GetTick>
 80020dc:	4680      	mov	r8, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80020de:	6833      	ldr	r3, [r6, #0]
 80020e0:	05da      	lsls	r2, r3, #23
 80020e2:	d4dc      	bmi.n	800209e <HAL_RCC_OscConfig+0x1ca>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80020e4:	f7ff fa4c 	bl	8001580 <HAL_GetTick>
 80020e8:	eba0 0008 	sub.w	r0, r0, r8
 80020ec:	2864      	cmp	r0, #100	@ 0x64
 80020ee:	d9f6      	bls.n	80020de <HAL_RCC_OscConfig+0x20a>
 80020f0:	e731      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80020f2:	b9ab      	cbnz	r3, 8002120 <HAL_RCC_OscConfig+0x24c>
 80020f4:	6a23      	ldr	r3, [r4, #32]
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80020f6:	f241 3888 	movw	r8, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80020fa:	f023 0301 	bic.w	r3, r3, #1
 80020fe:	6223      	str	r3, [r4, #32]
 8002100:	6a23      	ldr	r3, [r4, #32]
 8002102:	f023 0304 	bic.w	r3, r3, #4
 8002106:	6223      	str	r3, [r4, #32]
      tickstart = HAL_GetTick();
 8002108:	f7ff fa3a 	bl	8001580 <HAL_GetTick>
 800210c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800210e:	6a23      	ldr	r3, [r4, #32]
 8002110:	0798      	lsls	r0, r3, #30
 8002112:	d5d3      	bpl.n	80020bc <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8002114:	f7ff fa34 	bl	8001580 <HAL_GetTick>
 8002118:	1b80      	subs	r0, r0, r6
 800211a:	4540      	cmp	r0, r8
 800211c:	d9f7      	bls.n	800210e <HAL_RCC_OscConfig+0x23a>
 800211e:	e71a      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002120:	2b05      	cmp	r3, #5
 8002122:	6a23      	ldr	r3, [r4, #32]
 8002124:	d103      	bne.n	800212e <HAL_RCC_OscConfig+0x25a>
 8002126:	f043 0304 	orr.w	r3, r3, #4
 800212a:	6223      	str	r3, [r4, #32]
 800212c:	e7ba      	b.n	80020a4 <HAL_RCC_OscConfig+0x1d0>
 800212e:	f023 0301 	bic.w	r3, r3, #1
 8002132:	6223      	str	r3, [r4, #32]
 8002134:	6a23      	ldr	r3, [r4, #32]
 8002136:	f023 0304 	bic.w	r3, r3, #4
 800213a:	e7b6      	b.n	80020aa <HAL_RCC_OscConfig+0x1d6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800213c:	f7ff fa20 	bl	8001580 <HAL_GetTick>
 8002140:	1b80      	subs	r0, r0, r6
 8002142:	4540      	cmp	r0, r8
 8002144:	d9b7      	bls.n	80020b6 <HAL_RCC_OscConfig+0x1e2>
 8002146:	e706      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
 8002148:	40021000 	.word	0x40021000
 800214c:	42420000 	.word	0x42420000
 8002150:	20000000 	.word	0x20000000
 8002154:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002158:	4c2a      	ldr	r4, [pc, #168]	@ (8002204 <HAL_RCC_OscConfig+0x330>)
 800215a:	6862      	ldr	r2, [r4, #4]
 800215c:	f002 020c 	and.w	r2, r2, #12
 8002160:	2a08      	cmp	r2, #8
 8002162:	d03e      	beq.n	80021e2 <HAL_RCC_OscConfig+0x30e>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002164:	2200      	movs	r2, #0
 8002166:	2b02      	cmp	r3, #2
 8002168:	4b27      	ldr	r3, [pc, #156]	@ (8002208 <HAL_RCC_OscConfig+0x334>)
        __HAL_RCC_PLL_DISABLE();
 800216a:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800216c:	d12c      	bne.n	80021c8 <HAL_RCC_OscConfig+0x2f4>
        tickstart = HAL_GetTick();
 800216e:	f7ff fa07 	bl	8001580 <HAL_GetTick>
 8002172:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002174:	6823      	ldr	r3, [r4, #0]
 8002176:	0199      	lsls	r1, r3, #6
 8002178:	d420      	bmi.n	80021bc <HAL_RCC_OscConfig+0x2e8>
        if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 800217a:	6a2b      	ldr	r3, [r5, #32]
 800217c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002180:	d105      	bne.n	800218e <HAL_RCC_OscConfig+0x2ba>
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 8002182:	6862      	ldr	r2, [r4, #4]
 8002184:	68a9      	ldr	r1, [r5, #8]
 8002186:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 800218a:	430a      	orrs	r2, r1
 800218c:	6062      	str	r2, [r4, #4]
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800218e:	6a69      	ldr	r1, [r5, #36]	@ 0x24
 8002190:	6862      	ldr	r2, [r4, #4]
 8002192:	430b      	orrs	r3, r1
 8002194:	f422 1274 	bic.w	r2, r2, #3997696	@ 0x3d0000
 8002198:	4313      	orrs	r3, r2
        __HAL_RCC_PLL_ENABLE();
 800219a:	2201      	movs	r2, #1
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800219c:	6063      	str	r3, [r4, #4]
        __HAL_RCC_PLL_ENABLE();
 800219e:	4b1a      	ldr	r3, [pc, #104]	@ (8002208 <HAL_RCC_OscConfig+0x334>)
 80021a0:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 80021a2:	f7ff f9ed 	bl	8001580 <HAL_GetTick>
 80021a6:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80021a8:	6823      	ldr	r3, [r4, #0]
 80021aa:	019a      	lsls	r2, r3, #6
 80021ac:	f53f aea8 	bmi.w	8001f00 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80021b0:	f7ff f9e6 	bl	8001580 <HAL_GetTick>
 80021b4:	1b40      	subs	r0, r0, r5
 80021b6:	2802      	cmp	r0, #2
 80021b8:	d9f6      	bls.n	80021a8 <HAL_RCC_OscConfig+0x2d4>
 80021ba:	e6cc      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80021bc:	f7ff f9e0 	bl	8001580 <HAL_GetTick>
 80021c0:	1b80      	subs	r0, r0, r6
 80021c2:	2802      	cmp	r0, #2
 80021c4:	d9d6      	bls.n	8002174 <HAL_RCC_OscConfig+0x2a0>
 80021c6:	e6c6      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
        tickstart = HAL_GetTick();
 80021c8:	f7ff f9da 	bl	8001580 <HAL_GetTick>
 80021cc:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80021ce:	6823      	ldr	r3, [r4, #0]
 80021d0:	019b      	lsls	r3, r3, #6
 80021d2:	f57f ae95 	bpl.w	8001f00 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80021d6:	f7ff f9d3 	bl	8001580 <HAL_GetTick>
 80021da:	1b40      	subs	r0, r0, r5
 80021dc:	2802      	cmp	r0, #2
 80021de:	d9f6      	bls.n	80021ce <HAL_RCC_OscConfig+0x2fa>
 80021e0:	e6b9      	b.n	8001f56 <HAL_RCC_OscConfig+0x82>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80021e2:	2b01      	cmp	r3, #1
 80021e4:	f43f aea2 	beq.w	8001f2c <HAL_RCC_OscConfig+0x58>
        pll_config = RCC->CFGR;
 80021e8:	6860      	ldr	r0, [r4, #4]
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80021ea:	6a2b      	ldr	r3, [r5, #32]
 80021ec:	f400 3280 	and.w	r2, r0, #65536	@ 0x10000
 80021f0:	429a      	cmp	r2, r3
 80021f2:	f47f ae9b 	bne.w	8001f2c <HAL_RCC_OscConfig+0x58>
 80021f6:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 80021f8:	f400 1070 	and.w	r0, r0, #3932160	@ 0x3c0000
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80021fc:	1ac0      	subs	r0, r0, r3
 80021fe:	bf18      	it	ne
 8002200:	2001      	movne	r0, #1
 8002202:	e6a9      	b.n	8001f58 <HAL_RCC_OscConfig+0x84>
 8002204:	40021000 	.word	0x40021000
 8002208:	42420000 	.word	0x42420000

0800220c <HAL_RCC_GetSysClockFreq>:
  tmpreg = RCC->CFGR;
 800220c:	4a0d      	ldr	r2, [pc, #52]	@ (8002244 <HAL_RCC_GetSysClockFreq+0x38>)
 800220e:	6853      	ldr	r3, [r2, #4]
  switch (tmpreg & RCC_CFGR_SWS)
 8002210:	f003 010c 	and.w	r1, r3, #12
 8002214:	2908      	cmp	r1, #8
 8002216:	d112      	bne.n	800223e <HAL_RCC_GetSysClockFreq+0x32>
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 8002218:	480b      	ldr	r0, [pc, #44]	@ (8002248 <HAL_RCC_GetSysClockFreq+0x3c>)
 800221a:	f3c3 4183 	ubfx	r1, r3, #18, #4
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 800221e:	03db      	lsls	r3, r3, #15
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 8002220:	5c40      	ldrb	r0, [r0, r1]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 8002222:	d509      	bpl.n	8002238 <HAL_RCC_GetSysClockFreq+0x2c>
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 8002224:	6853      	ldr	r3, [r2, #4]
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8002226:	4a09      	ldr	r2, [pc, #36]	@ (800224c <HAL_RCC_GetSysClockFreq+0x40>)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 8002228:	f3c3 4340 	ubfx	r3, r3, #17, #1
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 800222c:	4350      	muls	r0, r2
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 800222e:	4a08      	ldr	r2, [pc, #32]	@ (8002250 <HAL_RCC_GetSysClockFreq+0x44>)
 8002230:	5cd3      	ldrb	r3, [r2, r3]
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8002232:	fbb0 f0f3 	udiv	r0, r0, r3
 8002236:	4770      	bx	lr
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 8002238:	4b06      	ldr	r3, [pc, #24]	@ (8002254 <HAL_RCC_GetSysClockFreq+0x48>)
 800223a:	4358      	muls	r0, r3
 800223c:	4770      	bx	lr
      sysclockfreq = HSE_VALUE;
 800223e:	4803      	ldr	r0, [pc, #12]	@ (800224c <HAL_RCC_GetSysClockFreq+0x40>)
}
 8002240:	4770      	bx	lr
 8002242:	bf00      	nop
 8002244:	40021000 	.word	0x40021000
 8002248:	08006cff 	.word	0x08006cff
 800224c:	007a1200 	.word	0x007a1200
 8002250:	08006cfd 	.word	0x08006cfd
 8002254:	003d0900 	.word	0x003d0900

08002258 <HAL_RCC_ClockConfig>:
{
 8002258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800225c:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800225e:	4604      	mov	r4, r0
 8002260:	b910      	cbnz	r0, 8002268 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8002262:	2001      	movs	r0, #1
}
 8002264:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8002268:	4a44      	ldr	r2, [pc, #272]	@ (800237c <HAL_RCC_ClockConfig+0x124>)
 800226a:	6813      	ldr	r3, [r2, #0]
 800226c:	f003 0307 	and.w	r3, r3, #7
 8002270:	428b      	cmp	r3, r1
 8002272:	d328      	bcc.n	80022c6 <HAL_RCC_ClockConfig+0x6e>
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002274:	6821      	ldr	r1, [r4, #0]
 8002276:	078e      	lsls	r6, r1, #30
 8002278:	d430      	bmi.n	80022dc <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800227a:	07ca      	lsls	r2, r1, #31
 800227c:	d443      	bmi.n	8002306 <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800227e:	4a3f      	ldr	r2, [pc, #252]	@ (800237c <HAL_RCC_ClockConfig+0x124>)
 8002280:	6813      	ldr	r3, [r2, #0]
 8002282:	f003 0307 	and.w	r3, r3, #7
 8002286:	42ab      	cmp	r3, r5
 8002288:	d865      	bhi.n	8002356 <HAL_RCC_ClockConfig+0xfe>
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800228a:	6822      	ldr	r2, [r4, #0]
 800228c:	4d3c      	ldr	r5, [pc, #240]	@ (8002380 <HAL_RCC_ClockConfig+0x128>)
 800228e:	f012 0f04 	tst.w	r2, #4
 8002292:	d16c      	bne.n	800236e <HAL_RCC_ClockConfig+0x116>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002294:	0713      	lsls	r3, r2, #28
 8002296:	d506      	bpl.n	80022a6 <HAL_RCC_ClockConfig+0x4e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8002298:	686b      	ldr	r3, [r5, #4]
 800229a:	6922      	ldr	r2, [r4, #16]
 800229c:	f423 5360 	bic.w	r3, r3, #14336	@ 0x3800
 80022a0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80022a4:	606b      	str	r3, [r5, #4]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80022a6:	f7ff ffb1 	bl	800220c <HAL_RCC_GetSysClockFreq>
 80022aa:	686b      	ldr	r3, [r5, #4]
 80022ac:	4a35      	ldr	r2, [pc, #212]	@ (8002384 <HAL_RCC_ClockConfig+0x12c>)
 80022ae:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80022b2:	5cd3      	ldrb	r3, [r2, r3]
 80022b4:	40d8      	lsrs	r0, r3
 80022b6:	4b34      	ldr	r3, [pc, #208]	@ (8002388 <HAL_RCC_ClockConfig+0x130>)
 80022b8:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 80022ba:	4b34      	ldr	r3, [pc, #208]	@ (800238c <HAL_RCC_ClockConfig+0x134>)
 80022bc:	6818      	ldr	r0, [r3, #0]
 80022be:	f7ff f91d 	bl	80014fc <HAL_InitTick>
  return HAL_OK;
 80022c2:	2000      	movs	r0, #0
 80022c4:	e7ce      	b.n	8002264 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80022c6:	6813      	ldr	r3, [r2, #0]
 80022c8:	f023 0307 	bic.w	r3, r3, #7
 80022cc:	430b      	orrs	r3, r1
 80022ce:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80022d0:	6813      	ldr	r3, [r2, #0]
 80022d2:	f003 0307 	and.w	r3, r3, #7
 80022d6:	428b      	cmp	r3, r1
 80022d8:	d1c3      	bne.n	8002262 <HAL_RCC_ClockConfig+0xa>
 80022da:	e7cb      	b.n	8002274 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80022dc:	4b28      	ldr	r3, [pc, #160]	@ (8002380 <HAL_RCC_ClockConfig+0x128>)
 80022de:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80022e2:	bf1e      	ittt	ne
 80022e4:	685a      	ldrne	r2, [r3, #4]
 80022e6:	f442 62e0 	orrne.w	r2, r2, #1792	@ 0x700
 80022ea:	605a      	strne	r2, [r3, #4]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80022ec:	0708      	lsls	r0, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80022ee:	bf42      	ittt	mi
 80022f0:	685a      	ldrmi	r2, [r3, #4]
 80022f2:	f442 5260 	orrmi.w	r2, r2, #14336	@ 0x3800
 80022f6:	605a      	strmi	r2, [r3, #4]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80022f8:	685a      	ldr	r2, [r3, #4]
 80022fa:	68a0      	ldr	r0, [r4, #8]
 80022fc:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8002300:	4302      	orrs	r2, r0
 8002302:	605a      	str	r2, [r3, #4]
 8002304:	e7b9      	b.n	800227a <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002306:	6862      	ldr	r2, [r4, #4]
 8002308:	4e1d      	ldr	r6, [pc, #116]	@ (8002380 <HAL_RCC_ClockConfig+0x128>)
 800230a:	2a01      	cmp	r2, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800230c:	6833      	ldr	r3, [r6, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800230e:	d11a      	bne.n	8002346 <HAL_RCC_ClockConfig+0xee>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002310:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002314:	d0a5      	beq.n	8002262 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8002316:	6873      	ldr	r3, [r6, #4]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002318:	f241 3888 	movw	r8, #5000	@ 0x1388
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800231c:	f023 0303 	bic.w	r3, r3, #3
 8002320:	4313      	orrs	r3, r2
 8002322:	6073      	str	r3, [r6, #4]
    tickstart = HAL_GetTick();
 8002324:	f7ff f92c 	bl	8001580 <HAL_GetTick>
 8002328:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800232a:	6873      	ldr	r3, [r6, #4]
 800232c:	6862      	ldr	r2, [r4, #4]
 800232e:	f003 030c 	and.w	r3, r3, #12
 8002332:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8002336:	d0a2      	beq.n	800227e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002338:	f7ff f922 	bl	8001580 <HAL_GetTick>
 800233c:	1bc0      	subs	r0, r0, r7
 800233e:	4540      	cmp	r0, r8
 8002340:	d9f3      	bls.n	800232a <HAL_RCC_ClockConfig+0xd2>
        return HAL_TIMEOUT;
 8002342:	2003      	movs	r0, #3
 8002344:	e78e      	b.n	8002264 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002346:	2a02      	cmp	r2, #2
 8002348:	d102      	bne.n	8002350 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800234a:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 800234e:	e7e1      	b.n	8002314 <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002350:	f013 0f02 	tst.w	r3, #2
 8002354:	e7de      	b.n	8002314 <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002356:	6813      	ldr	r3, [r2, #0]
 8002358:	f023 0307 	bic.w	r3, r3, #7
 800235c:	432b      	orrs	r3, r5
 800235e:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8002360:	6813      	ldr	r3, [r2, #0]
 8002362:	f003 0307 	and.w	r3, r3, #7
 8002366:	42ab      	cmp	r3, r5
 8002368:	f47f af7b 	bne.w	8002262 <HAL_RCC_ClockConfig+0xa>
 800236c:	e78d      	b.n	800228a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800236e:	686b      	ldr	r3, [r5, #4]
 8002370:	68e1      	ldr	r1, [r4, #12]
 8002372:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002376:	430b      	orrs	r3, r1
 8002378:	606b      	str	r3, [r5, #4]
 800237a:	e78b      	b.n	8002294 <HAL_RCC_ClockConfig+0x3c>
 800237c:	40022000 	.word	0x40022000
 8002380:	40021000 	.word	0x40021000
 8002384:	08006ced 	.word	0x08006ced
 8002388:	20000000 	.word	0x20000000
 800238c:	20000008 	.word	0x20000008

08002390 <HAL_RCC_GetPCLK1Freq>:
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8002390:	4b04      	ldr	r3, [pc, #16]	@ (80023a4 <HAL_RCC_GetPCLK1Freq+0x14>)
 8002392:	4a05      	ldr	r2, [pc, #20]	@ (80023a8 <HAL_RCC_GetPCLK1Freq+0x18>)
 8002394:	685b      	ldr	r3, [r3, #4]
 8002396:	f3c3 2302 	ubfx	r3, r3, #8, #3
 800239a:	5cd3      	ldrb	r3, [r2, r3]
 800239c:	4a03      	ldr	r2, [pc, #12]	@ (80023ac <HAL_RCC_GetPCLK1Freq+0x1c>)
 800239e:	6810      	ldr	r0, [r2, #0]
}
 80023a0:	40d8      	lsrs	r0, r3
 80023a2:	4770      	bx	lr
 80023a4:	40021000 	.word	0x40021000
 80023a8:	08006ce5 	.word	0x08006ce5
 80023ac:	20000000 	.word	0x20000000

080023b0 <HAL_RCC_GetPCLK2Freq>:
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 80023b0:	4b04      	ldr	r3, [pc, #16]	@ (80023c4 <HAL_RCC_GetPCLK2Freq+0x14>)
 80023b2:	4a05      	ldr	r2, [pc, #20]	@ (80023c8 <HAL_RCC_GetPCLK2Freq+0x18>)
 80023b4:	685b      	ldr	r3, [r3, #4]
 80023b6:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 80023ba:	5cd3      	ldrb	r3, [r2, r3]
 80023bc:	4a03      	ldr	r2, [pc, #12]	@ (80023cc <HAL_RCC_GetPCLK2Freq+0x1c>)
 80023be:	6810      	ldr	r0, [r2, #0]
}
 80023c0:	40d8      	lsrs	r0, r3
 80023c2:	4770      	bx	lr
 80023c4:	40021000 	.word	0x40021000
 80023c8:	08006ce5 	.word	0x08006ce5
 80023cc:	20000000 	.word	0x20000000

080023d0 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80023d0:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80023d2:	f102 030c 	add.w	r3, r2, #12
 80023d6:	e853 3f00 	ldrex	r3, [r3]
 80023da:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80023de:	320c      	adds	r2, #12
 80023e0:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 80023e4:	6802      	ldr	r2, [r0, #0]
 80023e6:	2900      	cmp	r1, #0
 80023e8:	d1f2      	bne.n	80023d0 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80023ea:	f102 0314 	add.w	r3, r2, #20
 80023ee:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80023f2:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80023f6:	f102 0c14 	add.w	ip, r2, #20
 80023fa:	e84c 3100 	strex	r1, r3, [ip]
 80023fe:	2900      	cmp	r1, #0
 8002400:	d1f3      	bne.n	80023ea <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8002402:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8002404:	2b01      	cmp	r3, #1
 8002406:	d10b      	bne.n	8002420 <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8002408:	f102 030c 	add.w	r3, r2, #12
 800240c:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8002410:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8002414:	f102 0c0c 	add.w	ip, r2, #12
 8002418:	e84c 3100 	strex	r1, r3, [ip]
 800241c:	2900      	cmp	r1, #0
 800241e:	d1f3      	bne.n	8002408 <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8002420:	2320      	movs	r3, #32
 8002422:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8002426:	2300      	movs	r3, #0
 8002428:	6303      	str	r3, [r0, #48]	@ 0x30
}
 800242a:	4770      	bx	lr

0800242c <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800242c:	b510      	push	{r4, lr}
 800242e:	4604      	mov	r4, r0
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8002430:	6803      	ldr	r3, [r0, #0]
 8002432:	68c1      	ldr	r1, [r0, #12]
 8002434:	691a      	ldr	r2, [r3, #16]
 8002436:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 800243a:	430a      	orrs	r2, r1
 800243c:	611a      	str	r2, [r3, #16]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
  MODIFY_REG(huart->Instance->CR1,
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);
#else
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 800243e:	6882      	ldr	r2, [r0, #8]
 8002440:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 8002442:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 8002444:	4302      	orrs	r2, r0
 8002446:	6960      	ldr	r0, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 8002448:	f421 51b0 	bic.w	r1, r1, #5632	@ 0x1600
 800244c:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 8002450:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 8002452:	430a      	orrs	r2, r1
 8002454:	60da      	str	r2, [r3, #12]
             tmpreg);
#endif /* USART_CR1_OVER8 */

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8002456:	695a      	ldr	r2, [r3, #20]
 8002458:	69a1      	ldr	r1, [r4, #24]
 800245a:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800245e:	430a      	orrs	r2, r1
 8002460:	615a      	str	r2, [r3, #20]


  if(huart->Instance == USART1)
 8002462:	4a0e      	ldr	r2, [pc, #56]	@ (800249c <UART_SetConfig+0x70>)
 8002464:	4293      	cmp	r3, r2
 8002466:	d115      	bne.n	8002494 <UART_SetConfig+0x68>
  {
    pclk = HAL_RCC_GetPCLK2Freq();
 8002468:	f7ff ffa2 	bl	80023b0 <HAL_RCC_GetPCLK2Freq>
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
  }
#else
  huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800246c:	2319      	movs	r3, #25
 800246e:	4343      	muls	r3, r0
 8002470:	6862      	ldr	r2, [r4, #4]
 8002472:	6820      	ldr	r0, [r4, #0]
 8002474:	0092      	lsls	r2, r2, #2
 8002476:	fbb3 f3f2 	udiv	r3, r3, r2
 800247a:	2264      	movs	r2, #100	@ 0x64
 800247c:	fbb3 f1f2 	udiv	r1, r3, r2
 8002480:	fb02 3311 	mls	r3, r2, r1, r3
 8002484:	011b      	lsls	r3, r3, #4
 8002486:	3332      	adds	r3, #50	@ 0x32
 8002488:	fbb3 f3f2 	udiv	r3, r3, r2
 800248c:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8002490:	6083      	str	r3, [r0, #8]
#endif /* USART_CR1_OVER8 */
}
 8002492:	bd10      	pop	{r4, pc}
    pclk = HAL_RCC_GetPCLK1Freq();
 8002494:	f7ff ff7c 	bl	8002390 <HAL_RCC_GetPCLK1Freq>
 8002498:	e7e8      	b.n	800246c <UART_SetConfig+0x40>
 800249a:	bf00      	nop
 800249c:	40013800 	.word	0x40013800

080024a0 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
 80024a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80024a2:	4605      	mov	r5, r0
 80024a4:	460c      	mov	r4, r1
 80024a6:	4617      	mov	r7, r2
 80024a8:	461e      	mov	r6, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80024aa:	682a      	ldr	r2, [r5, #0]
 80024ac:	6813      	ldr	r3, [r2, #0]
 80024ae:	ea34 0303 	bics.w	r3, r4, r3
 80024b2:	d101      	bne.n	80024b8 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 80024b4:	2000      	movs	r0, #0
 80024b6:	e021      	b.n	80024fc <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>
    if (Timeout != HAL_MAX_DELAY)
 80024b8:	1c70      	adds	r0, r6, #1
 80024ba:	d0f7      	beq.n	80024ac <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80024bc:	f7ff f860 	bl	8001580 <HAL_GetTick>
 80024c0:	1bc0      	subs	r0, r0, r7
 80024c2:	4286      	cmp	r6, r0
 80024c4:	d31c      	bcc.n	8002500 <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
 80024c6:	b1de      	cbz	r6, 8002500 <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 80024c8:	682b      	ldr	r3, [r5, #0]
 80024ca:	68da      	ldr	r2, [r3, #12]
 80024cc:	0751      	lsls	r1, r2, #29
 80024ce:	d5ec      	bpl.n	80024aa <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 80024d0:	2c80      	cmp	r4, #128	@ 0x80
 80024d2:	d0ea      	beq.n	80024aa <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 80024d4:	2c40      	cmp	r4, #64	@ 0x40
 80024d6:	d0e8      	beq.n	80024aa <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 80024d8:	681a      	ldr	r2, [r3, #0]
 80024da:	0712      	lsls	r2, r2, #28
 80024dc:	d5e5      	bpl.n	80024aa <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
          __HAL_UART_CLEAR_OREFLAG(huart);
 80024de:	2400      	movs	r4, #0
 80024e0:	9401      	str	r4, [sp, #4]
 80024e2:	681a      	ldr	r2, [r3, #0]
          UART_EndRxTransfer(huart);
 80024e4:	4628      	mov	r0, r5
          __HAL_UART_CLEAR_OREFLAG(huart);
 80024e6:	9201      	str	r2, [sp, #4]
 80024e8:	685b      	ldr	r3, [r3, #4]
 80024ea:	9301      	str	r3, [sp, #4]
 80024ec:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 80024ee:	f7ff ff6f 	bl	80023d0 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 80024f2:	2308      	movs	r3, #8
          return HAL_ERROR;
 80024f4:	2001      	movs	r0, #1
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 80024f6:	646b      	str	r3, [r5, #68]	@ 0x44
          __HAL_UNLOCK(huart);
 80024f8:	f885 4040 	strb.w	r4, [r5, #64]	@ 0x40
}
 80024fc:	b003      	add	sp, #12
 80024fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
 8002500:	2003      	movs	r0, #3
 8002502:	e7fb      	b.n	80024fc <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>

08002504 <HAL_UART_Init>:
{
 8002504:	b510      	push	{r4, lr}
  if (huart == NULL)
 8002506:	4604      	mov	r4, r0
 8002508:	b348      	cbz	r0, 800255e <HAL_UART_Init+0x5a>
  if (huart->gState == HAL_UART_STATE_RESET)
 800250a:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 800250e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8002512:	b91b      	cbnz	r3, 800251c <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8002514:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_UART_MspInit(huart);
 8002518:	f7fe ff2a 	bl	8001370 <HAL_UART_MspInit>
  huart->gState = HAL_UART_STATE_BUSY;
 800251c:	2324      	movs	r3, #36	@ 0x24
  __HAL_UART_DISABLE(huart);
 800251e:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8002520:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UART_DISABLE(huart);
 8002524:	68d3      	ldr	r3, [r2, #12]
  UART_SetConfig(huart);
 8002526:	4620      	mov	r0, r4
  __HAL_UART_DISABLE(huart);
 8002528:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800252c:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800252e:	f7ff ff7d 	bl	800242c <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8002532:	6823      	ldr	r3, [r4, #0]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8002534:	2000      	movs	r0, #0
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8002536:	691a      	ldr	r2, [r3, #16]
 8002538:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800253c:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800253e:	695a      	ldr	r2, [r3, #20]
 8002540:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8002544:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8002546:	68da      	ldr	r2, [r3, #12]
 8002548:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800254c:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 800254e:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8002550:	6460      	str	r0, [r4, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 8002552:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8002556:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 800255a:	6360      	str	r0, [r4, #52]	@ 0x34
}
 800255c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800255e:	2001      	movs	r0, #1
 8002560:	e7fc      	b.n	800255c <HAL_UART_Init+0x58>

08002562 <HAL_UART_Transmit>:
{
 8002562:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002566:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8002568:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 800256c:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_READY)
 800256e:	2b20      	cmp	r3, #32
{
 8002570:	460e      	mov	r6, r1
 8002572:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8002574:	d13f      	bne.n	80025f6 <HAL_UART_Transmit+0x94>
    if ((pData == NULL) || (Size == 0U))
 8002576:	2900      	cmp	r1, #0
 8002578:	d03f      	beq.n	80025fa <HAL_UART_Transmit+0x98>
 800257a:	2a00      	cmp	r2, #0
 800257c:	d03d      	beq.n	80025fa <HAL_UART_Transmit+0x98>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800257e:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8002580:	2500      	movs	r5, #0
 8002582:	6445      	str	r5, [r0, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8002584:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
    tickstart = HAL_GetTick();
 8002588:	f7fe fffa 	bl	8001580 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800258c:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 800258e:	4681      	mov	r9, r0
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8002590:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->TxXferSize = Size;
 8002594:	84a7      	strh	r7, [r4, #36]	@ 0x24
    huart->TxXferCount = Size;
 8002596:	84e7      	strh	r7, [r4, #38]	@ 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8002598:	d103      	bne.n	80025a2 <HAL_UART_Transmit+0x40>
 800259a:	6923      	ldr	r3, [r4, #16]
 800259c:	b90b      	cbnz	r3, 80025a2 <HAL_UART_Transmit+0x40>
 800259e:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 80025a0:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 80025a2:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 80025a4:	b29b      	uxth	r3, r3
 80025a6:	b953      	cbnz	r3, 80025be <HAL_UART_Transmit+0x5c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80025a8:	4643      	mov	r3, r8
 80025aa:	464a      	mov	r2, r9
 80025ac:	2140      	movs	r1, #64	@ 0x40
 80025ae:	4620      	mov	r0, r4
 80025b0:	f7ff ff76 	bl	80024a0 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80025b4:	2320      	movs	r3, #32
 80025b6:	b950      	cbnz	r0, 80025ce <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 80025b8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    return HAL_OK;
 80025bc:	e00a      	b.n	80025d4 <HAL_UART_Transmit+0x72>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80025be:	4643      	mov	r3, r8
 80025c0:	464a      	mov	r2, r9
 80025c2:	2180      	movs	r1, #128	@ 0x80
 80025c4:	4620      	mov	r0, r4
 80025c6:	f7ff ff6b 	bl	80024a0 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80025ca:	b128      	cbz	r0, 80025d8 <HAL_UART_Transmit+0x76>
        huart->gState = HAL_UART_STATE_READY;
 80025cc:	2320      	movs	r3, #32
        return HAL_TIMEOUT;
 80025ce:	2003      	movs	r0, #3
        huart->gState = HAL_UART_STATE_READY;
 80025d0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
}
 80025d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80025d8:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 80025da:	b94e      	cbnz	r6, 80025f0 <HAL_UART_Transmit+0x8e>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80025dc:	f835 3b02 	ldrh.w	r3, [r5], #2
 80025e0:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80025e4:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 80025e6:	8ce1      	ldrh	r1, [r4, #38]	@ 0x26
 80025e8:	3901      	subs	r1, #1
 80025ea:	b289      	uxth	r1, r1
 80025ec:	84e1      	strh	r1, [r4, #38]	@ 0x26
 80025ee:	e7d8      	b.n	80025a2 <HAL_UART_Transmit+0x40>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80025f0:	f816 3b01 	ldrb.w	r3, [r6], #1
 80025f4:	e7f6      	b.n	80025e4 <HAL_UART_Transmit+0x82>
    return HAL_BUSY;
 80025f6:	2002      	movs	r0, #2
 80025f8:	e7ec      	b.n	80025d4 <HAL_UART_Transmit+0x72>
      return  HAL_ERROR;
 80025fa:	2001      	movs	r0, #1
 80025fc:	e7ea      	b.n	80025d4 <HAL_UART_Transmit+0x72>

080025fe <__cvt>:
 80025fe:	2b00      	cmp	r3, #0
 8002600:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002604:	461d      	mov	r5, r3
 8002606:	bfbb      	ittet	lt
 8002608:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 800260c:	461d      	movlt	r5, r3
 800260e:	2300      	movge	r3, #0
 8002610:	232d      	movlt	r3, #45	@ 0x2d
 8002612:	b088      	sub	sp, #32
 8002614:	4614      	mov	r4, r2
 8002616:	bfb8      	it	lt
 8002618:	4614      	movlt	r4, r2
 800261a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800261c:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 800261e:	7013      	strb	r3, [r2, #0]
 8002620:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002622:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8002626:	f023 0820 	bic.w	r8, r3, #32
 800262a:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800262e:	d005      	beq.n	800263c <__cvt+0x3e>
 8002630:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8002634:	d100      	bne.n	8002638 <__cvt+0x3a>
 8002636:	3601      	adds	r6, #1
 8002638:	2302      	movs	r3, #2
 800263a:	e000      	b.n	800263e <__cvt+0x40>
 800263c:	2303      	movs	r3, #3
 800263e:	aa07      	add	r2, sp, #28
 8002640:	9204      	str	r2, [sp, #16]
 8002642:	aa06      	add	r2, sp, #24
 8002644:	e9cd a202 	strd	sl, r2, [sp, #8]
 8002648:	e9cd 3600 	strd	r3, r6, [sp]
 800264c:	4622      	mov	r2, r4
 800264e:	462b      	mov	r3, r5
 8002650:	f001 f882 	bl	8003758 <_dtoa_r>
 8002654:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8002658:	4607      	mov	r7, r0
 800265a:	d119      	bne.n	8002690 <__cvt+0x92>
 800265c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800265e:	07db      	lsls	r3, r3, #31
 8002660:	d50e      	bpl.n	8002680 <__cvt+0x82>
 8002662:	eb00 0906 	add.w	r9, r0, r6
 8002666:	2200      	movs	r2, #0
 8002668:	2300      	movs	r3, #0
 800266a:	4620      	mov	r0, r4
 800266c:	4629      	mov	r1, r5
 800266e:	f7fe f99b 	bl	80009a8 <__aeabi_dcmpeq>
 8002672:	b108      	cbz	r0, 8002678 <__cvt+0x7a>
 8002674:	f8cd 901c 	str.w	r9, [sp, #28]
 8002678:	2230      	movs	r2, #48	@ 0x30
 800267a:	9b07      	ldr	r3, [sp, #28]
 800267c:	454b      	cmp	r3, r9
 800267e:	d31e      	bcc.n	80026be <__cvt+0xc0>
 8002680:	4638      	mov	r0, r7
 8002682:	9b07      	ldr	r3, [sp, #28]
 8002684:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8002686:	1bdb      	subs	r3, r3, r7
 8002688:	6013      	str	r3, [r2, #0]
 800268a:	b008      	add	sp, #32
 800268c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002690:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8002694:	eb00 0906 	add.w	r9, r0, r6
 8002698:	d1e5      	bne.n	8002666 <__cvt+0x68>
 800269a:	7803      	ldrb	r3, [r0, #0]
 800269c:	2b30      	cmp	r3, #48	@ 0x30
 800269e:	d10a      	bne.n	80026b6 <__cvt+0xb8>
 80026a0:	2200      	movs	r2, #0
 80026a2:	2300      	movs	r3, #0
 80026a4:	4620      	mov	r0, r4
 80026a6:	4629      	mov	r1, r5
 80026a8:	f7fe f97e 	bl	80009a8 <__aeabi_dcmpeq>
 80026ac:	b918      	cbnz	r0, 80026b6 <__cvt+0xb8>
 80026ae:	f1c6 0601 	rsb	r6, r6, #1
 80026b2:	f8ca 6000 	str.w	r6, [sl]
 80026b6:	f8da 3000 	ldr.w	r3, [sl]
 80026ba:	4499      	add	r9, r3
 80026bc:	e7d3      	b.n	8002666 <__cvt+0x68>
 80026be:	1c59      	adds	r1, r3, #1
 80026c0:	9107      	str	r1, [sp, #28]
 80026c2:	701a      	strb	r2, [r3, #0]
 80026c4:	e7d9      	b.n	800267a <__cvt+0x7c>

080026c6 <__exponent>:
 80026c6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80026c8:	2900      	cmp	r1, #0
 80026ca:	bfb6      	itet	lt
 80026cc:	232d      	movlt	r3, #45	@ 0x2d
 80026ce:	232b      	movge	r3, #43	@ 0x2b
 80026d0:	4249      	neglt	r1, r1
 80026d2:	2909      	cmp	r1, #9
 80026d4:	7002      	strb	r2, [r0, #0]
 80026d6:	7043      	strb	r3, [r0, #1]
 80026d8:	dd29      	ble.n	800272e <__exponent+0x68>
 80026da:	f10d 0307 	add.w	r3, sp, #7
 80026de:	461d      	mov	r5, r3
 80026e0:	270a      	movs	r7, #10
 80026e2:	fbb1 f6f7 	udiv	r6, r1, r7
 80026e6:	461a      	mov	r2, r3
 80026e8:	fb07 1416 	mls	r4, r7, r6, r1
 80026ec:	3430      	adds	r4, #48	@ 0x30
 80026ee:	f802 4c01 	strb.w	r4, [r2, #-1]
 80026f2:	460c      	mov	r4, r1
 80026f4:	2c63      	cmp	r4, #99	@ 0x63
 80026f6:	4631      	mov	r1, r6
 80026f8:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 80026fc:	dcf1      	bgt.n	80026e2 <__exponent+0x1c>
 80026fe:	3130      	adds	r1, #48	@ 0x30
 8002700:	1e94      	subs	r4, r2, #2
 8002702:	f803 1c01 	strb.w	r1, [r3, #-1]
 8002706:	4623      	mov	r3, r4
 8002708:	1c41      	adds	r1, r0, #1
 800270a:	42ab      	cmp	r3, r5
 800270c:	d30a      	bcc.n	8002724 <__exponent+0x5e>
 800270e:	f10d 0309 	add.w	r3, sp, #9
 8002712:	1a9b      	subs	r3, r3, r2
 8002714:	42ac      	cmp	r4, r5
 8002716:	bf88      	it	hi
 8002718:	2300      	movhi	r3, #0
 800271a:	3302      	adds	r3, #2
 800271c:	4403      	add	r3, r0
 800271e:	1a18      	subs	r0, r3, r0
 8002720:	b003      	add	sp, #12
 8002722:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002724:	f813 6b01 	ldrb.w	r6, [r3], #1
 8002728:	f801 6f01 	strb.w	r6, [r1, #1]!
 800272c:	e7ed      	b.n	800270a <__exponent+0x44>
 800272e:	2330      	movs	r3, #48	@ 0x30
 8002730:	3130      	adds	r1, #48	@ 0x30
 8002732:	7083      	strb	r3, [r0, #2]
 8002734:	70c1      	strb	r1, [r0, #3]
 8002736:	1d03      	adds	r3, r0, #4
 8002738:	e7f1      	b.n	800271e <__exponent+0x58>
	...

0800273c <_printf_float>:
 800273c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002740:	b091      	sub	sp, #68	@ 0x44
 8002742:	460c      	mov	r4, r1
 8002744:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8002748:	4616      	mov	r6, r2
 800274a:	461f      	mov	r7, r3
 800274c:	4605      	mov	r5, r0
 800274e:	f000 fef1 	bl	8003534 <_localeconv_r>
 8002752:	6803      	ldr	r3, [r0, #0]
 8002754:	4618      	mov	r0, r3
 8002756:	9308      	str	r3, [sp, #32]
 8002758:	f7fd fcfa 	bl	8000150 <strlen>
 800275c:	2300      	movs	r3, #0
 800275e:	930e      	str	r3, [sp, #56]	@ 0x38
 8002760:	f8d8 3000 	ldr.w	r3, [r8]
 8002764:	9009      	str	r0, [sp, #36]	@ 0x24
 8002766:	3307      	adds	r3, #7
 8002768:	f023 0307 	bic.w	r3, r3, #7
 800276c:	f103 0208 	add.w	r2, r3, #8
 8002770:	f894 a018 	ldrb.w	sl, [r4, #24]
 8002774:	f8d4 b000 	ldr.w	fp, [r4]
 8002778:	f8c8 2000 	str.w	r2, [r8]
 800277c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002780:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8002784:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002786:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 800278a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800278e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002792:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8002796:	4b9c      	ldr	r3, [pc, #624]	@ (8002a08 <_printf_float+0x2cc>)
 8002798:	f7fe f938 	bl	8000a0c <__aeabi_dcmpun>
 800279c:	bb70      	cbnz	r0, 80027fc <_printf_float+0xc0>
 800279e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80027a2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80027a6:	4b98      	ldr	r3, [pc, #608]	@ (8002a08 <_printf_float+0x2cc>)
 80027a8:	f7fe f912 	bl	80009d0 <__aeabi_dcmple>
 80027ac:	bb30      	cbnz	r0, 80027fc <_printf_float+0xc0>
 80027ae:	2200      	movs	r2, #0
 80027b0:	2300      	movs	r3, #0
 80027b2:	4640      	mov	r0, r8
 80027b4:	4649      	mov	r1, r9
 80027b6:	f7fe f901 	bl	80009bc <__aeabi_dcmplt>
 80027ba:	b110      	cbz	r0, 80027c2 <_printf_float+0x86>
 80027bc:	232d      	movs	r3, #45	@ 0x2d
 80027be:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80027c2:	4a92      	ldr	r2, [pc, #584]	@ (8002a0c <_printf_float+0x2d0>)
 80027c4:	4b92      	ldr	r3, [pc, #584]	@ (8002a10 <_printf_float+0x2d4>)
 80027c6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80027ca:	bf94      	ite	ls
 80027cc:	4690      	movls	r8, r2
 80027ce:	4698      	movhi	r8, r3
 80027d0:	2303      	movs	r3, #3
 80027d2:	f04f 0900 	mov.w	r9, #0
 80027d6:	6123      	str	r3, [r4, #16]
 80027d8:	f02b 0304 	bic.w	r3, fp, #4
 80027dc:	6023      	str	r3, [r4, #0]
 80027de:	4633      	mov	r3, r6
 80027e0:	4621      	mov	r1, r4
 80027e2:	4628      	mov	r0, r5
 80027e4:	9700      	str	r7, [sp, #0]
 80027e6:	aa0f      	add	r2, sp, #60	@ 0x3c
 80027e8:	f000 f9d4 	bl	8002b94 <_printf_common>
 80027ec:	3001      	adds	r0, #1
 80027ee:	f040 8090 	bne.w	8002912 <_printf_float+0x1d6>
 80027f2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80027f6:	b011      	add	sp, #68	@ 0x44
 80027f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80027fc:	4642      	mov	r2, r8
 80027fe:	464b      	mov	r3, r9
 8002800:	4640      	mov	r0, r8
 8002802:	4649      	mov	r1, r9
 8002804:	f7fe f902 	bl	8000a0c <__aeabi_dcmpun>
 8002808:	b148      	cbz	r0, 800281e <_printf_float+0xe2>
 800280a:	464b      	mov	r3, r9
 800280c:	2b00      	cmp	r3, #0
 800280e:	bfb8      	it	lt
 8002810:	232d      	movlt	r3, #45	@ 0x2d
 8002812:	4a80      	ldr	r2, [pc, #512]	@ (8002a14 <_printf_float+0x2d8>)
 8002814:	bfb8      	it	lt
 8002816:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800281a:	4b7f      	ldr	r3, [pc, #508]	@ (8002a18 <_printf_float+0x2dc>)
 800281c:	e7d3      	b.n	80027c6 <_printf_float+0x8a>
 800281e:	6863      	ldr	r3, [r4, #4]
 8002820:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8002824:	1c5a      	adds	r2, r3, #1
 8002826:	d13f      	bne.n	80028a8 <_printf_float+0x16c>
 8002828:	2306      	movs	r3, #6
 800282a:	6063      	str	r3, [r4, #4]
 800282c:	2200      	movs	r2, #0
 800282e:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8002832:	6023      	str	r3, [r4, #0]
 8002834:	9206      	str	r2, [sp, #24]
 8002836:	aa0e      	add	r2, sp, #56	@ 0x38
 8002838:	e9cd a204 	strd	sl, r2, [sp, #16]
 800283c:	aa0d      	add	r2, sp, #52	@ 0x34
 800283e:	9203      	str	r2, [sp, #12]
 8002840:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8002844:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002848:	6863      	ldr	r3, [r4, #4]
 800284a:	4642      	mov	r2, r8
 800284c:	9300      	str	r3, [sp, #0]
 800284e:	4628      	mov	r0, r5
 8002850:	464b      	mov	r3, r9
 8002852:	910a      	str	r1, [sp, #40]	@ 0x28
 8002854:	f7ff fed3 	bl	80025fe <__cvt>
 8002858:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800285a:	4680      	mov	r8, r0
 800285c:	2947      	cmp	r1, #71	@ 0x47
 800285e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8002860:	d128      	bne.n	80028b4 <_printf_float+0x178>
 8002862:	1cc8      	adds	r0, r1, #3
 8002864:	db02      	blt.n	800286c <_printf_float+0x130>
 8002866:	6863      	ldr	r3, [r4, #4]
 8002868:	4299      	cmp	r1, r3
 800286a:	dd40      	ble.n	80028ee <_printf_float+0x1b2>
 800286c:	f1aa 0a02 	sub.w	sl, sl, #2
 8002870:	fa5f fa8a 	uxtb.w	sl, sl
 8002874:	4652      	mov	r2, sl
 8002876:	3901      	subs	r1, #1
 8002878:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800287c:	910d      	str	r1, [sp, #52]	@ 0x34
 800287e:	f7ff ff22 	bl	80026c6 <__exponent>
 8002882:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8002884:	4681      	mov	r9, r0
 8002886:	1813      	adds	r3, r2, r0
 8002888:	2a01      	cmp	r2, #1
 800288a:	6123      	str	r3, [r4, #16]
 800288c:	dc02      	bgt.n	8002894 <_printf_float+0x158>
 800288e:	6822      	ldr	r2, [r4, #0]
 8002890:	07d2      	lsls	r2, r2, #31
 8002892:	d501      	bpl.n	8002898 <_printf_float+0x15c>
 8002894:	3301      	adds	r3, #1
 8002896:	6123      	str	r3, [r4, #16]
 8002898:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 800289c:	2b00      	cmp	r3, #0
 800289e:	d09e      	beq.n	80027de <_printf_float+0xa2>
 80028a0:	232d      	movs	r3, #45	@ 0x2d
 80028a2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80028a6:	e79a      	b.n	80027de <_printf_float+0xa2>
 80028a8:	2947      	cmp	r1, #71	@ 0x47
 80028aa:	d1bf      	bne.n	800282c <_printf_float+0xf0>
 80028ac:	2b00      	cmp	r3, #0
 80028ae:	d1bd      	bne.n	800282c <_printf_float+0xf0>
 80028b0:	2301      	movs	r3, #1
 80028b2:	e7ba      	b.n	800282a <_printf_float+0xee>
 80028b4:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80028b8:	d9dc      	bls.n	8002874 <_printf_float+0x138>
 80028ba:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 80028be:	d118      	bne.n	80028f2 <_printf_float+0x1b6>
 80028c0:	2900      	cmp	r1, #0
 80028c2:	6863      	ldr	r3, [r4, #4]
 80028c4:	dd0b      	ble.n	80028de <_printf_float+0x1a2>
 80028c6:	6121      	str	r1, [r4, #16]
 80028c8:	b913      	cbnz	r3, 80028d0 <_printf_float+0x194>
 80028ca:	6822      	ldr	r2, [r4, #0]
 80028cc:	07d0      	lsls	r0, r2, #31
 80028ce:	d502      	bpl.n	80028d6 <_printf_float+0x19a>
 80028d0:	3301      	adds	r3, #1
 80028d2:	440b      	add	r3, r1
 80028d4:	6123      	str	r3, [r4, #16]
 80028d6:	f04f 0900 	mov.w	r9, #0
 80028da:	65a1      	str	r1, [r4, #88]	@ 0x58
 80028dc:	e7dc      	b.n	8002898 <_printf_float+0x15c>
 80028de:	b913      	cbnz	r3, 80028e6 <_printf_float+0x1aa>
 80028e0:	6822      	ldr	r2, [r4, #0]
 80028e2:	07d2      	lsls	r2, r2, #31
 80028e4:	d501      	bpl.n	80028ea <_printf_float+0x1ae>
 80028e6:	3302      	adds	r3, #2
 80028e8:	e7f4      	b.n	80028d4 <_printf_float+0x198>
 80028ea:	2301      	movs	r3, #1
 80028ec:	e7f2      	b.n	80028d4 <_printf_float+0x198>
 80028ee:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80028f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80028f4:	4299      	cmp	r1, r3
 80028f6:	db05      	blt.n	8002904 <_printf_float+0x1c8>
 80028f8:	6823      	ldr	r3, [r4, #0]
 80028fa:	6121      	str	r1, [r4, #16]
 80028fc:	07d8      	lsls	r0, r3, #31
 80028fe:	d5ea      	bpl.n	80028d6 <_printf_float+0x19a>
 8002900:	1c4b      	adds	r3, r1, #1
 8002902:	e7e7      	b.n	80028d4 <_printf_float+0x198>
 8002904:	2900      	cmp	r1, #0
 8002906:	bfcc      	ite	gt
 8002908:	2201      	movgt	r2, #1
 800290a:	f1c1 0202 	rsble	r2, r1, #2
 800290e:	4413      	add	r3, r2
 8002910:	e7e0      	b.n	80028d4 <_printf_float+0x198>
 8002912:	6823      	ldr	r3, [r4, #0]
 8002914:	055a      	lsls	r2, r3, #21
 8002916:	d407      	bmi.n	8002928 <_printf_float+0x1ec>
 8002918:	6923      	ldr	r3, [r4, #16]
 800291a:	4642      	mov	r2, r8
 800291c:	4631      	mov	r1, r6
 800291e:	4628      	mov	r0, r5
 8002920:	47b8      	blx	r7
 8002922:	3001      	adds	r0, #1
 8002924:	d12b      	bne.n	800297e <_printf_float+0x242>
 8002926:	e764      	b.n	80027f2 <_printf_float+0xb6>
 8002928:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800292c:	f240 80dc 	bls.w	8002ae8 <_printf_float+0x3ac>
 8002930:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002934:	2200      	movs	r2, #0
 8002936:	2300      	movs	r3, #0
 8002938:	f7fe f836 	bl	80009a8 <__aeabi_dcmpeq>
 800293c:	2800      	cmp	r0, #0
 800293e:	d033      	beq.n	80029a8 <_printf_float+0x26c>
 8002940:	2301      	movs	r3, #1
 8002942:	4631      	mov	r1, r6
 8002944:	4628      	mov	r0, r5
 8002946:	4a35      	ldr	r2, [pc, #212]	@ (8002a1c <_printf_float+0x2e0>)
 8002948:	47b8      	blx	r7
 800294a:	3001      	adds	r0, #1
 800294c:	f43f af51 	beq.w	80027f2 <_printf_float+0xb6>
 8002950:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8002954:	4543      	cmp	r3, r8
 8002956:	db02      	blt.n	800295e <_printf_float+0x222>
 8002958:	6823      	ldr	r3, [r4, #0]
 800295a:	07d8      	lsls	r0, r3, #31
 800295c:	d50f      	bpl.n	800297e <_printf_float+0x242>
 800295e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002962:	4631      	mov	r1, r6
 8002964:	4628      	mov	r0, r5
 8002966:	47b8      	blx	r7
 8002968:	3001      	adds	r0, #1
 800296a:	f43f af42 	beq.w	80027f2 <_printf_float+0xb6>
 800296e:	f04f 0900 	mov.w	r9, #0
 8002972:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8002976:	f104 0a1a 	add.w	sl, r4, #26
 800297a:	45c8      	cmp	r8, r9
 800297c:	dc09      	bgt.n	8002992 <_printf_float+0x256>
 800297e:	6823      	ldr	r3, [r4, #0]
 8002980:	079b      	lsls	r3, r3, #30
 8002982:	f100 8102 	bmi.w	8002b8a <_printf_float+0x44e>
 8002986:	68e0      	ldr	r0, [r4, #12]
 8002988:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800298a:	4298      	cmp	r0, r3
 800298c:	bfb8      	it	lt
 800298e:	4618      	movlt	r0, r3
 8002990:	e731      	b.n	80027f6 <_printf_float+0xba>
 8002992:	2301      	movs	r3, #1
 8002994:	4652      	mov	r2, sl
 8002996:	4631      	mov	r1, r6
 8002998:	4628      	mov	r0, r5
 800299a:	47b8      	blx	r7
 800299c:	3001      	adds	r0, #1
 800299e:	f43f af28 	beq.w	80027f2 <_printf_float+0xb6>
 80029a2:	f109 0901 	add.w	r9, r9, #1
 80029a6:	e7e8      	b.n	800297a <_printf_float+0x23e>
 80029a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80029aa:	2b00      	cmp	r3, #0
 80029ac:	dc38      	bgt.n	8002a20 <_printf_float+0x2e4>
 80029ae:	2301      	movs	r3, #1
 80029b0:	4631      	mov	r1, r6
 80029b2:	4628      	mov	r0, r5
 80029b4:	4a19      	ldr	r2, [pc, #100]	@ (8002a1c <_printf_float+0x2e0>)
 80029b6:	47b8      	blx	r7
 80029b8:	3001      	adds	r0, #1
 80029ba:	f43f af1a 	beq.w	80027f2 <_printf_float+0xb6>
 80029be:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 80029c2:	ea59 0303 	orrs.w	r3, r9, r3
 80029c6:	d102      	bne.n	80029ce <_printf_float+0x292>
 80029c8:	6823      	ldr	r3, [r4, #0]
 80029ca:	07d9      	lsls	r1, r3, #31
 80029cc:	d5d7      	bpl.n	800297e <_printf_float+0x242>
 80029ce:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80029d2:	4631      	mov	r1, r6
 80029d4:	4628      	mov	r0, r5
 80029d6:	47b8      	blx	r7
 80029d8:	3001      	adds	r0, #1
 80029da:	f43f af0a 	beq.w	80027f2 <_printf_float+0xb6>
 80029de:	f04f 0a00 	mov.w	sl, #0
 80029e2:	f104 0b1a 	add.w	fp, r4, #26
 80029e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80029e8:	425b      	negs	r3, r3
 80029ea:	4553      	cmp	r3, sl
 80029ec:	dc01      	bgt.n	80029f2 <_printf_float+0x2b6>
 80029ee:	464b      	mov	r3, r9
 80029f0:	e793      	b.n	800291a <_printf_float+0x1de>
 80029f2:	2301      	movs	r3, #1
 80029f4:	465a      	mov	r2, fp
 80029f6:	4631      	mov	r1, r6
 80029f8:	4628      	mov	r0, r5
 80029fa:	47b8      	blx	r7
 80029fc:	3001      	adds	r0, #1
 80029fe:	f43f aef8 	beq.w	80027f2 <_printf_float+0xb6>
 8002a02:	f10a 0a01 	add.w	sl, sl, #1
 8002a06:	e7ee      	b.n	80029e6 <_printf_float+0x2aa>
 8002a08:	7fefffff 	.word	0x7fefffff
 8002a0c:	08006d0f 	.word	0x08006d0f
 8002a10:	08006d13 	.word	0x08006d13
 8002a14:	08006d17 	.word	0x08006d17
 8002a18:	08006d1b 	.word	0x08006d1b
 8002a1c:	08006d1f 	.word	0x08006d1f
 8002a20:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002a22:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8002a26:	4553      	cmp	r3, sl
 8002a28:	bfa8      	it	ge
 8002a2a:	4653      	movge	r3, sl
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	4699      	mov	r9, r3
 8002a30:	dc36      	bgt.n	8002aa0 <_printf_float+0x364>
 8002a32:	f04f 0b00 	mov.w	fp, #0
 8002a36:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002a3a:	f104 021a 	add.w	r2, r4, #26
 8002a3e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002a40:	930a      	str	r3, [sp, #40]	@ 0x28
 8002a42:	eba3 0309 	sub.w	r3, r3, r9
 8002a46:	455b      	cmp	r3, fp
 8002a48:	dc31      	bgt.n	8002aae <_printf_float+0x372>
 8002a4a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002a4c:	459a      	cmp	sl, r3
 8002a4e:	dc3a      	bgt.n	8002ac6 <_printf_float+0x38a>
 8002a50:	6823      	ldr	r3, [r4, #0]
 8002a52:	07da      	lsls	r2, r3, #31
 8002a54:	d437      	bmi.n	8002ac6 <_printf_float+0x38a>
 8002a56:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002a58:	ebaa 0903 	sub.w	r9, sl, r3
 8002a5c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002a5e:	ebaa 0303 	sub.w	r3, sl, r3
 8002a62:	4599      	cmp	r9, r3
 8002a64:	bfa8      	it	ge
 8002a66:	4699      	movge	r9, r3
 8002a68:	f1b9 0f00 	cmp.w	r9, #0
 8002a6c:	dc33      	bgt.n	8002ad6 <_printf_float+0x39a>
 8002a6e:	f04f 0800 	mov.w	r8, #0
 8002a72:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002a76:	f104 0b1a 	add.w	fp, r4, #26
 8002a7a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002a7c:	ebaa 0303 	sub.w	r3, sl, r3
 8002a80:	eba3 0309 	sub.w	r3, r3, r9
 8002a84:	4543      	cmp	r3, r8
 8002a86:	f77f af7a 	ble.w	800297e <_printf_float+0x242>
 8002a8a:	2301      	movs	r3, #1
 8002a8c:	465a      	mov	r2, fp
 8002a8e:	4631      	mov	r1, r6
 8002a90:	4628      	mov	r0, r5
 8002a92:	47b8      	blx	r7
 8002a94:	3001      	adds	r0, #1
 8002a96:	f43f aeac 	beq.w	80027f2 <_printf_float+0xb6>
 8002a9a:	f108 0801 	add.w	r8, r8, #1
 8002a9e:	e7ec      	b.n	8002a7a <_printf_float+0x33e>
 8002aa0:	4642      	mov	r2, r8
 8002aa2:	4631      	mov	r1, r6
 8002aa4:	4628      	mov	r0, r5
 8002aa6:	47b8      	blx	r7
 8002aa8:	3001      	adds	r0, #1
 8002aaa:	d1c2      	bne.n	8002a32 <_printf_float+0x2f6>
 8002aac:	e6a1      	b.n	80027f2 <_printf_float+0xb6>
 8002aae:	2301      	movs	r3, #1
 8002ab0:	4631      	mov	r1, r6
 8002ab2:	4628      	mov	r0, r5
 8002ab4:	920a      	str	r2, [sp, #40]	@ 0x28
 8002ab6:	47b8      	blx	r7
 8002ab8:	3001      	adds	r0, #1
 8002aba:	f43f ae9a 	beq.w	80027f2 <_printf_float+0xb6>
 8002abe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002ac0:	f10b 0b01 	add.w	fp, fp, #1
 8002ac4:	e7bb      	b.n	8002a3e <_printf_float+0x302>
 8002ac6:	4631      	mov	r1, r6
 8002ac8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002acc:	4628      	mov	r0, r5
 8002ace:	47b8      	blx	r7
 8002ad0:	3001      	adds	r0, #1
 8002ad2:	d1c0      	bne.n	8002a56 <_printf_float+0x31a>
 8002ad4:	e68d      	b.n	80027f2 <_printf_float+0xb6>
 8002ad6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002ad8:	464b      	mov	r3, r9
 8002ada:	4631      	mov	r1, r6
 8002adc:	4628      	mov	r0, r5
 8002ade:	4442      	add	r2, r8
 8002ae0:	47b8      	blx	r7
 8002ae2:	3001      	adds	r0, #1
 8002ae4:	d1c3      	bne.n	8002a6e <_printf_float+0x332>
 8002ae6:	e684      	b.n	80027f2 <_printf_float+0xb6>
 8002ae8:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8002aec:	f1ba 0f01 	cmp.w	sl, #1
 8002af0:	dc01      	bgt.n	8002af6 <_printf_float+0x3ba>
 8002af2:	07db      	lsls	r3, r3, #31
 8002af4:	d536      	bpl.n	8002b64 <_printf_float+0x428>
 8002af6:	2301      	movs	r3, #1
 8002af8:	4642      	mov	r2, r8
 8002afa:	4631      	mov	r1, r6
 8002afc:	4628      	mov	r0, r5
 8002afe:	47b8      	blx	r7
 8002b00:	3001      	adds	r0, #1
 8002b02:	f43f ae76 	beq.w	80027f2 <_printf_float+0xb6>
 8002b06:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002b0a:	4631      	mov	r1, r6
 8002b0c:	4628      	mov	r0, r5
 8002b0e:	47b8      	blx	r7
 8002b10:	3001      	adds	r0, #1
 8002b12:	f43f ae6e 	beq.w	80027f2 <_printf_float+0xb6>
 8002b16:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002b1a:	2200      	movs	r2, #0
 8002b1c:	2300      	movs	r3, #0
 8002b1e:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8002b22:	f7fd ff41 	bl	80009a8 <__aeabi_dcmpeq>
 8002b26:	b9c0      	cbnz	r0, 8002b5a <_printf_float+0x41e>
 8002b28:	4653      	mov	r3, sl
 8002b2a:	f108 0201 	add.w	r2, r8, #1
 8002b2e:	4631      	mov	r1, r6
 8002b30:	4628      	mov	r0, r5
 8002b32:	47b8      	blx	r7
 8002b34:	3001      	adds	r0, #1
 8002b36:	d10c      	bne.n	8002b52 <_printf_float+0x416>
 8002b38:	e65b      	b.n	80027f2 <_printf_float+0xb6>
 8002b3a:	2301      	movs	r3, #1
 8002b3c:	465a      	mov	r2, fp
 8002b3e:	4631      	mov	r1, r6
 8002b40:	4628      	mov	r0, r5
 8002b42:	47b8      	blx	r7
 8002b44:	3001      	adds	r0, #1
 8002b46:	f43f ae54 	beq.w	80027f2 <_printf_float+0xb6>
 8002b4a:	f108 0801 	add.w	r8, r8, #1
 8002b4e:	45d0      	cmp	r8, sl
 8002b50:	dbf3      	blt.n	8002b3a <_printf_float+0x3fe>
 8002b52:	464b      	mov	r3, r9
 8002b54:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8002b58:	e6e0      	b.n	800291c <_printf_float+0x1e0>
 8002b5a:	f04f 0800 	mov.w	r8, #0
 8002b5e:	f104 0b1a 	add.w	fp, r4, #26
 8002b62:	e7f4      	b.n	8002b4e <_printf_float+0x412>
 8002b64:	2301      	movs	r3, #1
 8002b66:	4642      	mov	r2, r8
 8002b68:	e7e1      	b.n	8002b2e <_printf_float+0x3f2>
 8002b6a:	2301      	movs	r3, #1
 8002b6c:	464a      	mov	r2, r9
 8002b6e:	4631      	mov	r1, r6
 8002b70:	4628      	mov	r0, r5
 8002b72:	47b8      	blx	r7
 8002b74:	3001      	adds	r0, #1
 8002b76:	f43f ae3c 	beq.w	80027f2 <_printf_float+0xb6>
 8002b7a:	f108 0801 	add.w	r8, r8, #1
 8002b7e:	68e3      	ldr	r3, [r4, #12]
 8002b80:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8002b82:	1a5b      	subs	r3, r3, r1
 8002b84:	4543      	cmp	r3, r8
 8002b86:	dcf0      	bgt.n	8002b6a <_printf_float+0x42e>
 8002b88:	e6fd      	b.n	8002986 <_printf_float+0x24a>
 8002b8a:	f04f 0800 	mov.w	r8, #0
 8002b8e:	f104 0919 	add.w	r9, r4, #25
 8002b92:	e7f4      	b.n	8002b7e <_printf_float+0x442>

08002b94 <_printf_common>:
 8002b94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002b98:	4616      	mov	r6, r2
 8002b9a:	4698      	mov	r8, r3
 8002b9c:	688a      	ldr	r2, [r1, #8]
 8002b9e:	690b      	ldr	r3, [r1, #16]
 8002ba0:	4607      	mov	r7, r0
 8002ba2:	4293      	cmp	r3, r2
 8002ba4:	bfb8      	it	lt
 8002ba6:	4613      	movlt	r3, r2
 8002ba8:	6033      	str	r3, [r6, #0]
 8002baa:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002bae:	460c      	mov	r4, r1
 8002bb0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002bb4:	b10a      	cbz	r2, 8002bba <_printf_common+0x26>
 8002bb6:	3301      	adds	r3, #1
 8002bb8:	6033      	str	r3, [r6, #0]
 8002bba:	6823      	ldr	r3, [r4, #0]
 8002bbc:	0699      	lsls	r1, r3, #26
 8002bbe:	bf42      	ittt	mi
 8002bc0:	6833      	ldrmi	r3, [r6, #0]
 8002bc2:	3302      	addmi	r3, #2
 8002bc4:	6033      	strmi	r3, [r6, #0]
 8002bc6:	6825      	ldr	r5, [r4, #0]
 8002bc8:	f015 0506 	ands.w	r5, r5, #6
 8002bcc:	d106      	bne.n	8002bdc <_printf_common+0x48>
 8002bce:	f104 0a19 	add.w	sl, r4, #25
 8002bd2:	68e3      	ldr	r3, [r4, #12]
 8002bd4:	6832      	ldr	r2, [r6, #0]
 8002bd6:	1a9b      	subs	r3, r3, r2
 8002bd8:	42ab      	cmp	r3, r5
 8002bda:	dc2b      	bgt.n	8002c34 <_printf_common+0xa0>
 8002bdc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002be0:	6822      	ldr	r2, [r4, #0]
 8002be2:	3b00      	subs	r3, #0
 8002be4:	bf18      	it	ne
 8002be6:	2301      	movne	r3, #1
 8002be8:	0692      	lsls	r2, r2, #26
 8002bea:	d430      	bmi.n	8002c4e <_printf_common+0xba>
 8002bec:	4641      	mov	r1, r8
 8002bee:	4638      	mov	r0, r7
 8002bf0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002bf4:	47c8      	blx	r9
 8002bf6:	3001      	adds	r0, #1
 8002bf8:	d023      	beq.n	8002c42 <_printf_common+0xae>
 8002bfa:	6823      	ldr	r3, [r4, #0]
 8002bfc:	6922      	ldr	r2, [r4, #16]
 8002bfe:	f003 0306 	and.w	r3, r3, #6
 8002c02:	2b04      	cmp	r3, #4
 8002c04:	bf14      	ite	ne
 8002c06:	2500      	movne	r5, #0
 8002c08:	6833      	ldreq	r3, [r6, #0]
 8002c0a:	f04f 0600 	mov.w	r6, #0
 8002c0e:	bf08      	it	eq
 8002c10:	68e5      	ldreq	r5, [r4, #12]
 8002c12:	f104 041a 	add.w	r4, r4, #26
 8002c16:	bf08      	it	eq
 8002c18:	1aed      	subeq	r5, r5, r3
 8002c1a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8002c1e:	bf08      	it	eq
 8002c20:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002c24:	4293      	cmp	r3, r2
 8002c26:	bfc4      	itt	gt
 8002c28:	1a9b      	subgt	r3, r3, r2
 8002c2a:	18ed      	addgt	r5, r5, r3
 8002c2c:	42b5      	cmp	r5, r6
 8002c2e:	d11a      	bne.n	8002c66 <_printf_common+0xd2>
 8002c30:	2000      	movs	r0, #0
 8002c32:	e008      	b.n	8002c46 <_printf_common+0xb2>
 8002c34:	2301      	movs	r3, #1
 8002c36:	4652      	mov	r2, sl
 8002c38:	4641      	mov	r1, r8
 8002c3a:	4638      	mov	r0, r7
 8002c3c:	47c8      	blx	r9
 8002c3e:	3001      	adds	r0, #1
 8002c40:	d103      	bne.n	8002c4a <_printf_common+0xb6>
 8002c42:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002c46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002c4a:	3501      	adds	r5, #1
 8002c4c:	e7c1      	b.n	8002bd2 <_printf_common+0x3e>
 8002c4e:	2030      	movs	r0, #48	@ 0x30
 8002c50:	18e1      	adds	r1, r4, r3
 8002c52:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8002c56:	1c5a      	adds	r2, r3, #1
 8002c58:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002c5c:	4422      	add	r2, r4
 8002c5e:	3302      	adds	r3, #2
 8002c60:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002c64:	e7c2      	b.n	8002bec <_printf_common+0x58>
 8002c66:	2301      	movs	r3, #1
 8002c68:	4622      	mov	r2, r4
 8002c6a:	4641      	mov	r1, r8
 8002c6c:	4638      	mov	r0, r7
 8002c6e:	47c8      	blx	r9
 8002c70:	3001      	adds	r0, #1
 8002c72:	d0e6      	beq.n	8002c42 <_printf_common+0xae>
 8002c74:	3601      	adds	r6, #1
 8002c76:	e7d9      	b.n	8002c2c <_printf_common+0x98>

08002c78 <_printf_i>:
 8002c78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002c7c:	7e0f      	ldrb	r7, [r1, #24]
 8002c7e:	4691      	mov	r9, r2
 8002c80:	2f78      	cmp	r7, #120	@ 0x78
 8002c82:	4680      	mov	r8, r0
 8002c84:	460c      	mov	r4, r1
 8002c86:	469a      	mov	sl, r3
 8002c88:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002c8a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002c8e:	d807      	bhi.n	8002ca0 <_printf_i+0x28>
 8002c90:	2f62      	cmp	r7, #98	@ 0x62
 8002c92:	d80a      	bhi.n	8002caa <_printf_i+0x32>
 8002c94:	2f00      	cmp	r7, #0
 8002c96:	f000 80d3 	beq.w	8002e40 <_printf_i+0x1c8>
 8002c9a:	2f58      	cmp	r7, #88	@ 0x58
 8002c9c:	f000 80ba 	beq.w	8002e14 <_printf_i+0x19c>
 8002ca0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002ca4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002ca8:	e03a      	b.n	8002d20 <_printf_i+0xa8>
 8002caa:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002cae:	2b15      	cmp	r3, #21
 8002cb0:	d8f6      	bhi.n	8002ca0 <_printf_i+0x28>
 8002cb2:	a101      	add	r1, pc, #4	@ (adr r1, 8002cb8 <_printf_i+0x40>)
 8002cb4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002cb8:	08002d11 	.word	0x08002d11
 8002cbc:	08002d25 	.word	0x08002d25
 8002cc0:	08002ca1 	.word	0x08002ca1
 8002cc4:	08002ca1 	.word	0x08002ca1
 8002cc8:	08002ca1 	.word	0x08002ca1
 8002ccc:	08002ca1 	.word	0x08002ca1
 8002cd0:	08002d25 	.word	0x08002d25
 8002cd4:	08002ca1 	.word	0x08002ca1
 8002cd8:	08002ca1 	.word	0x08002ca1
 8002cdc:	08002ca1 	.word	0x08002ca1
 8002ce0:	08002ca1 	.word	0x08002ca1
 8002ce4:	08002e27 	.word	0x08002e27
 8002ce8:	08002d4f 	.word	0x08002d4f
 8002cec:	08002de1 	.word	0x08002de1
 8002cf0:	08002ca1 	.word	0x08002ca1
 8002cf4:	08002ca1 	.word	0x08002ca1
 8002cf8:	08002e49 	.word	0x08002e49
 8002cfc:	08002ca1 	.word	0x08002ca1
 8002d00:	08002d4f 	.word	0x08002d4f
 8002d04:	08002ca1 	.word	0x08002ca1
 8002d08:	08002ca1 	.word	0x08002ca1
 8002d0c:	08002de9 	.word	0x08002de9
 8002d10:	6833      	ldr	r3, [r6, #0]
 8002d12:	1d1a      	adds	r2, r3, #4
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	6032      	str	r2, [r6, #0]
 8002d18:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002d1c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002d20:	2301      	movs	r3, #1
 8002d22:	e09e      	b.n	8002e62 <_printf_i+0x1ea>
 8002d24:	6833      	ldr	r3, [r6, #0]
 8002d26:	6820      	ldr	r0, [r4, #0]
 8002d28:	1d19      	adds	r1, r3, #4
 8002d2a:	6031      	str	r1, [r6, #0]
 8002d2c:	0606      	lsls	r6, r0, #24
 8002d2e:	d501      	bpl.n	8002d34 <_printf_i+0xbc>
 8002d30:	681d      	ldr	r5, [r3, #0]
 8002d32:	e003      	b.n	8002d3c <_printf_i+0xc4>
 8002d34:	0645      	lsls	r5, r0, #25
 8002d36:	d5fb      	bpl.n	8002d30 <_printf_i+0xb8>
 8002d38:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002d3c:	2d00      	cmp	r5, #0
 8002d3e:	da03      	bge.n	8002d48 <_printf_i+0xd0>
 8002d40:	232d      	movs	r3, #45	@ 0x2d
 8002d42:	426d      	negs	r5, r5
 8002d44:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002d48:	230a      	movs	r3, #10
 8002d4a:	4859      	ldr	r0, [pc, #356]	@ (8002eb0 <_printf_i+0x238>)
 8002d4c:	e011      	b.n	8002d72 <_printf_i+0xfa>
 8002d4e:	6821      	ldr	r1, [r4, #0]
 8002d50:	6833      	ldr	r3, [r6, #0]
 8002d52:	0608      	lsls	r0, r1, #24
 8002d54:	f853 5b04 	ldr.w	r5, [r3], #4
 8002d58:	d402      	bmi.n	8002d60 <_printf_i+0xe8>
 8002d5a:	0649      	lsls	r1, r1, #25
 8002d5c:	bf48      	it	mi
 8002d5e:	b2ad      	uxthmi	r5, r5
 8002d60:	2f6f      	cmp	r7, #111	@ 0x6f
 8002d62:	6033      	str	r3, [r6, #0]
 8002d64:	bf14      	ite	ne
 8002d66:	230a      	movne	r3, #10
 8002d68:	2308      	moveq	r3, #8
 8002d6a:	4851      	ldr	r0, [pc, #324]	@ (8002eb0 <_printf_i+0x238>)
 8002d6c:	2100      	movs	r1, #0
 8002d6e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002d72:	6866      	ldr	r6, [r4, #4]
 8002d74:	2e00      	cmp	r6, #0
 8002d76:	bfa8      	it	ge
 8002d78:	6821      	ldrge	r1, [r4, #0]
 8002d7a:	60a6      	str	r6, [r4, #8]
 8002d7c:	bfa4      	itt	ge
 8002d7e:	f021 0104 	bicge.w	r1, r1, #4
 8002d82:	6021      	strge	r1, [r4, #0]
 8002d84:	b90d      	cbnz	r5, 8002d8a <_printf_i+0x112>
 8002d86:	2e00      	cmp	r6, #0
 8002d88:	d04b      	beq.n	8002e22 <_printf_i+0x1aa>
 8002d8a:	4616      	mov	r6, r2
 8002d8c:	fbb5 f1f3 	udiv	r1, r5, r3
 8002d90:	fb03 5711 	mls	r7, r3, r1, r5
 8002d94:	5dc7      	ldrb	r7, [r0, r7]
 8002d96:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002d9a:	462f      	mov	r7, r5
 8002d9c:	42bb      	cmp	r3, r7
 8002d9e:	460d      	mov	r5, r1
 8002da0:	d9f4      	bls.n	8002d8c <_printf_i+0x114>
 8002da2:	2b08      	cmp	r3, #8
 8002da4:	d10b      	bne.n	8002dbe <_printf_i+0x146>
 8002da6:	6823      	ldr	r3, [r4, #0]
 8002da8:	07df      	lsls	r7, r3, #31
 8002daa:	d508      	bpl.n	8002dbe <_printf_i+0x146>
 8002dac:	6923      	ldr	r3, [r4, #16]
 8002dae:	6861      	ldr	r1, [r4, #4]
 8002db0:	4299      	cmp	r1, r3
 8002db2:	bfde      	ittt	le
 8002db4:	2330      	movle	r3, #48	@ 0x30
 8002db6:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002dba:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8002dbe:	1b92      	subs	r2, r2, r6
 8002dc0:	6122      	str	r2, [r4, #16]
 8002dc2:	464b      	mov	r3, r9
 8002dc4:	4621      	mov	r1, r4
 8002dc6:	4640      	mov	r0, r8
 8002dc8:	f8cd a000 	str.w	sl, [sp]
 8002dcc:	aa03      	add	r2, sp, #12
 8002dce:	f7ff fee1 	bl	8002b94 <_printf_common>
 8002dd2:	3001      	adds	r0, #1
 8002dd4:	d14a      	bne.n	8002e6c <_printf_i+0x1f4>
 8002dd6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002dda:	b004      	add	sp, #16
 8002ddc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002de0:	6823      	ldr	r3, [r4, #0]
 8002de2:	f043 0320 	orr.w	r3, r3, #32
 8002de6:	6023      	str	r3, [r4, #0]
 8002de8:	2778      	movs	r7, #120	@ 0x78
 8002dea:	4832      	ldr	r0, [pc, #200]	@ (8002eb4 <_printf_i+0x23c>)
 8002dec:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002df0:	6823      	ldr	r3, [r4, #0]
 8002df2:	6831      	ldr	r1, [r6, #0]
 8002df4:	061f      	lsls	r7, r3, #24
 8002df6:	f851 5b04 	ldr.w	r5, [r1], #4
 8002dfa:	d402      	bmi.n	8002e02 <_printf_i+0x18a>
 8002dfc:	065f      	lsls	r7, r3, #25
 8002dfe:	bf48      	it	mi
 8002e00:	b2ad      	uxthmi	r5, r5
 8002e02:	6031      	str	r1, [r6, #0]
 8002e04:	07d9      	lsls	r1, r3, #31
 8002e06:	bf44      	itt	mi
 8002e08:	f043 0320 	orrmi.w	r3, r3, #32
 8002e0c:	6023      	strmi	r3, [r4, #0]
 8002e0e:	b11d      	cbz	r5, 8002e18 <_printf_i+0x1a0>
 8002e10:	2310      	movs	r3, #16
 8002e12:	e7ab      	b.n	8002d6c <_printf_i+0xf4>
 8002e14:	4826      	ldr	r0, [pc, #152]	@ (8002eb0 <_printf_i+0x238>)
 8002e16:	e7e9      	b.n	8002dec <_printf_i+0x174>
 8002e18:	6823      	ldr	r3, [r4, #0]
 8002e1a:	f023 0320 	bic.w	r3, r3, #32
 8002e1e:	6023      	str	r3, [r4, #0]
 8002e20:	e7f6      	b.n	8002e10 <_printf_i+0x198>
 8002e22:	4616      	mov	r6, r2
 8002e24:	e7bd      	b.n	8002da2 <_printf_i+0x12a>
 8002e26:	6833      	ldr	r3, [r6, #0]
 8002e28:	6825      	ldr	r5, [r4, #0]
 8002e2a:	1d18      	adds	r0, r3, #4
 8002e2c:	6961      	ldr	r1, [r4, #20]
 8002e2e:	6030      	str	r0, [r6, #0]
 8002e30:	062e      	lsls	r6, r5, #24
 8002e32:	681b      	ldr	r3, [r3, #0]
 8002e34:	d501      	bpl.n	8002e3a <_printf_i+0x1c2>
 8002e36:	6019      	str	r1, [r3, #0]
 8002e38:	e002      	b.n	8002e40 <_printf_i+0x1c8>
 8002e3a:	0668      	lsls	r0, r5, #25
 8002e3c:	d5fb      	bpl.n	8002e36 <_printf_i+0x1be>
 8002e3e:	8019      	strh	r1, [r3, #0]
 8002e40:	2300      	movs	r3, #0
 8002e42:	4616      	mov	r6, r2
 8002e44:	6123      	str	r3, [r4, #16]
 8002e46:	e7bc      	b.n	8002dc2 <_printf_i+0x14a>
 8002e48:	6833      	ldr	r3, [r6, #0]
 8002e4a:	2100      	movs	r1, #0
 8002e4c:	1d1a      	adds	r2, r3, #4
 8002e4e:	6032      	str	r2, [r6, #0]
 8002e50:	681e      	ldr	r6, [r3, #0]
 8002e52:	6862      	ldr	r2, [r4, #4]
 8002e54:	4630      	mov	r0, r6
 8002e56:	f000 fbe4 	bl	8003622 <memchr>
 8002e5a:	b108      	cbz	r0, 8002e60 <_printf_i+0x1e8>
 8002e5c:	1b80      	subs	r0, r0, r6
 8002e5e:	6060      	str	r0, [r4, #4]
 8002e60:	6863      	ldr	r3, [r4, #4]
 8002e62:	6123      	str	r3, [r4, #16]
 8002e64:	2300      	movs	r3, #0
 8002e66:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002e6a:	e7aa      	b.n	8002dc2 <_printf_i+0x14a>
 8002e6c:	4632      	mov	r2, r6
 8002e6e:	4649      	mov	r1, r9
 8002e70:	4640      	mov	r0, r8
 8002e72:	6923      	ldr	r3, [r4, #16]
 8002e74:	47d0      	blx	sl
 8002e76:	3001      	adds	r0, #1
 8002e78:	d0ad      	beq.n	8002dd6 <_printf_i+0x15e>
 8002e7a:	6823      	ldr	r3, [r4, #0]
 8002e7c:	079b      	lsls	r3, r3, #30
 8002e7e:	d413      	bmi.n	8002ea8 <_printf_i+0x230>
 8002e80:	68e0      	ldr	r0, [r4, #12]
 8002e82:	9b03      	ldr	r3, [sp, #12]
 8002e84:	4298      	cmp	r0, r3
 8002e86:	bfb8      	it	lt
 8002e88:	4618      	movlt	r0, r3
 8002e8a:	e7a6      	b.n	8002dda <_printf_i+0x162>
 8002e8c:	2301      	movs	r3, #1
 8002e8e:	4632      	mov	r2, r6
 8002e90:	4649      	mov	r1, r9
 8002e92:	4640      	mov	r0, r8
 8002e94:	47d0      	blx	sl
 8002e96:	3001      	adds	r0, #1
 8002e98:	d09d      	beq.n	8002dd6 <_printf_i+0x15e>
 8002e9a:	3501      	adds	r5, #1
 8002e9c:	68e3      	ldr	r3, [r4, #12]
 8002e9e:	9903      	ldr	r1, [sp, #12]
 8002ea0:	1a5b      	subs	r3, r3, r1
 8002ea2:	42ab      	cmp	r3, r5
 8002ea4:	dcf2      	bgt.n	8002e8c <_printf_i+0x214>
 8002ea6:	e7eb      	b.n	8002e80 <_printf_i+0x208>
 8002ea8:	2500      	movs	r5, #0
 8002eaa:	f104 0619 	add.w	r6, r4, #25
 8002eae:	e7f5      	b.n	8002e9c <_printf_i+0x224>
 8002eb0:	08006d21 	.word	0x08006d21
 8002eb4:	08006d32 	.word	0x08006d32

08002eb8 <_scanf_float>:
 8002eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ebc:	b087      	sub	sp, #28
 8002ebe:	9303      	str	r3, [sp, #12]
 8002ec0:	688b      	ldr	r3, [r1, #8]
 8002ec2:	4617      	mov	r7, r2
 8002ec4:	1e5a      	subs	r2, r3, #1
 8002ec6:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8002eca:	bf82      	ittt	hi
 8002ecc:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8002ed0:	eb03 0b05 	addhi.w	fp, r3, r5
 8002ed4:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8002ed8:	460a      	mov	r2, r1
 8002eda:	f04f 0500 	mov.w	r5, #0
 8002ede:	bf88      	it	hi
 8002ee0:	608b      	strhi	r3, [r1, #8]
 8002ee2:	680b      	ldr	r3, [r1, #0]
 8002ee4:	4680      	mov	r8, r0
 8002ee6:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8002eea:	f842 3b1c 	str.w	r3, [r2], #28
 8002eee:	460c      	mov	r4, r1
 8002ef0:	bf98      	it	ls
 8002ef2:	f04f 0b00 	movls.w	fp, #0
 8002ef6:	4616      	mov	r6, r2
 8002ef8:	46aa      	mov	sl, r5
 8002efa:	46a9      	mov	r9, r5
 8002efc:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002f00:	9201      	str	r2, [sp, #4]
 8002f02:	9502      	str	r5, [sp, #8]
 8002f04:	68a2      	ldr	r2, [r4, #8]
 8002f06:	b152      	cbz	r2, 8002f1e <_scanf_float+0x66>
 8002f08:	683b      	ldr	r3, [r7, #0]
 8002f0a:	781b      	ldrb	r3, [r3, #0]
 8002f0c:	2b4e      	cmp	r3, #78	@ 0x4e
 8002f0e:	d865      	bhi.n	8002fdc <_scanf_float+0x124>
 8002f10:	2b40      	cmp	r3, #64	@ 0x40
 8002f12:	d83d      	bhi.n	8002f90 <_scanf_float+0xd8>
 8002f14:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8002f18:	b2c8      	uxtb	r0, r1
 8002f1a:	280e      	cmp	r0, #14
 8002f1c:	d93b      	bls.n	8002f96 <_scanf_float+0xde>
 8002f1e:	f1b9 0f00 	cmp.w	r9, #0
 8002f22:	d003      	beq.n	8002f2c <_scanf_float+0x74>
 8002f24:	6823      	ldr	r3, [r4, #0]
 8002f26:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002f2a:	6023      	str	r3, [r4, #0]
 8002f2c:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8002f30:	f1ba 0f01 	cmp.w	sl, #1
 8002f34:	f200 8118 	bhi.w	8003168 <_scanf_float+0x2b0>
 8002f38:	9b01      	ldr	r3, [sp, #4]
 8002f3a:	429e      	cmp	r6, r3
 8002f3c:	f200 8109 	bhi.w	8003152 <_scanf_float+0x29a>
 8002f40:	2001      	movs	r0, #1
 8002f42:	b007      	add	sp, #28
 8002f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f48:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8002f4c:	2a0d      	cmp	r2, #13
 8002f4e:	d8e6      	bhi.n	8002f1e <_scanf_float+0x66>
 8002f50:	a101      	add	r1, pc, #4	@ (adr r1, 8002f58 <_scanf_float+0xa0>)
 8002f52:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002f56:	bf00      	nop
 8002f58:	0800309f 	.word	0x0800309f
 8002f5c:	08002f1f 	.word	0x08002f1f
 8002f60:	08002f1f 	.word	0x08002f1f
 8002f64:	08002f1f 	.word	0x08002f1f
 8002f68:	080030ff 	.word	0x080030ff
 8002f6c:	080030d7 	.word	0x080030d7
 8002f70:	08002f1f 	.word	0x08002f1f
 8002f74:	08002f1f 	.word	0x08002f1f
 8002f78:	080030ad 	.word	0x080030ad
 8002f7c:	08002f1f 	.word	0x08002f1f
 8002f80:	08002f1f 	.word	0x08002f1f
 8002f84:	08002f1f 	.word	0x08002f1f
 8002f88:	08002f1f 	.word	0x08002f1f
 8002f8c:	08003065 	.word	0x08003065
 8002f90:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8002f94:	e7da      	b.n	8002f4c <_scanf_float+0x94>
 8002f96:	290e      	cmp	r1, #14
 8002f98:	d8c1      	bhi.n	8002f1e <_scanf_float+0x66>
 8002f9a:	a001      	add	r0, pc, #4	@ (adr r0, 8002fa0 <_scanf_float+0xe8>)
 8002f9c:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002fa0:	08003055 	.word	0x08003055
 8002fa4:	08002f1f 	.word	0x08002f1f
 8002fa8:	08003055 	.word	0x08003055
 8002fac:	080030eb 	.word	0x080030eb
 8002fb0:	08002f1f 	.word	0x08002f1f
 8002fb4:	08002ffd 	.word	0x08002ffd
 8002fb8:	0800303b 	.word	0x0800303b
 8002fbc:	0800303b 	.word	0x0800303b
 8002fc0:	0800303b 	.word	0x0800303b
 8002fc4:	0800303b 	.word	0x0800303b
 8002fc8:	0800303b 	.word	0x0800303b
 8002fcc:	0800303b 	.word	0x0800303b
 8002fd0:	0800303b 	.word	0x0800303b
 8002fd4:	0800303b 	.word	0x0800303b
 8002fd8:	0800303b 	.word	0x0800303b
 8002fdc:	2b6e      	cmp	r3, #110	@ 0x6e
 8002fde:	d809      	bhi.n	8002ff4 <_scanf_float+0x13c>
 8002fe0:	2b60      	cmp	r3, #96	@ 0x60
 8002fe2:	d8b1      	bhi.n	8002f48 <_scanf_float+0x90>
 8002fe4:	2b54      	cmp	r3, #84	@ 0x54
 8002fe6:	d07b      	beq.n	80030e0 <_scanf_float+0x228>
 8002fe8:	2b59      	cmp	r3, #89	@ 0x59
 8002fea:	d198      	bne.n	8002f1e <_scanf_float+0x66>
 8002fec:	2d07      	cmp	r5, #7
 8002fee:	d196      	bne.n	8002f1e <_scanf_float+0x66>
 8002ff0:	2508      	movs	r5, #8
 8002ff2:	e02c      	b.n	800304e <_scanf_float+0x196>
 8002ff4:	2b74      	cmp	r3, #116	@ 0x74
 8002ff6:	d073      	beq.n	80030e0 <_scanf_float+0x228>
 8002ff8:	2b79      	cmp	r3, #121	@ 0x79
 8002ffa:	e7f6      	b.n	8002fea <_scanf_float+0x132>
 8002ffc:	6821      	ldr	r1, [r4, #0]
 8002ffe:	05c8      	lsls	r0, r1, #23
 8003000:	d51b      	bpl.n	800303a <_scanf_float+0x182>
 8003002:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8003006:	6021      	str	r1, [r4, #0]
 8003008:	f109 0901 	add.w	r9, r9, #1
 800300c:	f1bb 0f00 	cmp.w	fp, #0
 8003010:	d003      	beq.n	800301a <_scanf_float+0x162>
 8003012:	3201      	adds	r2, #1
 8003014:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
 8003018:	60a2      	str	r2, [r4, #8]
 800301a:	68a3      	ldr	r3, [r4, #8]
 800301c:	3b01      	subs	r3, #1
 800301e:	60a3      	str	r3, [r4, #8]
 8003020:	6923      	ldr	r3, [r4, #16]
 8003022:	3301      	adds	r3, #1
 8003024:	6123      	str	r3, [r4, #16]
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	3b01      	subs	r3, #1
 800302a:	2b00      	cmp	r3, #0
 800302c:	607b      	str	r3, [r7, #4]
 800302e:	f340 8087 	ble.w	8003140 <_scanf_float+0x288>
 8003032:	683b      	ldr	r3, [r7, #0]
 8003034:	3301      	adds	r3, #1
 8003036:	603b      	str	r3, [r7, #0]
 8003038:	e764      	b.n	8002f04 <_scanf_float+0x4c>
 800303a:	eb1a 0105 	adds.w	r1, sl, r5
 800303e:	f47f af6e 	bne.w	8002f1e <_scanf_float+0x66>
 8003042:	460d      	mov	r5, r1
 8003044:	468a      	mov	sl, r1
 8003046:	6822      	ldr	r2, [r4, #0]
 8003048:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 800304c:	6022      	str	r2, [r4, #0]
 800304e:	f806 3b01 	strb.w	r3, [r6], #1
 8003052:	e7e2      	b.n	800301a <_scanf_float+0x162>
 8003054:	6822      	ldr	r2, [r4, #0]
 8003056:	0610      	lsls	r0, r2, #24
 8003058:	f57f af61 	bpl.w	8002f1e <_scanf_float+0x66>
 800305c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003060:	6022      	str	r2, [r4, #0]
 8003062:	e7f4      	b.n	800304e <_scanf_float+0x196>
 8003064:	f1ba 0f00 	cmp.w	sl, #0
 8003068:	d10e      	bne.n	8003088 <_scanf_float+0x1d0>
 800306a:	f1b9 0f00 	cmp.w	r9, #0
 800306e:	d10e      	bne.n	800308e <_scanf_float+0x1d6>
 8003070:	6822      	ldr	r2, [r4, #0]
 8003072:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8003076:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800307a:	d108      	bne.n	800308e <_scanf_float+0x1d6>
 800307c:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8003080:	f04f 0a01 	mov.w	sl, #1
 8003084:	6022      	str	r2, [r4, #0]
 8003086:	e7e2      	b.n	800304e <_scanf_float+0x196>
 8003088:	f1ba 0f02 	cmp.w	sl, #2
 800308c:	d055      	beq.n	800313a <_scanf_float+0x282>
 800308e:	2d01      	cmp	r5, #1
 8003090:	d002      	beq.n	8003098 <_scanf_float+0x1e0>
 8003092:	2d04      	cmp	r5, #4
 8003094:	f47f af43 	bne.w	8002f1e <_scanf_float+0x66>
 8003098:	3501      	adds	r5, #1
 800309a:	b2ed      	uxtb	r5, r5
 800309c:	e7d7      	b.n	800304e <_scanf_float+0x196>
 800309e:	f1ba 0f01 	cmp.w	sl, #1
 80030a2:	f47f af3c 	bne.w	8002f1e <_scanf_float+0x66>
 80030a6:	f04f 0a02 	mov.w	sl, #2
 80030aa:	e7d0      	b.n	800304e <_scanf_float+0x196>
 80030ac:	b97d      	cbnz	r5, 80030ce <_scanf_float+0x216>
 80030ae:	f1b9 0f00 	cmp.w	r9, #0
 80030b2:	f47f af37 	bne.w	8002f24 <_scanf_float+0x6c>
 80030b6:	6822      	ldr	r2, [r4, #0]
 80030b8:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 80030bc:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 80030c0:	f040 8103 	bne.w	80032ca <_scanf_float+0x412>
 80030c4:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80030c8:	2501      	movs	r5, #1
 80030ca:	6022      	str	r2, [r4, #0]
 80030cc:	e7bf      	b.n	800304e <_scanf_float+0x196>
 80030ce:	2d03      	cmp	r5, #3
 80030d0:	d0e2      	beq.n	8003098 <_scanf_float+0x1e0>
 80030d2:	2d05      	cmp	r5, #5
 80030d4:	e7de      	b.n	8003094 <_scanf_float+0x1dc>
 80030d6:	2d02      	cmp	r5, #2
 80030d8:	f47f af21 	bne.w	8002f1e <_scanf_float+0x66>
 80030dc:	2503      	movs	r5, #3
 80030de:	e7b6      	b.n	800304e <_scanf_float+0x196>
 80030e0:	2d06      	cmp	r5, #6
 80030e2:	f47f af1c 	bne.w	8002f1e <_scanf_float+0x66>
 80030e6:	2507      	movs	r5, #7
 80030e8:	e7b1      	b.n	800304e <_scanf_float+0x196>
 80030ea:	6822      	ldr	r2, [r4, #0]
 80030ec:	0591      	lsls	r1, r2, #22
 80030ee:	f57f af16 	bpl.w	8002f1e <_scanf_float+0x66>
 80030f2:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 80030f6:	6022      	str	r2, [r4, #0]
 80030f8:	f8cd 9008 	str.w	r9, [sp, #8]
 80030fc:	e7a7      	b.n	800304e <_scanf_float+0x196>
 80030fe:	6822      	ldr	r2, [r4, #0]
 8003100:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8003104:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8003108:	d006      	beq.n	8003118 <_scanf_float+0x260>
 800310a:	0550      	lsls	r0, r2, #21
 800310c:	f57f af07 	bpl.w	8002f1e <_scanf_float+0x66>
 8003110:	f1b9 0f00 	cmp.w	r9, #0
 8003114:	f000 80d9 	beq.w	80032ca <_scanf_float+0x412>
 8003118:	0591      	lsls	r1, r2, #22
 800311a:	bf58      	it	pl
 800311c:	9902      	ldrpl	r1, [sp, #8]
 800311e:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8003122:	bf58      	it	pl
 8003124:	eba9 0101 	subpl.w	r1, r9, r1
 8003128:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 800312c:	f04f 0900 	mov.w	r9, #0
 8003130:	bf58      	it	pl
 8003132:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8003136:	6022      	str	r2, [r4, #0]
 8003138:	e789      	b.n	800304e <_scanf_float+0x196>
 800313a:	f04f 0a03 	mov.w	sl, #3
 800313e:	e786      	b.n	800304e <_scanf_float+0x196>
 8003140:	4639      	mov	r1, r7
 8003142:	4640      	mov	r0, r8
 8003144:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8003148:	4798      	blx	r3
 800314a:	2800      	cmp	r0, #0
 800314c:	f43f aeda 	beq.w	8002f04 <_scanf_float+0x4c>
 8003150:	e6e5      	b.n	8002f1e <_scanf_float+0x66>
 8003152:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003156:	463a      	mov	r2, r7
 8003158:	4640      	mov	r0, r8
 800315a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800315e:	4798      	blx	r3
 8003160:	6923      	ldr	r3, [r4, #16]
 8003162:	3b01      	subs	r3, #1
 8003164:	6123      	str	r3, [r4, #16]
 8003166:	e6e7      	b.n	8002f38 <_scanf_float+0x80>
 8003168:	1e6b      	subs	r3, r5, #1
 800316a:	2b06      	cmp	r3, #6
 800316c:	d824      	bhi.n	80031b8 <_scanf_float+0x300>
 800316e:	2d02      	cmp	r5, #2
 8003170:	d836      	bhi.n	80031e0 <_scanf_float+0x328>
 8003172:	9b01      	ldr	r3, [sp, #4]
 8003174:	429e      	cmp	r6, r3
 8003176:	f67f aee3 	bls.w	8002f40 <_scanf_float+0x88>
 800317a:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800317e:	463a      	mov	r2, r7
 8003180:	4640      	mov	r0, r8
 8003182:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003186:	4798      	blx	r3
 8003188:	6923      	ldr	r3, [r4, #16]
 800318a:	3b01      	subs	r3, #1
 800318c:	6123      	str	r3, [r4, #16]
 800318e:	e7f0      	b.n	8003172 <_scanf_float+0x2ba>
 8003190:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003194:	463a      	mov	r2, r7
 8003196:	4640      	mov	r0, r8
 8003198:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 800319c:	4798      	blx	r3
 800319e:	6923      	ldr	r3, [r4, #16]
 80031a0:	3b01      	subs	r3, #1
 80031a2:	6123      	str	r3, [r4, #16]
 80031a4:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 80031a8:	fa5f fa8a 	uxtb.w	sl, sl
 80031ac:	f1ba 0f02 	cmp.w	sl, #2
 80031b0:	d1ee      	bne.n	8003190 <_scanf_float+0x2d8>
 80031b2:	3d03      	subs	r5, #3
 80031b4:	b2ed      	uxtb	r5, r5
 80031b6:	1b76      	subs	r6, r6, r5
 80031b8:	6823      	ldr	r3, [r4, #0]
 80031ba:	05da      	lsls	r2, r3, #23
 80031bc:	d530      	bpl.n	8003220 <_scanf_float+0x368>
 80031be:	055b      	lsls	r3, r3, #21
 80031c0:	d511      	bpl.n	80031e6 <_scanf_float+0x32e>
 80031c2:	9b01      	ldr	r3, [sp, #4]
 80031c4:	429e      	cmp	r6, r3
 80031c6:	f67f aebb 	bls.w	8002f40 <_scanf_float+0x88>
 80031ca:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80031ce:	463a      	mov	r2, r7
 80031d0:	4640      	mov	r0, r8
 80031d2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80031d6:	4798      	blx	r3
 80031d8:	6923      	ldr	r3, [r4, #16]
 80031da:	3b01      	subs	r3, #1
 80031dc:	6123      	str	r3, [r4, #16]
 80031de:	e7f0      	b.n	80031c2 <_scanf_float+0x30a>
 80031e0:	46aa      	mov	sl, r5
 80031e2:	46b3      	mov	fp, r6
 80031e4:	e7de      	b.n	80031a4 <_scanf_float+0x2ec>
 80031e6:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 80031ea:	6923      	ldr	r3, [r4, #16]
 80031ec:	2965      	cmp	r1, #101	@ 0x65
 80031ee:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 80031f2:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
 80031f6:	6123      	str	r3, [r4, #16]
 80031f8:	d00c      	beq.n	8003214 <_scanf_float+0x35c>
 80031fa:	2945      	cmp	r1, #69	@ 0x45
 80031fc:	d00a      	beq.n	8003214 <_scanf_float+0x35c>
 80031fe:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003202:	463a      	mov	r2, r7
 8003204:	4640      	mov	r0, r8
 8003206:	4798      	blx	r3
 8003208:	6923      	ldr	r3, [r4, #16]
 800320a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800320e:	3b01      	subs	r3, #1
 8003210:	1eb5      	subs	r5, r6, #2
 8003212:	6123      	str	r3, [r4, #16]
 8003214:	463a      	mov	r2, r7
 8003216:	4640      	mov	r0, r8
 8003218:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800321c:	4798      	blx	r3
 800321e:	462e      	mov	r6, r5
 8003220:	6822      	ldr	r2, [r4, #0]
 8003222:	f012 0210 	ands.w	r2, r2, #16
 8003226:	d001      	beq.n	800322c <_scanf_float+0x374>
 8003228:	2000      	movs	r0, #0
 800322a:	e68a      	b.n	8002f42 <_scanf_float+0x8a>
 800322c:	7032      	strb	r2, [r6, #0]
 800322e:	6823      	ldr	r3, [r4, #0]
 8003230:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8003234:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003238:	d11c      	bne.n	8003274 <_scanf_float+0x3bc>
 800323a:	9b02      	ldr	r3, [sp, #8]
 800323c:	454b      	cmp	r3, r9
 800323e:	eba3 0209 	sub.w	r2, r3, r9
 8003242:	d123      	bne.n	800328c <_scanf_float+0x3d4>
 8003244:	2200      	movs	r2, #0
 8003246:	4640      	mov	r0, r8
 8003248:	9901      	ldr	r1, [sp, #4]
 800324a:	f002 fbed 	bl	8005a28 <_strtod_r>
 800324e:	9b03      	ldr	r3, [sp, #12]
 8003250:	6825      	ldr	r5, [r4, #0]
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	f015 0f02 	tst.w	r5, #2
 8003258:	4606      	mov	r6, r0
 800325a:	460f      	mov	r7, r1
 800325c:	f103 0204 	add.w	r2, r3, #4
 8003260:	d01f      	beq.n	80032a2 <_scanf_float+0x3ea>
 8003262:	9903      	ldr	r1, [sp, #12]
 8003264:	600a      	str	r2, [r1, #0]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	e9c3 6700 	strd	r6, r7, [r3]
 800326c:	68e3      	ldr	r3, [r4, #12]
 800326e:	3301      	adds	r3, #1
 8003270:	60e3      	str	r3, [r4, #12]
 8003272:	e7d9      	b.n	8003228 <_scanf_float+0x370>
 8003274:	9b04      	ldr	r3, [sp, #16]
 8003276:	2b00      	cmp	r3, #0
 8003278:	d0e4      	beq.n	8003244 <_scanf_float+0x38c>
 800327a:	9905      	ldr	r1, [sp, #20]
 800327c:	230a      	movs	r3, #10
 800327e:	4640      	mov	r0, r8
 8003280:	3101      	adds	r1, #1
 8003282:	f002 fc51 	bl	8005b28 <_strtol_r>
 8003286:	9b04      	ldr	r3, [sp, #16]
 8003288:	9e05      	ldr	r6, [sp, #20]
 800328a:	1ac2      	subs	r2, r0, r3
 800328c:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8003290:	429e      	cmp	r6, r3
 8003292:	bf28      	it	cs
 8003294:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8003298:	4630      	mov	r0, r6
 800329a:	490d      	ldr	r1, [pc, #52]	@ (80032d0 <_scanf_float+0x418>)
 800329c:	f000 f8de 	bl	800345c <siprintf>
 80032a0:	e7d0      	b.n	8003244 <_scanf_float+0x38c>
 80032a2:	076d      	lsls	r5, r5, #29
 80032a4:	d4dd      	bmi.n	8003262 <_scanf_float+0x3aa>
 80032a6:	9d03      	ldr	r5, [sp, #12]
 80032a8:	602a      	str	r2, [r5, #0]
 80032aa:	681d      	ldr	r5, [r3, #0]
 80032ac:	4602      	mov	r2, r0
 80032ae:	460b      	mov	r3, r1
 80032b0:	f7fd fbac 	bl	8000a0c <__aeabi_dcmpun>
 80032b4:	b120      	cbz	r0, 80032c0 <_scanf_float+0x408>
 80032b6:	4807      	ldr	r0, [pc, #28]	@ (80032d4 <_scanf_float+0x41c>)
 80032b8:	f000 f9c2 	bl	8003640 <nanf>
 80032bc:	6028      	str	r0, [r5, #0]
 80032be:	e7d5      	b.n	800326c <_scanf_float+0x3b4>
 80032c0:	4630      	mov	r0, r6
 80032c2:	4639      	mov	r1, r7
 80032c4:	f7fd fc00 	bl	8000ac8 <__aeabi_d2f>
 80032c8:	e7f8      	b.n	80032bc <_scanf_float+0x404>
 80032ca:	f04f 0900 	mov.w	r9, #0
 80032ce:	e62d      	b.n	8002f2c <_scanf_float+0x74>
 80032d0:	08006d43 	.word	0x08006d43
 80032d4:	08006ce4 	.word	0x08006ce4

080032d8 <std>:
 80032d8:	2300      	movs	r3, #0
 80032da:	b510      	push	{r4, lr}
 80032dc:	4604      	mov	r4, r0
 80032de:	e9c0 3300 	strd	r3, r3, [r0]
 80032e2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80032e6:	6083      	str	r3, [r0, #8]
 80032e8:	8181      	strh	r1, [r0, #12]
 80032ea:	6643      	str	r3, [r0, #100]	@ 0x64
 80032ec:	81c2      	strh	r2, [r0, #14]
 80032ee:	6183      	str	r3, [r0, #24]
 80032f0:	4619      	mov	r1, r3
 80032f2:	2208      	movs	r2, #8
 80032f4:	305c      	adds	r0, #92	@ 0x5c
 80032f6:	f000 f914 	bl	8003522 <memset>
 80032fa:	4b0d      	ldr	r3, [pc, #52]	@ (8003330 <std+0x58>)
 80032fc:	6224      	str	r4, [r4, #32]
 80032fe:	6263      	str	r3, [r4, #36]	@ 0x24
 8003300:	4b0c      	ldr	r3, [pc, #48]	@ (8003334 <std+0x5c>)
 8003302:	62a3      	str	r3, [r4, #40]	@ 0x28
 8003304:	4b0c      	ldr	r3, [pc, #48]	@ (8003338 <std+0x60>)
 8003306:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8003308:	4b0c      	ldr	r3, [pc, #48]	@ (800333c <std+0x64>)
 800330a:	6323      	str	r3, [r4, #48]	@ 0x30
 800330c:	4b0c      	ldr	r3, [pc, #48]	@ (8003340 <std+0x68>)
 800330e:	429c      	cmp	r4, r3
 8003310:	d006      	beq.n	8003320 <std+0x48>
 8003312:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8003316:	4294      	cmp	r4, r2
 8003318:	d002      	beq.n	8003320 <std+0x48>
 800331a:	33d0      	adds	r3, #208	@ 0xd0
 800331c:	429c      	cmp	r4, r3
 800331e:	d105      	bne.n	800332c <std+0x54>
 8003320:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8003324:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003328:	f000 b978 	b.w	800361c <__retarget_lock_init_recursive>
 800332c:	bd10      	pop	{r4, pc}
 800332e:	bf00      	nop
 8003330:	0800349d 	.word	0x0800349d
 8003334:	080034bf 	.word	0x080034bf
 8003338:	080034f7 	.word	0x080034f7
 800333c:	0800351b 	.word	0x0800351b
 8003340:	200002a4 	.word	0x200002a4

08003344 <stdio_exit_handler>:
 8003344:	4a02      	ldr	r2, [pc, #8]	@ (8003350 <stdio_exit_handler+0xc>)
 8003346:	4903      	ldr	r1, [pc, #12]	@ (8003354 <stdio_exit_handler+0x10>)
 8003348:	4803      	ldr	r0, [pc, #12]	@ (8003358 <stdio_exit_handler+0x14>)
 800334a:	f000 b869 	b.w	8003420 <_fwalk_sglue>
 800334e:	bf00      	nop
 8003350:	2000000c 	.word	0x2000000c
 8003354:	08005edd 	.word	0x08005edd
 8003358:	2000001c 	.word	0x2000001c

0800335c <cleanup_stdio>:
 800335c:	6841      	ldr	r1, [r0, #4]
 800335e:	4b0c      	ldr	r3, [pc, #48]	@ (8003390 <cleanup_stdio+0x34>)
 8003360:	b510      	push	{r4, lr}
 8003362:	4299      	cmp	r1, r3
 8003364:	4604      	mov	r4, r0
 8003366:	d001      	beq.n	800336c <cleanup_stdio+0x10>
 8003368:	f002 fdb8 	bl	8005edc <_fflush_r>
 800336c:	68a1      	ldr	r1, [r4, #8]
 800336e:	4b09      	ldr	r3, [pc, #36]	@ (8003394 <cleanup_stdio+0x38>)
 8003370:	4299      	cmp	r1, r3
 8003372:	d002      	beq.n	800337a <cleanup_stdio+0x1e>
 8003374:	4620      	mov	r0, r4
 8003376:	f002 fdb1 	bl	8005edc <_fflush_r>
 800337a:	68e1      	ldr	r1, [r4, #12]
 800337c:	4b06      	ldr	r3, [pc, #24]	@ (8003398 <cleanup_stdio+0x3c>)
 800337e:	4299      	cmp	r1, r3
 8003380:	d004      	beq.n	800338c <cleanup_stdio+0x30>
 8003382:	4620      	mov	r0, r4
 8003384:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003388:	f002 bda8 	b.w	8005edc <_fflush_r>
 800338c:	bd10      	pop	{r4, pc}
 800338e:	bf00      	nop
 8003390:	200002a4 	.word	0x200002a4
 8003394:	2000030c 	.word	0x2000030c
 8003398:	20000374 	.word	0x20000374

0800339c <global_stdio_init.part.0>:
 800339c:	b510      	push	{r4, lr}
 800339e:	4b0b      	ldr	r3, [pc, #44]	@ (80033cc <global_stdio_init.part.0+0x30>)
 80033a0:	4c0b      	ldr	r4, [pc, #44]	@ (80033d0 <global_stdio_init.part.0+0x34>)
 80033a2:	4a0c      	ldr	r2, [pc, #48]	@ (80033d4 <global_stdio_init.part.0+0x38>)
 80033a4:	4620      	mov	r0, r4
 80033a6:	601a      	str	r2, [r3, #0]
 80033a8:	2104      	movs	r1, #4
 80033aa:	2200      	movs	r2, #0
 80033ac:	f7ff ff94 	bl	80032d8 <std>
 80033b0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80033b4:	2201      	movs	r2, #1
 80033b6:	2109      	movs	r1, #9
 80033b8:	f7ff ff8e 	bl	80032d8 <std>
 80033bc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80033c0:	2202      	movs	r2, #2
 80033c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80033c6:	2112      	movs	r1, #18
 80033c8:	f7ff bf86 	b.w	80032d8 <std>
 80033cc:	200003dc 	.word	0x200003dc
 80033d0:	200002a4 	.word	0x200002a4
 80033d4:	08003345 	.word	0x08003345

080033d8 <__sfp_lock_acquire>:
 80033d8:	4801      	ldr	r0, [pc, #4]	@ (80033e0 <__sfp_lock_acquire+0x8>)
 80033da:	f000 b920 	b.w	800361e <__retarget_lock_acquire_recursive>
 80033de:	bf00      	nop
 80033e0:	200003e5 	.word	0x200003e5

080033e4 <__sfp_lock_release>:
 80033e4:	4801      	ldr	r0, [pc, #4]	@ (80033ec <__sfp_lock_release+0x8>)
 80033e6:	f000 b91b 	b.w	8003620 <__retarget_lock_release_recursive>
 80033ea:	bf00      	nop
 80033ec:	200003e5 	.word	0x200003e5

080033f0 <__sinit>:
 80033f0:	b510      	push	{r4, lr}
 80033f2:	4604      	mov	r4, r0
 80033f4:	f7ff fff0 	bl	80033d8 <__sfp_lock_acquire>
 80033f8:	6a23      	ldr	r3, [r4, #32]
 80033fa:	b11b      	cbz	r3, 8003404 <__sinit+0x14>
 80033fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003400:	f7ff bff0 	b.w	80033e4 <__sfp_lock_release>
 8003404:	4b04      	ldr	r3, [pc, #16]	@ (8003418 <__sinit+0x28>)
 8003406:	6223      	str	r3, [r4, #32]
 8003408:	4b04      	ldr	r3, [pc, #16]	@ (800341c <__sinit+0x2c>)
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	2b00      	cmp	r3, #0
 800340e:	d1f5      	bne.n	80033fc <__sinit+0xc>
 8003410:	f7ff ffc4 	bl	800339c <global_stdio_init.part.0>
 8003414:	e7f2      	b.n	80033fc <__sinit+0xc>
 8003416:	bf00      	nop
 8003418:	0800335d 	.word	0x0800335d
 800341c:	200003dc 	.word	0x200003dc

08003420 <_fwalk_sglue>:
 8003420:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003424:	4607      	mov	r7, r0
 8003426:	4688      	mov	r8, r1
 8003428:	4614      	mov	r4, r2
 800342a:	2600      	movs	r6, #0
 800342c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003430:	f1b9 0901 	subs.w	r9, r9, #1
 8003434:	d505      	bpl.n	8003442 <_fwalk_sglue+0x22>
 8003436:	6824      	ldr	r4, [r4, #0]
 8003438:	2c00      	cmp	r4, #0
 800343a:	d1f7      	bne.n	800342c <_fwalk_sglue+0xc>
 800343c:	4630      	mov	r0, r6
 800343e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003442:	89ab      	ldrh	r3, [r5, #12]
 8003444:	2b01      	cmp	r3, #1
 8003446:	d907      	bls.n	8003458 <_fwalk_sglue+0x38>
 8003448:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800344c:	3301      	adds	r3, #1
 800344e:	d003      	beq.n	8003458 <_fwalk_sglue+0x38>
 8003450:	4629      	mov	r1, r5
 8003452:	4638      	mov	r0, r7
 8003454:	47c0      	blx	r8
 8003456:	4306      	orrs	r6, r0
 8003458:	3568      	adds	r5, #104	@ 0x68
 800345a:	e7e9      	b.n	8003430 <_fwalk_sglue+0x10>

0800345c <siprintf>:
 800345c:	b40e      	push	{r1, r2, r3}
 800345e:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8003462:	b500      	push	{lr}
 8003464:	b09c      	sub	sp, #112	@ 0x70
 8003466:	ab1d      	add	r3, sp, #116	@ 0x74
 8003468:	9002      	str	r0, [sp, #8]
 800346a:	9006      	str	r0, [sp, #24]
 800346c:	9107      	str	r1, [sp, #28]
 800346e:	9104      	str	r1, [sp, #16]
 8003470:	4808      	ldr	r0, [pc, #32]	@ (8003494 <siprintf+0x38>)
 8003472:	4909      	ldr	r1, [pc, #36]	@ (8003498 <siprintf+0x3c>)
 8003474:	f853 2b04 	ldr.w	r2, [r3], #4
 8003478:	9105      	str	r1, [sp, #20]
 800347a:	6800      	ldr	r0, [r0, #0]
 800347c:	a902      	add	r1, sp, #8
 800347e:	9301      	str	r3, [sp, #4]
 8003480:	f002 fbb0 	bl	8005be4 <_svfiprintf_r>
 8003484:	2200      	movs	r2, #0
 8003486:	9b02      	ldr	r3, [sp, #8]
 8003488:	701a      	strb	r2, [r3, #0]
 800348a:	b01c      	add	sp, #112	@ 0x70
 800348c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003490:	b003      	add	sp, #12
 8003492:	4770      	bx	lr
 8003494:	20000018 	.word	0x20000018
 8003498:	ffff0208 	.word	0xffff0208

0800349c <__sread>:
 800349c:	b510      	push	{r4, lr}
 800349e:	460c      	mov	r4, r1
 80034a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80034a4:	f000 f86c 	bl	8003580 <_read_r>
 80034a8:	2800      	cmp	r0, #0
 80034aa:	bfab      	itete	ge
 80034ac:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80034ae:	89a3      	ldrhlt	r3, [r4, #12]
 80034b0:	181b      	addge	r3, r3, r0
 80034b2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80034b6:	bfac      	ite	ge
 80034b8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80034ba:	81a3      	strhlt	r3, [r4, #12]
 80034bc:	bd10      	pop	{r4, pc}

080034be <__swrite>:
 80034be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80034c2:	461f      	mov	r7, r3
 80034c4:	898b      	ldrh	r3, [r1, #12]
 80034c6:	4605      	mov	r5, r0
 80034c8:	05db      	lsls	r3, r3, #23
 80034ca:	460c      	mov	r4, r1
 80034cc:	4616      	mov	r6, r2
 80034ce:	d505      	bpl.n	80034dc <__swrite+0x1e>
 80034d0:	2302      	movs	r3, #2
 80034d2:	2200      	movs	r2, #0
 80034d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80034d8:	f000 f840 	bl	800355c <_lseek_r>
 80034dc:	89a3      	ldrh	r3, [r4, #12]
 80034de:	4632      	mov	r2, r6
 80034e0:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80034e4:	81a3      	strh	r3, [r4, #12]
 80034e6:	4628      	mov	r0, r5
 80034e8:	463b      	mov	r3, r7
 80034ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80034ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80034f2:	f000 b857 	b.w	80035a4 <_write_r>

080034f6 <__sseek>:
 80034f6:	b510      	push	{r4, lr}
 80034f8:	460c      	mov	r4, r1
 80034fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80034fe:	f000 f82d 	bl	800355c <_lseek_r>
 8003502:	1c43      	adds	r3, r0, #1
 8003504:	89a3      	ldrh	r3, [r4, #12]
 8003506:	bf15      	itete	ne
 8003508:	6560      	strne	r0, [r4, #84]	@ 0x54
 800350a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800350e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8003512:	81a3      	strheq	r3, [r4, #12]
 8003514:	bf18      	it	ne
 8003516:	81a3      	strhne	r3, [r4, #12]
 8003518:	bd10      	pop	{r4, pc}

0800351a <__sclose>:
 800351a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800351e:	f000 b80d 	b.w	800353c <_close_r>

08003522 <memset>:
 8003522:	4603      	mov	r3, r0
 8003524:	4402      	add	r2, r0
 8003526:	4293      	cmp	r3, r2
 8003528:	d100      	bne.n	800352c <memset+0xa>
 800352a:	4770      	bx	lr
 800352c:	f803 1b01 	strb.w	r1, [r3], #1
 8003530:	e7f9      	b.n	8003526 <memset+0x4>
	...

08003534 <_localeconv_r>:
 8003534:	4800      	ldr	r0, [pc, #0]	@ (8003538 <_localeconv_r+0x4>)
 8003536:	4770      	bx	lr
 8003538:	20000158 	.word	0x20000158

0800353c <_close_r>:
 800353c:	b538      	push	{r3, r4, r5, lr}
 800353e:	2300      	movs	r3, #0
 8003540:	4d05      	ldr	r5, [pc, #20]	@ (8003558 <_close_r+0x1c>)
 8003542:	4604      	mov	r4, r0
 8003544:	4608      	mov	r0, r1
 8003546:	602b      	str	r3, [r5, #0]
 8003548:	f7fd ff84 	bl	8001454 <_close>
 800354c:	1c43      	adds	r3, r0, #1
 800354e:	d102      	bne.n	8003556 <_close_r+0x1a>
 8003550:	682b      	ldr	r3, [r5, #0]
 8003552:	b103      	cbz	r3, 8003556 <_close_r+0x1a>
 8003554:	6023      	str	r3, [r4, #0]
 8003556:	bd38      	pop	{r3, r4, r5, pc}
 8003558:	200003e0 	.word	0x200003e0

0800355c <_lseek_r>:
 800355c:	b538      	push	{r3, r4, r5, lr}
 800355e:	4604      	mov	r4, r0
 8003560:	4608      	mov	r0, r1
 8003562:	4611      	mov	r1, r2
 8003564:	2200      	movs	r2, #0
 8003566:	4d05      	ldr	r5, [pc, #20]	@ (800357c <_lseek_r+0x20>)
 8003568:	602a      	str	r2, [r5, #0]
 800356a:	461a      	mov	r2, r3
 800356c:	f7fd ff7c 	bl	8001468 <_lseek>
 8003570:	1c43      	adds	r3, r0, #1
 8003572:	d102      	bne.n	800357a <_lseek_r+0x1e>
 8003574:	682b      	ldr	r3, [r5, #0]
 8003576:	b103      	cbz	r3, 800357a <_lseek_r+0x1e>
 8003578:	6023      	str	r3, [r4, #0]
 800357a:	bd38      	pop	{r3, r4, r5, pc}
 800357c:	200003e0 	.word	0x200003e0

08003580 <_read_r>:
 8003580:	b538      	push	{r3, r4, r5, lr}
 8003582:	4604      	mov	r4, r0
 8003584:	4608      	mov	r0, r1
 8003586:	4611      	mov	r1, r2
 8003588:	2200      	movs	r2, #0
 800358a:	4d05      	ldr	r5, [pc, #20]	@ (80035a0 <_read_r+0x20>)
 800358c:	602a      	str	r2, [r5, #0]
 800358e:	461a      	mov	r2, r3
 8003590:	f7fd ff44 	bl	800141c <_read>
 8003594:	1c43      	adds	r3, r0, #1
 8003596:	d102      	bne.n	800359e <_read_r+0x1e>
 8003598:	682b      	ldr	r3, [r5, #0]
 800359a:	b103      	cbz	r3, 800359e <_read_r+0x1e>
 800359c:	6023      	str	r3, [r4, #0]
 800359e:	bd38      	pop	{r3, r4, r5, pc}
 80035a0:	200003e0 	.word	0x200003e0

080035a4 <_write_r>:
 80035a4:	b538      	push	{r3, r4, r5, lr}
 80035a6:	4604      	mov	r4, r0
 80035a8:	4608      	mov	r0, r1
 80035aa:	4611      	mov	r1, r2
 80035ac:	2200      	movs	r2, #0
 80035ae:	4d05      	ldr	r5, [pc, #20]	@ (80035c4 <_write_r+0x20>)
 80035b0:	602a      	str	r2, [r5, #0]
 80035b2:	461a      	mov	r2, r3
 80035b4:	f7fd ff40 	bl	8001438 <_write>
 80035b8:	1c43      	adds	r3, r0, #1
 80035ba:	d102      	bne.n	80035c2 <_write_r+0x1e>
 80035bc:	682b      	ldr	r3, [r5, #0]
 80035be:	b103      	cbz	r3, 80035c2 <_write_r+0x1e>
 80035c0:	6023      	str	r3, [r4, #0]
 80035c2:	bd38      	pop	{r3, r4, r5, pc}
 80035c4:	200003e0 	.word	0x200003e0

080035c8 <__errno>:
 80035c8:	4b01      	ldr	r3, [pc, #4]	@ (80035d0 <__errno+0x8>)
 80035ca:	6818      	ldr	r0, [r3, #0]
 80035cc:	4770      	bx	lr
 80035ce:	bf00      	nop
 80035d0:	20000018 	.word	0x20000018

080035d4 <__libc_init_array>:
 80035d4:	b570      	push	{r4, r5, r6, lr}
 80035d6:	2600      	movs	r6, #0
 80035d8:	4d0c      	ldr	r5, [pc, #48]	@ (800360c <__libc_init_array+0x38>)
 80035da:	4c0d      	ldr	r4, [pc, #52]	@ (8003610 <__libc_init_array+0x3c>)
 80035dc:	1b64      	subs	r4, r4, r5
 80035de:	10a4      	asrs	r4, r4, #2
 80035e0:	42a6      	cmp	r6, r4
 80035e2:	d109      	bne.n	80035f8 <__libc_init_array+0x24>
 80035e4:	f003 fb66 	bl	8006cb4 <_init>
 80035e8:	2600      	movs	r6, #0
 80035ea:	4d0a      	ldr	r5, [pc, #40]	@ (8003614 <__libc_init_array+0x40>)
 80035ec:	4c0a      	ldr	r4, [pc, #40]	@ (8003618 <__libc_init_array+0x44>)
 80035ee:	1b64      	subs	r4, r4, r5
 80035f0:	10a4      	asrs	r4, r4, #2
 80035f2:	42a6      	cmp	r6, r4
 80035f4:	d105      	bne.n	8003602 <__libc_init_array+0x2e>
 80035f6:	bd70      	pop	{r4, r5, r6, pc}
 80035f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80035fc:	4798      	blx	r3
 80035fe:	3601      	adds	r6, #1
 8003600:	e7ee      	b.n	80035e0 <__libc_init_array+0xc>
 8003602:	f855 3b04 	ldr.w	r3, [r5], #4
 8003606:	4798      	blx	r3
 8003608:	3601      	adds	r6, #1
 800360a:	e7f2      	b.n	80035f2 <__libc_init_array+0x1e>
 800360c:	08007148 	.word	0x08007148
 8003610:	08007148 	.word	0x08007148
 8003614:	08007148 	.word	0x08007148
 8003618:	0800714c 	.word	0x0800714c

0800361c <__retarget_lock_init_recursive>:
 800361c:	4770      	bx	lr

0800361e <__retarget_lock_acquire_recursive>:
 800361e:	4770      	bx	lr

08003620 <__retarget_lock_release_recursive>:
 8003620:	4770      	bx	lr

08003622 <memchr>:
 8003622:	4603      	mov	r3, r0
 8003624:	b510      	push	{r4, lr}
 8003626:	b2c9      	uxtb	r1, r1
 8003628:	4402      	add	r2, r0
 800362a:	4293      	cmp	r3, r2
 800362c:	4618      	mov	r0, r3
 800362e:	d101      	bne.n	8003634 <memchr+0x12>
 8003630:	2000      	movs	r0, #0
 8003632:	e003      	b.n	800363c <memchr+0x1a>
 8003634:	7804      	ldrb	r4, [r0, #0]
 8003636:	3301      	adds	r3, #1
 8003638:	428c      	cmp	r4, r1
 800363a:	d1f6      	bne.n	800362a <memchr+0x8>
 800363c:	bd10      	pop	{r4, pc}
	...

08003640 <nanf>:
 8003640:	4800      	ldr	r0, [pc, #0]	@ (8003644 <nanf+0x4>)
 8003642:	4770      	bx	lr
 8003644:	7fc00000 	.word	0x7fc00000

08003648 <quorem>:
 8003648:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800364c:	6903      	ldr	r3, [r0, #16]
 800364e:	690c      	ldr	r4, [r1, #16]
 8003650:	4607      	mov	r7, r0
 8003652:	42a3      	cmp	r3, r4
 8003654:	db7e      	blt.n	8003754 <quorem+0x10c>
 8003656:	3c01      	subs	r4, #1
 8003658:	00a3      	lsls	r3, r4, #2
 800365a:	f100 0514 	add.w	r5, r0, #20
 800365e:	f101 0814 	add.w	r8, r1, #20
 8003662:	9300      	str	r3, [sp, #0]
 8003664:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003668:	9301      	str	r3, [sp, #4]
 800366a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800366e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003672:	3301      	adds	r3, #1
 8003674:	429a      	cmp	r2, r3
 8003676:	fbb2 f6f3 	udiv	r6, r2, r3
 800367a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800367e:	d32e      	bcc.n	80036de <quorem+0x96>
 8003680:	f04f 0a00 	mov.w	sl, #0
 8003684:	46c4      	mov	ip, r8
 8003686:	46ae      	mov	lr, r5
 8003688:	46d3      	mov	fp, sl
 800368a:	f85c 3b04 	ldr.w	r3, [ip], #4
 800368e:	b298      	uxth	r0, r3
 8003690:	fb06 a000 	mla	r0, r6, r0, sl
 8003694:	0c1b      	lsrs	r3, r3, #16
 8003696:	0c02      	lsrs	r2, r0, #16
 8003698:	fb06 2303 	mla	r3, r6, r3, r2
 800369c:	f8de 2000 	ldr.w	r2, [lr]
 80036a0:	b280      	uxth	r0, r0
 80036a2:	b292      	uxth	r2, r2
 80036a4:	1a12      	subs	r2, r2, r0
 80036a6:	445a      	add	r2, fp
 80036a8:	f8de 0000 	ldr.w	r0, [lr]
 80036ac:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80036b0:	b29b      	uxth	r3, r3
 80036b2:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80036b6:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80036ba:	b292      	uxth	r2, r2
 80036bc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80036c0:	45e1      	cmp	r9, ip
 80036c2:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80036c6:	f84e 2b04 	str.w	r2, [lr], #4
 80036ca:	d2de      	bcs.n	800368a <quorem+0x42>
 80036cc:	9b00      	ldr	r3, [sp, #0]
 80036ce:	58eb      	ldr	r3, [r5, r3]
 80036d0:	b92b      	cbnz	r3, 80036de <quorem+0x96>
 80036d2:	9b01      	ldr	r3, [sp, #4]
 80036d4:	3b04      	subs	r3, #4
 80036d6:	429d      	cmp	r5, r3
 80036d8:	461a      	mov	r2, r3
 80036da:	d32f      	bcc.n	800373c <quorem+0xf4>
 80036dc:	613c      	str	r4, [r7, #16]
 80036de:	4638      	mov	r0, r7
 80036e0:	f001 f9c2 	bl	8004a68 <__mcmp>
 80036e4:	2800      	cmp	r0, #0
 80036e6:	db25      	blt.n	8003734 <quorem+0xec>
 80036e8:	4629      	mov	r1, r5
 80036ea:	2000      	movs	r0, #0
 80036ec:	f858 2b04 	ldr.w	r2, [r8], #4
 80036f0:	f8d1 c000 	ldr.w	ip, [r1]
 80036f4:	fa1f fe82 	uxth.w	lr, r2
 80036f8:	fa1f f38c 	uxth.w	r3, ip
 80036fc:	eba3 030e 	sub.w	r3, r3, lr
 8003700:	4403      	add	r3, r0
 8003702:	0c12      	lsrs	r2, r2, #16
 8003704:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8003708:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800370c:	b29b      	uxth	r3, r3
 800370e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003712:	45c1      	cmp	r9, r8
 8003714:	ea4f 4022 	mov.w	r0, r2, asr #16
 8003718:	f841 3b04 	str.w	r3, [r1], #4
 800371c:	d2e6      	bcs.n	80036ec <quorem+0xa4>
 800371e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003722:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003726:	b922      	cbnz	r2, 8003732 <quorem+0xea>
 8003728:	3b04      	subs	r3, #4
 800372a:	429d      	cmp	r5, r3
 800372c:	461a      	mov	r2, r3
 800372e:	d30b      	bcc.n	8003748 <quorem+0x100>
 8003730:	613c      	str	r4, [r7, #16]
 8003732:	3601      	adds	r6, #1
 8003734:	4630      	mov	r0, r6
 8003736:	b003      	add	sp, #12
 8003738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800373c:	6812      	ldr	r2, [r2, #0]
 800373e:	3b04      	subs	r3, #4
 8003740:	2a00      	cmp	r2, #0
 8003742:	d1cb      	bne.n	80036dc <quorem+0x94>
 8003744:	3c01      	subs	r4, #1
 8003746:	e7c6      	b.n	80036d6 <quorem+0x8e>
 8003748:	6812      	ldr	r2, [r2, #0]
 800374a:	3b04      	subs	r3, #4
 800374c:	2a00      	cmp	r2, #0
 800374e:	d1ef      	bne.n	8003730 <quorem+0xe8>
 8003750:	3c01      	subs	r4, #1
 8003752:	e7ea      	b.n	800372a <quorem+0xe2>
 8003754:	2000      	movs	r0, #0
 8003756:	e7ee      	b.n	8003736 <quorem+0xee>

08003758 <_dtoa_r>:
 8003758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800375c:	4614      	mov	r4, r2
 800375e:	461d      	mov	r5, r3
 8003760:	69c7      	ldr	r7, [r0, #28]
 8003762:	b097      	sub	sp, #92	@ 0x5c
 8003764:	4683      	mov	fp, r0
 8003766:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800376a:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 800376c:	b97f      	cbnz	r7, 800378e <_dtoa_r+0x36>
 800376e:	2010      	movs	r0, #16
 8003770:	f000 fe02 	bl	8004378 <malloc>
 8003774:	4602      	mov	r2, r0
 8003776:	f8cb 001c 	str.w	r0, [fp, #28]
 800377a:	b920      	cbnz	r0, 8003786 <_dtoa_r+0x2e>
 800377c:	21ef      	movs	r1, #239	@ 0xef
 800377e:	4ba8      	ldr	r3, [pc, #672]	@ (8003a20 <_dtoa_r+0x2c8>)
 8003780:	48a8      	ldr	r0, [pc, #672]	@ (8003a24 <_dtoa_r+0x2cc>)
 8003782:	f002 fc23 	bl	8005fcc <__assert_func>
 8003786:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800378a:	6007      	str	r7, [r0, #0]
 800378c:	60c7      	str	r7, [r0, #12]
 800378e:	f8db 301c 	ldr.w	r3, [fp, #28]
 8003792:	6819      	ldr	r1, [r3, #0]
 8003794:	b159      	cbz	r1, 80037ae <_dtoa_r+0x56>
 8003796:	685a      	ldr	r2, [r3, #4]
 8003798:	2301      	movs	r3, #1
 800379a:	4093      	lsls	r3, r2
 800379c:	604a      	str	r2, [r1, #4]
 800379e:	608b      	str	r3, [r1, #8]
 80037a0:	4658      	mov	r0, fp
 80037a2:	f000 fedf 	bl	8004564 <_Bfree>
 80037a6:	2200      	movs	r2, #0
 80037a8:	f8db 301c 	ldr.w	r3, [fp, #28]
 80037ac:	601a      	str	r2, [r3, #0]
 80037ae:	1e2b      	subs	r3, r5, #0
 80037b0:	bfaf      	iteee	ge
 80037b2:	2300      	movge	r3, #0
 80037b4:	2201      	movlt	r2, #1
 80037b6:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80037ba:	9303      	strlt	r3, [sp, #12]
 80037bc:	bfa8      	it	ge
 80037be:	6033      	strge	r3, [r6, #0]
 80037c0:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80037c4:	4b98      	ldr	r3, [pc, #608]	@ (8003a28 <_dtoa_r+0x2d0>)
 80037c6:	bfb8      	it	lt
 80037c8:	6032      	strlt	r2, [r6, #0]
 80037ca:	ea33 0308 	bics.w	r3, r3, r8
 80037ce:	d112      	bne.n	80037f6 <_dtoa_r+0x9e>
 80037d0:	f242 730f 	movw	r3, #9999	@ 0x270f
 80037d4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80037d6:	6013      	str	r3, [r2, #0]
 80037d8:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80037dc:	4323      	orrs	r3, r4
 80037de:	f000 8550 	beq.w	8004282 <_dtoa_r+0xb2a>
 80037e2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80037e4:	f8df a244 	ldr.w	sl, [pc, #580]	@ 8003a2c <_dtoa_r+0x2d4>
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	f000 8552 	beq.w	8004292 <_dtoa_r+0xb3a>
 80037ee:	f10a 0303 	add.w	r3, sl, #3
 80037f2:	f000 bd4c 	b.w	800428e <_dtoa_r+0xb36>
 80037f6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80037fa:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80037fe:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003802:	2200      	movs	r2, #0
 8003804:	2300      	movs	r3, #0
 8003806:	f7fd f8cf 	bl	80009a8 <__aeabi_dcmpeq>
 800380a:	4607      	mov	r7, r0
 800380c:	b158      	cbz	r0, 8003826 <_dtoa_r+0xce>
 800380e:	2301      	movs	r3, #1
 8003810:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8003812:	6013      	str	r3, [r2, #0]
 8003814:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003816:	b113      	cbz	r3, 800381e <_dtoa_r+0xc6>
 8003818:	4b85      	ldr	r3, [pc, #532]	@ (8003a30 <_dtoa_r+0x2d8>)
 800381a:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 800381c:	6013      	str	r3, [r2, #0]
 800381e:	f8df a214 	ldr.w	sl, [pc, #532]	@ 8003a34 <_dtoa_r+0x2dc>
 8003822:	f000 bd36 	b.w	8004292 <_dtoa_r+0xb3a>
 8003826:	ab14      	add	r3, sp, #80	@ 0x50
 8003828:	9301      	str	r3, [sp, #4]
 800382a:	ab15      	add	r3, sp, #84	@ 0x54
 800382c:	9300      	str	r3, [sp, #0]
 800382e:	4658      	mov	r0, fp
 8003830:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8003834:	f001 fa30 	bl	8004c98 <__d2b>
 8003838:	f3c8 560a 	ubfx	r6, r8, #20, #11
 800383c:	4681      	mov	r9, r0
 800383e:	2e00      	cmp	r6, #0
 8003840:	d077      	beq.n	8003932 <_dtoa_r+0x1da>
 8003842:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003846:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003848:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800384c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003850:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8003854:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8003858:	9712      	str	r7, [sp, #72]	@ 0x48
 800385a:	4619      	mov	r1, r3
 800385c:	2200      	movs	r2, #0
 800385e:	4b76      	ldr	r3, [pc, #472]	@ (8003a38 <_dtoa_r+0x2e0>)
 8003860:	f7fc fc82 	bl	8000168 <__aeabi_dsub>
 8003864:	a368      	add	r3, pc, #416	@ (adr r3, 8003a08 <_dtoa_r+0x2b0>)
 8003866:	e9d3 2300 	ldrd	r2, r3, [r3]
 800386a:	f7fc fe35 	bl	80004d8 <__aeabi_dmul>
 800386e:	a368      	add	r3, pc, #416	@ (adr r3, 8003a10 <_dtoa_r+0x2b8>)
 8003870:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003874:	f7fc fc7a 	bl	800016c <__adddf3>
 8003878:	4604      	mov	r4, r0
 800387a:	4630      	mov	r0, r6
 800387c:	460d      	mov	r5, r1
 800387e:	f7fc fdc1 	bl	8000404 <__aeabi_i2d>
 8003882:	a365      	add	r3, pc, #404	@ (adr r3, 8003a18 <_dtoa_r+0x2c0>)
 8003884:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003888:	f7fc fe26 	bl	80004d8 <__aeabi_dmul>
 800388c:	4602      	mov	r2, r0
 800388e:	460b      	mov	r3, r1
 8003890:	4620      	mov	r0, r4
 8003892:	4629      	mov	r1, r5
 8003894:	f7fc fc6a 	bl	800016c <__adddf3>
 8003898:	4604      	mov	r4, r0
 800389a:	460d      	mov	r5, r1
 800389c:	f7fd f8cc 	bl	8000a38 <__aeabi_d2iz>
 80038a0:	2200      	movs	r2, #0
 80038a2:	4607      	mov	r7, r0
 80038a4:	2300      	movs	r3, #0
 80038a6:	4620      	mov	r0, r4
 80038a8:	4629      	mov	r1, r5
 80038aa:	f7fd f887 	bl	80009bc <__aeabi_dcmplt>
 80038ae:	b140      	cbz	r0, 80038c2 <_dtoa_r+0x16a>
 80038b0:	4638      	mov	r0, r7
 80038b2:	f7fc fda7 	bl	8000404 <__aeabi_i2d>
 80038b6:	4622      	mov	r2, r4
 80038b8:	462b      	mov	r3, r5
 80038ba:	f7fd f875 	bl	80009a8 <__aeabi_dcmpeq>
 80038be:	b900      	cbnz	r0, 80038c2 <_dtoa_r+0x16a>
 80038c0:	3f01      	subs	r7, #1
 80038c2:	2f16      	cmp	r7, #22
 80038c4:	d853      	bhi.n	800396e <_dtoa_r+0x216>
 80038c6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80038ca:	4b5c      	ldr	r3, [pc, #368]	@ (8003a3c <_dtoa_r+0x2e4>)
 80038cc:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80038d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038d4:	f7fd f872 	bl	80009bc <__aeabi_dcmplt>
 80038d8:	2800      	cmp	r0, #0
 80038da:	d04a      	beq.n	8003972 <_dtoa_r+0x21a>
 80038dc:	2300      	movs	r3, #0
 80038de:	3f01      	subs	r7, #1
 80038e0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80038e2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80038e4:	1b9b      	subs	r3, r3, r6
 80038e6:	1e5a      	subs	r2, r3, #1
 80038e8:	bf46      	itte	mi
 80038ea:	f1c3 0801 	rsbmi	r8, r3, #1
 80038ee:	2300      	movmi	r3, #0
 80038f0:	f04f 0800 	movpl.w	r8, #0
 80038f4:	9209      	str	r2, [sp, #36]	@ 0x24
 80038f6:	bf48      	it	mi
 80038f8:	9309      	strmi	r3, [sp, #36]	@ 0x24
 80038fa:	2f00      	cmp	r7, #0
 80038fc:	db3b      	blt.n	8003976 <_dtoa_r+0x21e>
 80038fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003900:	970e      	str	r7, [sp, #56]	@ 0x38
 8003902:	443b      	add	r3, r7
 8003904:	9309      	str	r3, [sp, #36]	@ 0x24
 8003906:	2300      	movs	r3, #0
 8003908:	930a      	str	r3, [sp, #40]	@ 0x28
 800390a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800390c:	2b09      	cmp	r3, #9
 800390e:	d866      	bhi.n	80039de <_dtoa_r+0x286>
 8003910:	2b05      	cmp	r3, #5
 8003912:	bfc4      	itt	gt
 8003914:	3b04      	subgt	r3, #4
 8003916:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8003918:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800391a:	bfc8      	it	gt
 800391c:	2400      	movgt	r4, #0
 800391e:	f1a3 0302 	sub.w	r3, r3, #2
 8003922:	bfd8      	it	le
 8003924:	2401      	movle	r4, #1
 8003926:	2b03      	cmp	r3, #3
 8003928:	d864      	bhi.n	80039f4 <_dtoa_r+0x29c>
 800392a:	e8df f003 	tbb	[pc, r3]
 800392e:	382b      	.short	0x382b
 8003930:	5636      	.short	0x5636
 8003932:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8003936:	441e      	add	r6, r3
 8003938:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800393c:	2b20      	cmp	r3, #32
 800393e:	bfc1      	itttt	gt
 8003940:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8003944:	fa08 f803 	lslgt.w	r8, r8, r3
 8003948:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800394c:	fa24 f303 	lsrgt.w	r3, r4, r3
 8003950:	bfd6      	itet	le
 8003952:	f1c3 0320 	rsble	r3, r3, #32
 8003956:	ea48 0003 	orrgt.w	r0, r8, r3
 800395a:	fa04 f003 	lslle.w	r0, r4, r3
 800395e:	f7fc fd41 	bl	80003e4 <__aeabi_ui2d>
 8003962:	2201      	movs	r2, #1
 8003964:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8003968:	3e01      	subs	r6, #1
 800396a:	9212      	str	r2, [sp, #72]	@ 0x48
 800396c:	e775      	b.n	800385a <_dtoa_r+0x102>
 800396e:	2301      	movs	r3, #1
 8003970:	e7b6      	b.n	80038e0 <_dtoa_r+0x188>
 8003972:	900f      	str	r0, [sp, #60]	@ 0x3c
 8003974:	e7b5      	b.n	80038e2 <_dtoa_r+0x18a>
 8003976:	427b      	negs	r3, r7
 8003978:	930a      	str	r3, [sp, #40]	@ 0x28
 800397a:	2300      	movs	r3, #0
 800397c:	eba8 0807 	sub.w	r8, r8, r7
 8003980:	930e      	str	r3, [sp, #56]	@ 0x38
 8003982:	e7c2      	b.n	800390a <_dtoa_r+0x1b2>
 8003984:	2300      	movs	r3, #0
 8003986:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003988:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800398a:	2b00      	cmp	r3, #0
 800398c:	dc35      	bgt.n	80039fa <_dtoa_r+0x2a2>
 800398e:	2301      	movs	r3, #1
 8003990:	461a      	mov	r2, r3
 8003992:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8003996:	9221      	str	r2, [sp, #132]	@ 0x84
 8003998:	e00b      	b.n	80039b2 <_dtoa_r+0x25a>
 800399a:	2301      	movs	r3, #1
 800399c:	e7f3      	b.n	8003986 <_dtoa_r+0x22e>
 800399e:	2300      	movs	r3, #0
 80039a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80039a2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80039a4:	18fb      	adds	r3, r7, r3
 80039a6:	9308      	str	r3, [sp, #32]
 80039a8:	3301      	adds	r3, #1
 80039aa:	2b01      	cmp	r3, #1
 80039ac:	9307      	str	r3, [sp, #28]
 80039ae:	bfb8      	it	lt
 80039b0:	2301      	movlt	r3, #1
 80039b2:	2100      	movs	r1, #0
 80039b4:	2204      	movs	r2, #4
 80039b6:	f8db 001c 	ldr.w	r0, [fp, #28]
 80039ba:	f102 0514 	add.w	r5, r2, #20
 80039be:	429d      	cmp	r5, r3
 80039c0:	d91f      	bls.n	8003a02 <_dtoa_r+0x2aa>
 80039c2:	6041      	str	r1, [r0, #4]
 80039c4:	4658      	mov	r0, fp
 80039c6:	f000 fd8d 	bl	80044e4 <_Balloc>
 80039ca:	4682      	mov	sl, r0
 80039cc:	2800      	cmp	r0, #0
 80039ce:	d139      	bne.n	8003a44 <_dtoa_r+0x2ec>
 80039d0:	4602      	mov	r2, r0
 80039d2:	f240 11af 	movw	r1, #431	@ 0x1af
 80039d6:	4b1a      	ldr	r3, [pc, #104]	@ (8003a40 <_dtoa_r+0x2e8>)
 80039d8:	e6d2      	b.n	8003780 <_dtoa_r+0x28>
 80039da:	2301      	movs	r3, #1
 80039dc:	e7e0      	b.n	80039a0 <_dtoa_r+0x248>
 80039de:	2401      	movs	r4, #1
 80039e0:	2300      	movs	r3, #0
 80039e2:	940b      	str	r4, [sp, #44]	@ 0x2c
 80039e4:	9320      	str	r3, [sp, #128]	@ 0x80
 80039e6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80039ea:	2200      	movs	r2, #0
 80039ec:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80039f0:	2312      	movs	r3, #18
 80039f2:	e7d0      	b.n	8003996 <_dtoa_r+0x23e>
 80039f4:	2301      	movs	r3, #1
 80039f6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80039f8:	e7f5      	b.n	80039e6 <_dtoa_r+0x28e>
 80039fa:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80039fc:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8003a00:	e7d7      	b.n	80039b2 <_dtoa_r+0x25a>
 8003a02:	3101      	adds	r1, #1
 8003a04:	0052      	lsls	r2, r2, #1
 8003a06:	e7d8      	b.n	80039ba <_dtoa_r+0x262>
 8003a08:	636f4361 	.word	0x636f4361
 8003a0c:	3fd287a7 	.word	0x3fd287a7
 8003a10:	8b60c8b3 	.word	0x8b60c8b3
 8003a14:	3fc68a28 	.word	0x3fc68a28
 8003a18:	509f79fb 	.word	0x509f79fb
 8003a1c:	3fd34413 	.word	0x3fd34413
 8003a20:	08006d55 	.word	0x08006d55
 8003a24:	08006d6c 	.word	0x08006d6c
 8003a28:	7ff00000 	.word	0x7ff00000
 8003a2c:	08006d51 	.word	0x08006d51
 8003a30:	08006d20 	.word	0x08006d20
 8003a34:	08006d1f 	.word	0x08006d1f
 8003a38:	3ff80000 	.word	0x3ff80000
 8003a3c:	08006e68 	.word	0x08006e68
 8003a40:	08006dc4 	.word	0x08006dc4
 8003a44:	f8db 301c 	ldr.w	r3, [fp, #28]
 8003a48:	6018      	str	r0, [r3, #0]
 8003a4a:	9b07      	ldr	r3, [sp, #28]
 8003a4c:	2b0e      	cmp	r3, #14
 8003a4e:	f200 80a4 	bhi.w	8003b9a <_dtoa_r+0x442>
 8003a52:	2c00      	cmp	r4, #0
 8003a54:	f000 80a1 	beq.w	8003b9a <_dtoa_r+0x442>
 8003a58:	2f00      	cmp	r7, #0
 8003a5a:	dd33      	ble.n	8003ac4 <_dtoa_r+0x36c>
 8003a5c:	4b86      	ldr	r3, [pc, #536]	@ (8003c78 <_dtoa_r+0x520>)
 8003a5e:	f007 020f 	and.w	r2, r7, #15
 8003a62:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003a66:	05f8      	lsls	r0, r7, #23
 8003a68:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003a6c:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8003a70:	ea4f 1427 	mov.w	r4, r7, asr #4
 8003a74:	d516      	bpl.n	8003aa4 <_dtoa_r+0x34c>
 8003a76:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003a7a:	4b80      	ldr	r3, [pc, #512]	@ (8003c7c <_dtoa_r+0x524>)
 8003a7c:	2603      	movs	r6, #3
 8003a7e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003a82:	f7fc fe53 	bl	800072c <__aeabi_ddiv>
 8003a86:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003a8a:	f004 040f 	and.w	r4, r4, #15
 8003a8e:	4d7b      	ldr	r5, [pc, #492]	@ (8003c7c <_dtoa_r+0x524>)
 8003a90:	b954      	cbnz	r4, 8003aa8 <_dtoa_r+0x350>
 8003a92:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003a96:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003a9a:	f7fc fe47 	bl	800072c <__aeabi_ddiv>
 8003a9e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003aa2:	e028      	b.n	8003af6 <_dtoa_r+0x39e>
 8003aa4:	2602      	movs	r6, #2
 8003aa6:	e7f2      	b.n	8003a8e <_dtoa_r+0x336>
 8003aa8:	07e1      	lsls	r1, r4, #31
 8003aaa:	d508      	bpl.n	8003abe <_dtoa_r+0x366>
 8003aac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003ab0:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003ab4:	f7fc fd10 	bl	80004d8 <__aeabi_dmul>
 8003ab8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003abc:	3601      	adds	r6, #1
 8003abe:	1064      	asrs	r4, r4, #1
 8003ac0:	3508      	adds	r5, #8
 8003ac2:	e7e5      	b.n	8003a90 <_dtoa_r+0x338>
 8003ac4:	f000 80d2 	beq.w	8003c6c <_dtoa_r+0x514>
 8003ac8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003acc:	427c      	negs	r4, r7
 8003ace:	4b6a      	ldr	r3, [pc, #424]	@ (8003c78 <_dtoa_r+0x520>)
 8003ad0:	f004 020f 	and.w	r2, r4, #15
 8003ad4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003ad8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003adc:	f7fc fcfc 	bl	80004d8 <__aeabi_dmul>
 8003ae0:	2602      	movs	r6, #2
 8003ae2:	2300      	movs	r3, #0
 8003ae4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003ae8:	4d64      	ldr	r5, [pc, #400]	@ (8003c7c <_dtoa_r+0x524>)
 8003aea:	1124      	asrs	r4, r4, #4
 8003aec:	2c00      	cmp	r4, #0
 8003aee:	f040 80b2 	bne.w	8003c56 <_dtoa_r+0x4fe>
 8003af2:	2b00      	cmp	r3, #0
 8003af4:	d1d3      	bne.n	8003a9e <_dtoa_r+0x346>
 8003af6:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8003afa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	f000 80b7 	beq.w	8003c70 <_dtoa_r+0x518>
 8003b02:	2200      	movs	r2, #0
 8003b04:	4620      	mov	r0, r4
 8003b06:	4629      	mov	r1, r5
 8003b08:	4b5d      	ldr	r3, [pc, #372]	@ (8003c80 <_dtoa_r+0x528>)
 8003b0a:	f7fc ff57 	bl	80009bc <__aeabi_dcmplt>
 8003b0e:	2800      	cmp	r0, #0
 8003b10:	f000 80ae 	beq.w	8003c70 <_dtoa_r+0x518>
 8003b14:	9b07      	ldr	r3, [sp, #28]
 8003b16:	2b00      	cmp	r3, #0
 8003b18:	f000 80aa 	beq.w	8003c70 <_dtoa_r+0x518>
 8003b1c:	9b08      	ldr	r3, [sp, #32]
 8003b1e:	2b00      	cmp	r3, #0
 8003b20:	dd37      	ble.n	8003b92 <_dtoa_r+0x43a>
 8003b22:	1e7b      	subs	r3, r7, #1
 8003b24:	4620      	mov	r0, r4
 8003b26:	9304      	str	r3, [sp, #16]
 8003b28:	2200      	movs	r2, #0
 8003b2a:	4629      	mov	r1, r5
 8003b2c:	4b55      	ldr	r3, [pc, #340]	@ (8003c84 <_dtoa_r+0x52c>)
 8003b2e:	f7fc fcd3 	bl	80004d8 <__aeabi_dmul>
 8003b32:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003b36:	9c08      	ldr	r4, [sp, #32]
 8003b38:	3601      	adds	r6, #1
 8003b3a:	4630      	mov	r0, r6
 8003b3c:	f7fc fc62 	bl	8000404 <__aeabi_i2d>
 8003b40:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003b44:	f7fc fcc8 	bl	80004d8 <__aeabi_dmul>
 8003b48:	2200      	movs	r2, #0
 8003b4a:	4b4f      	ldr	r3, [pc, #316]	@ (8003c88 <_dtoa_r+0x530>)
 8003b4c:	f7fc fb0e 	bl	800016c <__adddf3>
 8003b50:	4605      	mov	r5, r0
 8003b52:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8003b56:	2c00      	cmp	r4, #0
 8003b58:	f040 809a 	bne.w	8003c90 <_dtoa_r+0x538>
 8003b5c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003b60:	2200      	movs	r2, #0
 8003b62:	4b4a      	ldr	r3, [pc, #296]	@ (8003c8c <_dtoa_r+0x534>)
 8003b64:	f7fc fb00 	bl	8000168 <__aeabi_dsub>
 8003b68:	4602      	mov	r2, r0
 8003b6a:	460b      	mov	r3, r1
 8003b6c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003b70:	462a      	mov	r2, r5
 8003b72:	4633      	mov	r3, r6
 8003b74:	f7fc ff40 	bl	80009f8 <__aeabi_dcmpgt>
 8003b78:	2800      	cmp	r0, #0
 8003b7a:	f040 828e 	bne.w	800409a <_dtoa_r+0x942>
 8003b7e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003b82:	462a      	mov	r2, r5
 8003b84:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8003b88:	f7fc ff18 	bl	80009bc <__aeabi_dcmplt>
 8003b8c:	2800      	cmp	r0, #0
 8003b8e:	f040 8127 	bne.w	8003de0 <_dtoa_r+0x688>
 8003b92:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8003b96:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8003b9a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	f2c0 8163 	blt.w	8003e68 <_dtoa_r+0x710>
 8003ba2:	2f0e      	cmp	r7, #14
 8003ba4:	f300 8160 	bgt.w	8003e68 <_dtoa_r+0x710>
 8003ba8:	4b33      	ldr	r3, [pc, #204]	@ (8003c78 <_dtoa_r+0x520>)
 8003baa:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003bae:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003bb2:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8003bb6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003bb8:	2b00      	cmp	r3, #0
 8003bba:	da03      	bge.n	8003bc4 <_dtoa_r+0x46c>
 8003bbc:	9b07      	ldr	r3, [sp, #28]
 8003bbe:	2b00      	cmp	r3, #0
 8003bc0:	f340 8100 	ble.w	8003dc4 <_dtoa_r+0x66c>
 8003bc4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8003bc8:	4656      	mov	r6, sl
 8003bca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003bce:	4620      	mov	r0, r4
 8003bd0:	4629      	mov	r1, r5
 8003bd2:	f7fc fdab 	bl	800072c <__aeabi_ddiv>
 8003bd6:	f7fc ff2f 	bl	8000a38 <__aeabi_d2iz>
 8003bda:	4680      	mov	r8, r0
 8003bdc:	f7fc fc12 	bl	8000404 <__aeabi_i2d>
 8003be0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003be4:	f7fc fc78 	bl	80004d8 <__aeabi_dmul>
 8003be8:	4602      	mov	r2, r0
 8003bea:	460b      	mov	r3, r1
 8003bec:	4620      	mov	r0, r4
 8003bee:	4629      	mov	r1, r5
 8003bf0:	f7fc faba 	bl	8000168 <__aeabi_dsub>
 8003bf4:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8003bf8:	9d07      	ldr	r5, [sp, #28]
 8003bfa:	f806 4b01 	strb.w	r4, [r6], #1
 8003bfe:	eba6 040a 	sub.w	r4, r6, sl
 8003c02:	42a5      	cmp	r5, r4
 8003c04:	4602      	mov	r2, r0
 8003c06:	460b      	mov	r3, r1
 8003c08:	f040 8116 	bne.w	8003e38 <_dtoa_r+0x6e0>
 8003c0c:	f7fc faae 	bl	800016c <__adddf3>
 8003c10:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003c14:	4604      	mov	r4, r0
 8003c16:	460d      	mov	r5, r1
 8003c18:	f7fc feee 	bl	80009f8 <__aeabi_dcmpgt>
 8003c1c:	2800      	cmp	r0, #0
 8003c1e:	f040 80f8 	bne.w	8003e12 <_dtoa_r+0x6ba>
 8003c22:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003c26:	4620      	mov	r0, r4
 8003c28:	4629      	mov	r1, r5
 8003c2a:	f7fc febd 	bl	80009a8 <__aeabi_dcmpeq>
 8003c2e:	b118      	cbz	r0, 8003c38 <_dtoa_r+0x4e0>
 8003c30:	f018 0f01 	tst.w	r8, #1
 8003c34:	f040 80ed 	bne.w	8003e12 <_dtoa_r+0x6ba>
 8003c38:	4649      	mov	r1, r9
 8003c3a:	4658      	mov	r0, fp
 8003c3c:	f000 fc92 	bl	8004564 <_Bfree>
 8003c40:	2300      	movs	r3, #0
 8003c42:	7033      	strb	r3, [r6, #0]
 8003c44:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8003c46:	3701      	adds	r7, #1
 8003c48:	601f      	str	r7, [r3, #0]
 8003c4a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003c4c:	2b00      	cmp	r3, #0
 8003c4e:	f000 8320 	beq.w	8004292 <_dtoa_r+0xb3a>
 8003c52:	601e      	str	r6, [r3, #0]
 8003c54:	e31d      	b.n	8004292 <_dtoa_r+0xb3a>
 8003c56:	07e2      	lsls	r2, r4, #31
 8003c58:	d505      	bpl.n	8003c66 <_dtoa_r+0x50e>
 8003c5a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003c5e:	f7fc fc3b 	bl	80004d8 <__aeabi_dmul>
 8003c62:	2301      	movs	r3, #1
 8003c64:	3601      	adds	r6, #1
 8003c66:	1064      	asrs	r4, r4, #1
 8003c68:	3508      	adds	r5, #8
 8003c6a:	e73f      	b.n	8003aec <_dtoa_r+0x394>
 8003c6c:	2602      	movs	r6, #2
 8003c6e:	e742      	b.n	8003af6 <_dtoa_r+0x39e>
 8003c70:	9c07      	ldr	r4, [sp, #28]
 8003c72:	9704      	str	r7, [sp, #16]
 8003c74:	e761      	b.n	8003b3a <_dtoa_r+0x3e2>
 8003c76:	bf00      	nop
 8003c78:	08006e68 	.word	0x08006e68
 8003c7c:	08006e40 	.word	0x08006e40
 8003c80:	3ff00000 	.word	0x3ff00000
 8003c84:	40240000 	.word	0x40240000
 8003c88:	401c0000 	.word	0x401c0000
 8003c8c:	40140000 	.word	0x40140000
 8003c90:	4b70      	ldr	r3, [pc, #448]	@ (8003e54 <_dtoa_r+0x6fc>)
 8003c92:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003c94:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003c98:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003c9c:	4454      	add	r4, sl
 8003c9e:	2900      	cmp	r1, #0
 8003ca0:	d045      	beq.n	8003d2e <_dtoa_r+0x5d6>
 8003ca2:	2000      	movs	r0, #0
 8003ca4:	496c      	ldr	r1, [pc, #432]	@ (8003e58 <_dtoa_r+0x700>)
 8003ca6:	f7fc fd41 	bl	800072c <__aeabi_ddiv>
 8003caa:	4633      	mov	r3, r6
 8003cac:	462a      	mov	r2, r5
 8003cae:	f7fc fa5b 	bl	8000168 <__aeabi_dsub>
 8003cb2:	4656      	mov	r6, sl
 8003cb4:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003cb8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003cbc:	f7fc febc 	bl	8000a38 <__aeabi_d2iz>
 8003cc0:	4605      	mov	r5, r0
 8003cc2:	f7fc fb9f 	bl	8000404 <__aeabi_i2d>
 8003cc6:	4602      	mov	r2, r0
 8003cc8:	460b      	mov	r3, r1
 8003cca:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003cce:	f7fc fa4b 	bl	8000168 <__aeabi_dsub>
 8003cd2:	4602      	mov	r2, r0
 8003cd4:	460b      	mov	r3, r1
 8003cd6:	3530      	adds	r5, #48	@ 0x30
 8003cd8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003cdc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003ce0:	f806 5b01 	strb.w	r5, [r6], #1
 8003ce4:	f7fc fe6a 	bl	80009bc <__aeabi_dcmplt>
 8003ce8:	2800      	cmp	r0, #0
 8003cea:	d163      	bne.n	8003db4 <_dtoa_r+0x65c>
 8003cec:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003cf0:	2000      	movs	r0, #0
 8003cf2:	495a      	ldr	r1, [pc, #360]	@ (8003e5c <_dtoa_r+0x704>)
 8003cf4:	f7fc fa38 	bl	8000168 <__aeabi_dsub>
 8003cf8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003cfc:	f7fc fe5e 	bl	80009bc <__aeabi_dcmplt>
 8003d00:	2800      	cmp	r0, #0
 8003d02:	f040 8087 	bne.w	8003e14 <_dtoa_r+0x6bc>
 8003d06:	42a6      	cmp	r6, r4
 8003d08:	f43f af43 	beq.w	8003b92 <_dtoa_r+0x43a>
 8003d0c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003d10:	2200      	movs	r2, #0
 8003d12:	4b53      	ldr	r3, [pc, #332]	@ (8003e60 <_dtoa_r+0x708>)
 8003d14:	f7fc fbe0 	bl	80004d8 <__aeabi_dmul>
 8003d18:	2200      	movs	r2, #0
 8003d1a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003d1e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003d22:	4b4f      	ldr	r3, [pc, #316]	@ (8003e60 <_dtoa_r+0x708>)
 8003d24:	f7fc fbd8 	bl	80004d8 <__aeabi_dmul>
 8003d28:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003d2c:	e7c4      	b.n	8003cb8 <_dtoa_r+0x560>
 8003d2e:	4631      	mov	r1, r6
 8003d30:	4628      	mov	r0, r5
 8003d32:	f7fc fbd1 	bl	80004d8 <__aeabi_dmul>
 8003d36:	4656      	mov	r6, sl
 8003d38:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003d3c:	9413      	str	r4, [sp, #76]	@ 0x4c
 8003d3e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003d42:	f7fc fe79 	bl	8000a38 <__aeabi_d2iz>
 8003d46:	4605      	mov	r5, r0
 8003d48:	f7fc fb5c 	bl	8000404 <__aeabi_i2d>
 8003d4c:	4602      	mov	r2, r0
 8003d4e:	460b      	mov	r3, r1
 8003d50:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003d54:	f7fc fa08 	bl	8000168 <__aeabi_dsub>
 8003d58:	4602      	mov	r2, r0
 8003d5a:	460b      	mov	r3, r1
 8003d5c:	3530      	adds	r5, #48	@ 0x30
 8003d5e:	f806 5b01 	strb.w	r5, [r6], #1
 8003d62:	42a6      	cmp	r6, r4
 8003d64:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003d68:	f04f 0200 	mov.w	r2, #0
 8003d6c:	d124      	bne.n	8003db8 <_dtoa_r+0x660>
 8003d6e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003d72:	4b39      	ldr	r3, [pc, #228]	@ (8003e58 <_dtoa_r+0x700>)
 8003d74:	f7fc f9fa 	bl	800016c <__adddf3>
 8003d78:	4602      	mov	r2, r0
 8003d7a:	460b      	mov	r3, r1
 8003d7c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003d80:	f7fc fe3a 	bl	80009f8 <__aeabi_dcmpgt>
 8003d84:	2800      	cmp	r0, #0
 8003d86:	d145      	bne.n	8003e14 <_dtoa_r+0x6bc>
 8003d88:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003d8c:	2000      	movs	r0, #0
 8003d8e:	4932      	ldr	r1, [pc, #200]	@ (8003e58 <_dtoa_r+0x700>)
 8003d90:	f7fc f9ea 	bl	8000168 <__aeabi_dsub>
 8003d94:	4602      	mov	r2, r0
 8003d96:	460b      	mov	r3, r1
 8003d98:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003d9c:	f7fc fe0e 	bl	80009bc <__aeabi_dcmplt>
 8003da0:	2800      	cmp	r0, #0
 8003da2:	f43f aef6 	beq.w	8003b92 <_dtoa_r+0x43a>
 8003da6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8003da8:	1e73      	subs	r3, r6, #1
 8003daa:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003dac:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003db0:	2b30      	cmp	r3, #48	@ 0x30
 8003db2:	d0f8      	beq.n	8003da6 <_dtoa_r+0x64e>
 8003db4:	9f04      	ldr	r7, [sp, #16]
 8003db6:	e73f      	b.n	8003c38 <_dtoa_r+0x4e0>
 8003db8:	4b29      	ldr	r3, [pc, #164]	@ (8003e60 <_dtoa_r+0x708>)
 8003dba:	f7fc fb8d 	bl	80004d8 <__aeabi_dmul>
 8003dbe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003dc2:	e7bc      	b.n	8003d3e <_dtoa_r+0x5e6>
 8003dc4:	d10c      	bne.n	8003de0 <_dtoa_r+0x688>
 8003dc6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003dca:	2200      	movs	r2, #0
 8003dcc:	4b25      	ldr	r3, [pc, #148]	@ (8003e64 <_dtoa_r+0x70c>)
 8003dce:	f7fc fb83 	bl	80004d8 <__aeabi_dmul>
 8003dd2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003dd6:	f7fc fe05 	bl	80009e4 <__aeabi_dcmpge>
 8003dda:	2800      	cmp	r0, #0
 8003ddc:	f000 815b 	beq.w	8004096 <_dtoa_r+0x93e>
 8003de0:	2400      	movs	r4, #0
 8003de2:	4625      	mov	r5, r4
 8003de4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003de6:	4656      	mov	r6, sl
 8003de8:	43db      	mvns	r3, r3
 8003dea:	9304      	str	r3, [sp, #16]
 8003dec:	2700      	movs	r7, #0
 8003dee:	4621      	mov	r1, r4
 8003df0:	4658      	mov	r0, fp
 8003df2:	f000 fbb7 	bl	8004564 <_Bfree>
 8003df6:	2d00      	cmp	r5, #0
 8003df8:	d0dc      	beq.n	8003db4 <_dtoa_r+0x65c>
 8003dfa:	b12f      	cbz	r7, 8003e08 <_dtoa_r+0x6b0>
 8003dfc:	42af      	cmp	r7, r5
 8003dfe:	d003      	beq.n	8003e08 <_dtoa_r+0x6b0>
 8003e00:	4639      	mov	r1, r7
 8003e02:	4658      	mov	r0, fp
 8003e04:	f000 fbae 	bl	8004564 <_Bfree>
 8003e08:	4629      	mov	r1, r5
 8003e0a:	4658      	mov	r0, fp
 8003e0c:	f000 fbaa 	bl	8004564 <_Bfree>
 8003e10:	e7d0      	b.n	8003db4 <_dtoa_r+0x65c>
 8003e12:	9704      	str	r7, [sp, #16]
 8003e14:	4633      	mov	r3, r6
 8003e16:	461e      	mov	r6, r3
 8003e18:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003e1c:	2a39      	cmp	r2, #57	@ 0x39
 8003e1e:	d107      	bne.n	8003e30 <_dtoa_r+0x6d8>
 8003e20:	459a      	cmp	sl, r3
 8003e22:	d1f8      	bne.n	8003e16 <_dtoa_r+0x6be>
 8003e24:	9a04      	ldr	r2, [sp, #16]
 8003e26:	3201      	adds	r2, #1
 8003e28:	9204      	str	r2, [sp, #16]
 8003e2a:	2230      	movs	r2, #48	@ 0x30
 8003e2c:	f88a 2000 	strb.w	r2, [sl]
 8003e30:	781a      	ldrb	r2, [r3, #0]
 8003e32:	3201      	adds	r2, #1
 8003e34:	701a      	strb	r2, [r3, #0]
 8003e36:	e7bd      	b.n	8003db4 <_dtoa_r+0x65c>
 8003e38:	2200      	movs	r2, #0
 8003e3a:	4b09      	ldr	r3, [pc, #36]	@ (8003e60 <_dtoa_r+0x708>)
 8003e3c:	f7fc fb4c 	bl	80004d8 <__aeabi_dmul>
 8003e40:	2200      	movs	r2, #0
 8003e42:	2300      	movs	r3, #0
 8003e44:	4604      	mov	r4, r0
 8003e46:	460d      	mov	r5, r1
 8003e48:	f7fc fdae 	bl	80009a8 <__aeabi_dcmpeq>
 8003e4c:	2800      	cmp	r0, #0
 8003e4e:	f43f aebc 	beq.w	8003bca <_dtoa_r+0x472>
 8003e52:	e6f1      	b.n	8003c38 <_dtoa_r+0x4e0>
 8003e54:	08006e68 	.word	0x08006e68
 8003e58:	3fe00000 	.word	0x3fe00000
 8003e5c:	3ff00000 	.word	0x3ff00000
 8003e60:	40240000 	.word	0x40240000
 8003e64:	40140000 	.word	0x40140000
 8003e68:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8003e6a:	2a00      	cmp	r2, #0
 8003e6c:	f000 80db 	beq.w	8004026 <_dtoa_r+0x8ce>
 8003e70:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8003e72:	2a01      	cmp	r2, #1
 8003e74:	f300 80bf 	bgt.w	8003ff6 <_dtoa_r+0x89e>
 8003e78:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003e7a:	2a00      	cmp	r2, #0
 8003e7c:	f000 80b7 	beq.w	8003fee <_dtoa_r+0x896>
 8003e80:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8003e84:	4646      	mov	r6, r8
 8003e86:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003e88:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003e8a:	2101      	movs	r1, #1
 8003e8c:	441a      	add	r2, r3
 8003e8e:	4658      	mov	r0, fp
 8003e90:	4498      	add	r8, r3
 8003e92:	9209      	str	r2, [sp, #36]	@ 0x24
 8003e94:	f000 fc64 	bl	8004760 <__i2b>
 8003e98:	4605      	mov	r5, r0
 8003e9a:	b15e      	cbz	r6, 8003eb4 <_dtoa_r+0x75c>
 8003e9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003e9e:	2b00      	cmp	r3, #0
 8003ea0:	dd08      	ble.n	8003eb4 <_dtoa_r+0x75c>
 8003ea2:	42b3      	cmp	r3, r6
 8003ea4:	bfa8      	it	ge
 8003ea6:	4633      	movge	r3, r6
 8003ea8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003eaa:	eba8 0803 	sub.w	r8, r8, r3
 8003eae:	1af6      	subs	r6, r6, r3
 8003eb0:	1ad3      	subs	r3, r2, r3
 8003eb2:	9309      	str	r3, [sp, #36]	@ 0x24
 8003eb4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003eb6:	b1f3      	cbz	r3, 8003ef6 <_dtoa_r+0x79e>
 8003eb8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	f000 80b7 	beq.w	800402e <_dtoa_r+0x8d6>
 8003ec0:	b18c      	cbz	r4, 8003ee6 <_dtoa_r+0x78e>
 8003ec2:	4629      	mov	r1, r5
 8003ec4:	4622      	mov	r2, r4
 8003ec6:	4658      	mov	r0, fp
 8003ec8:	f000 fd08 	bl	80048dc <__pow5mult>
 8003ecc:	464a      	mov	r2, r9
 8003ece:	4601      	mov	r1, r0
 8003ed0:	4605      	mov	r5, r0
 8003ed2:	4658      	mov	r0, fp
 8003ed4:	f000 fc5a 	bl	800478c <__multiply>
 8003ed8:	4649      	mov	r1, r9
 8003eda:	9004      	str	r0, [sp, #16]
 8003edc:	4658      	mov	r0, fp
 8003ede:	f000 fb41 	bl	8004564 <_Bfree>
 8003ee2:	9b04      	ldr	r3, [sp, #16]
 8003ee4:	4699      	mov	r9, r3
 8003ee6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003ee8:	1b1a      	subs	r2, r3, r4
 8003eea:	d004      	beq.n	8003ef6 <_dtoa_r+0x79e>
 8003eec:	4649      	mov	r1, r9
 8003eee:	4658      	mov	r0, fp
 8003ef0:	f000 fcf4 	bl	80048dc <__pow5mult>
 8003ef4:	4681      	mov	r9, r0
 8003ef6:	2101      	movs	r1, #1
 8003ef8:	4658      	mov	r0, fp
 8003efa:	f000 fc31 	bl	8004760 <__i2b>
 8003efe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003f00:	4604      	mov	r4, r0
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	f000 81c9 	beq.w	800429a <_dtoa_r+0xb42>
 8003f08:	461a      	mov	r2, r3
 8003f0a:	4601      	mov	r1, r0
 8003f0c:	4658      	mov	r0, fp
 8003f0e:	f000 fce5 	bl	80048dc <__pow5mult>
 8003f12:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003f14:	4604      	mov	r4, r0
 8003f16:	2b01      	cmp	r3, #1
 8003f18:	f300 808f 	bgt.w	800403a <_dtoa_r+0x8e2>
 8003f1c:	9b02      	ldr	r3, [sp, #8]
 8003f1e:	2b00      	cmp	r3, #0
 8003f20:	f040 8087 	bne.w	8004032 <_dtoa_r+0x8da>
 8003f24:	9b03      	ldr	r3, [sp, #12]
 8003f26:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003f2a:	2b00      	cmp	r3, #0
 8003f2c:	f040 8083 	bne.w	8004036 <_dtoa_r+0x8de>
 8003f30:	9b03      	ldr	r3, [sp, #12]
 8003f32:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003f36:	0d1b      	lsrs	r3, r3, #20
 8003f38:	051b      	lsls	r3, r3, #20
 8003f3a:	b12b      	cbz	r3, 8003f48 <_dtoa_r+0x7f0>
 8003f3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003f3e:	f108 0801 	add.w	r8, r8, #1
 8003f42:	3301      	adds	r3, #1
 8003f44:	9309      	str	r3, [sp, #36]	@ 0x24
 8003f46:	2301      	movs	r3, #1
 8003f48:	930a      	str	r3, [sp, #40]	@ 0x28
 8003f4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003f4c:	2b00      	cmp	r3, #0
 8003f4e:	f000 81aa 	beq.w	80042a6 <_dtoa_r+0xb4e>
 8003f52:	6923      	ldr	r3, [r4, #16]
 8003f54:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003f58:	6918      	ldr	r0, [r3, #16]
 8003f5a:	f000 fbb5 	bl	80046c8 <__hi0bits>
 8003f5e:	f1c0 0020 	rsb	r0, r0, #32
 8003f62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003f64:	4418      	add	r0, r3
 8003f66:	f010 001f 	ands.w	r0, r0, #31
 8003f6a:	d071      	beq.n	8004050 <_dtoa_r+0x8f8>
 8003f6c:	f1c0 0320 	rsb	r3, r0, #32
 8003f70:	2b04      	cmp	r3, #4
 8003f72:	dd65      	ble.n	8004040 <_dtoa_r+0x8e8>
 8003f74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003f76:	f1c0 001c 	rsb	r0, r0, #28
 8003f7a:	4403      	add	r3, r0
 8003f7c:	4480      	add	r8, r0
 8003f7e:	4406      	add	r6, r0
 8003f80:	9309      	str	r3, [sp, #36]	@ 0x24
 8003f82:	f1b8 0f00 	cmp.w	r8, #0
 8003f86:	dd05      	ble.n	8003f94 <_dtoa_r+0x83c>
 8003f88:	4649      	mov	r1, r9
 8003f8a:	4642      	mov	r2, r8
 8003f8c:	4658      	mov	r0, fp
 8003f8e:	f000 fcff 	bl	8004990 <__lshift>
 8003f92:	4681      	mov	r9, r0
 8003f94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	dd05      	ble.n	8003fa6 <_dtoa_r+0x84e>
 8003f9a:	4621      	mov	r1, r4
 8003f9c:	461a      	mov	r2, r3
 8003f9e:	4658      	mov	r0, fp
 8003fa0:	f000 fcf6 	bl	8004990 <__lshift>
 8003fa4:	4604      	mov	r4, r0
 8003fa6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003fa8:	2b00      	cmp	r3, #0
 8003faa:	d053      	beq.n	8004054 <_dtoa_r+0x8fc>
 8003fac:	4621      	mov	r1, r4
 8003fae:	4648      	mov	r0, r9
 8003fb0:	f000 fd5a 	bl	8004a68 <__mcmp>
 8003fb4:	2800      	cmp	r0, #0
 8003fb6:	da4d      	bge.n	8004054 <_dtoa_r+0x8fc>
 8003fb8:	1e7b      	subs	r3, r7, #1
 8003fba:	4649      	mov	r1, r9
 8003fbc:	9304      	str	r3, [sp, #16]
 8003fbe:	220a      	movs	r2, #10
 8003fc0:	2300      	movs	r3, #0
 8003fc2:	4658      	mov	r0, fp
 8003fc4:	f000 faf0 	bl	80045a8 <__multadd>
 8003fc8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003fca:	4681      	mov	r9, r0
 8003fcc:	2b00      	cmp	r3, #0
 8003fce:	f000 816c 	beq.w	80042aa <_dtoa_r+0xb52>
 8003fd2:	2300      	movs	r3, #0
 8003fd4:	4629      	mov	r1, r5
 8003fd6:	220a      	movs	r2, #10
 8003fd8:	4658      	mov	r0, fp
 8003fda:	f000 fae5 	bl	80045a8 <__multadd>
 8003fde:	9b08      	ldr	r3, [sp, #32]
 8003fe0:	4605      	mov	r5, r0
 8003fe2:	2b00      	cmp	r3, #0
 8003fe4:	dc61      	bgt.n	80040aa <_dtoa_r+0x952>
 8003fe6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003fe8:	2b02      	cmp	r3, #2
 8003fea:	dc3b      	bgt.n	8004064 <_dtoa_r+0x90c>
 8003fec:	e05d      	b.n	80040aa <_dtoa_r+0x952>
 8003fee:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003ff0:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003ff4:	e746      	b.n	8003e84 <_dtoa_r+0x72c>
 8003ff6:	9b07      	ldr	r3, [sp, #28]
 8003ff8:	1e5c      	subs	r4, r3, #1
 8003ffa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003ffc:	42a3      	cmp	r3, r4
 8003ffe:	bfbf      	itttt	lt
 8004000:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8004002:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8004004:	1ae3      	sublt	r3, r4, r3
 8004006:	18d2      	addlt	r2, r2, r3
 8004008:	bfa8      	it	ge
 800400a:	1b1c      	subge	r4, r3, r4
 800400c:	9b07      	ldr	r3, [sp, #28]
 800400e:	bfbe      	ittt	lt
 8004010:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8004012:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8004014:	2400      	movlt	r4, #0
 8004016:	2b00      	cmp	r3, #0
 8004018:	bfb5      	itete	lt
 800401a:	eba8 0603 	sublt.w	r6, r8, r3
 800401e:	4646      	movge	r6, r8
 8004020:	2300      	movlt	r3, #0
 8004022:	9b07      	ldrge	r3, [sp, #28]
 8004024:	e730      	b.n	8003e88 <_dtoa_r+0x730>
 8004026:	4646      	mov	r6, r8
 8004028:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800402a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800402c:	e735      	b.n	8003e9a <_dtoa_r+0x742>
 800402e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004030:	e75c      	b.n	8003eec <_dtoa_r+0x794>
 8004032:	2300      	movs	r3, #0
 8004034:	e788      	b.n	8003f48 <_dtoa_r+0x7f0>
 8004036:	9b02      	ldr	r3, [sp, #8]
 8004038:	e786      	b.n	8003f48 <_dtoa_r+0x7f0>
 800403a:	2300      	movs	r3, #0
 800403c:	930a      	str	r3, [sp, #40]	@ 0x28
 800403e:	e788      	b.n	8003f52 <_dtoa_r+0x7fa>
 8004040:	d09f      	beq.n	8003f82 <_dtoa_r+0x82a>
 8004042:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004044:	331c      	adds	r3, #28
 8004046:	441a      	add	r2, r3
 8004048:	4498      	add	r8, r3
 800404a:	441e      	add	r6, r3
 800404c:	9209      	str	r2, [sp, #36]	@ 0x24
 800404e:	e798      	b.n	8003f82 <_dtoa_r+0x82a>
 8004050:	4603      	mov	r3, r0
 8004052:	e7f6      	b.n	8004042 <_dtoa_r+0x8ea>
 8004054:	9b07      	ldr	r3, [sp, #28]
 8004056:	9704      	str	r7, [sp, #16]
 8004058:	2b00      	cmp	r3, #0
 800405a:	dc20      	bgt.n	800409e <_dtoa_r+0x946>
 800405c:	9308      	str	r3, [sp, #32]
 800405e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8004060:	2b02      	cmp	r3, #2
 8004062:	dd1e      	ble.n	80040a2 <_dtoa_r+0x94a>
 8004064:	9b08      	ldr	r3, [sp, #32]
 8004066:	2b00      	cmp	r3, #0
 8004068:	f47f aebc 	bne.w	8003de4 <_dtoa_r+0x68c>
 800406c:	4621      	mov	r1, r4
 800406e:	2205      	movs	r2, #5
 8004070:	4658      	mov	r0, fp
 8004072:	f000 fa99 	bl	80045a8 <__multadd>
 8004076:	4601      	mov	r1, r0
 8004078:	4604      	mov	r4, r0
 800407a:	4648      	mov	r0, r9
 800407c:	f000 fcf4 	bl	8004a68 <__mcmp>
 8004080:	2800      	cmp	r0, #0
 8004082:	f77f aeaf 	ble.w	8003de4 <_dtoa_r+0x68c>
 8004086:	2331      	movs	r3, #49	@ 0x31
 8004088:	4656      	mov	r6, sl
 800408a:	f806 3b01 	strb.w	r3, [r6], #1
 800408e:	9b04      	ldr	r3, [sp, #16]
 8004090:	3301      	adds	r3, #1
 8004092:	9304      	str	r3, [sp, #16]
 8004094:	e6aa      	b.n	8003dec <_dtoa_r+0x694>
 8004096:	9c07      	ldr	r4, [sp, #28]
 8004098:	9704      	str	r7, [sp, #16]
 800409a:	4625      	mov	r5, r4
 800409c:	e7f3      	b.n	8004086 <_dtoa_r+0x92e>
 800409e:	9b07      	ldr	r3, [sp, #28]
 80040a0:	9308      	str	r3, [sp, #32]
 80040a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	f000 8104 	beq.w	80042b2 <_dtoa_r+0xb5a>
 80040aa:	2e00      	cmp	r6, #0
 80040ac:	dd05      	ble.n	80040ba <_dtoa_r+0x962>
 80040ae:	4629      	mov	r1, r5
 80040b0:	4632      	mov	r2, r6
 80040b2:	4658      	mov	r0, fp
 80040b4:	f000 fc6c 	bl	8004990 <__lshift>
 80040b8:	4605      	mov	r5, r0
 80040ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80040bc:	2b00      	cmp	r3, #0
 80040be:	d05a      	beq.n	8004176 <_dtoa_r+0xa1e>
 80040c0:	4658      	mov	r0, fp
 80040c2:	6869      	ldr	r1, [r5, #4]
 80040c4:	f000 fa0e 	bl	80044e4 <_Balloc>
 80040c8:	4606      	mov	r6, r0
 80040ca:	b928      	cbnz	r0, 80040d8 <_dtoa_r+0x980>
 80040cc:	4602      	mov	r2, r0
 80040ce:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80040d2:	4b83      	ldr	r3, [pc, #524]	@ (80042e0 <_dtoa_r+0xb88>)
 80040d4:	f7ff bb54 	b.w	8003780 <_dtoa_r+0x28>
 80040d8:	692a      	ldr	r2, [r5, #16]
 80040da:	f105 010c 	add.w	r1, r5, #12
 80040de:	3202      	adds	r2, #2
 80040e0:	0092      	lsls	r2, r2, #2
 80040e2:	300c      	adds	r0, #12
 80040e4:	f001 ff5e 	bl	8005fa4 <memcpy>
 80040e8:	2201      	movs	r2, #1
 80040ea:	4631      	mov	r1, r6
 80040ec:	4658      	mov	r0, fp
 80040ee:	f000 fc4f 	bl	8004990 <__lshift>
 80040f2:	462f      	mov	r7, r5
 80040f4:	4605      	mov	r5, r0
 80040f6:	f10a 0301 	add.w	r3, sl, #1
 80040fa:	9307      	str	r3, [sp, #28]
 80040fc:	9b08      	ldr	r3, [sp, #32]
 80040fe:	4453      	add	r3, sl
 8004100:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004102:	9b02      	ldr	r3, [sp, #8]
 8004104:	f003 0301 	and.w	r3, r3, #1
 8004108:	930a      	str	r3, [sp, #40]	@ 0x28
 800410a:	9b07      	ldr	r3, [sp, #28]
 800410c:	4621      	mov	r1, r4
 800410e:	3b01      	subs	r3, #1
 8004110:	4648      	mov	r0, r9
 8004112:	9302      	str	r3, [sp, #8]
 8004114:	f7ff fa98 	bl	8003648 <quorem>
 8004118:	4639      	mov	r1, r7
 800411a:	9008      	str	r0, [sp, #32]
 800411c:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8004120:	4648      	mov	r0, r9
 8004122:	f000 fca1 	bl	8004a68 <__mcmp>
 8004126:	462a      	mov	r2, r5
 8004128:	9009      	str	r0, [sp, #36]	@ 0x24
 800412a:	4621      	mov	r1, r4
 800412c:	4658      	mov	r0, fp
 800412e:	f000 fcb7 	bl	8004aa0 <__mdiff>
 8004132:	68c2      	ldr	r2, [r0, #12]
 8004134:	4606      	mov	r6, r0
 8004136:	bb02      	cbnz	r2, 800417a <_dtoa_r+0xa22>
 8004138:	4601      	mov	r1, r0
 800413a:	4648      	mov	r0, r9
 800413c:	f000 fc94 	bl	8004a68 <__mcmp>
 8004140:	4602      	mov	r2, r0
 8004142:	4631      	mov	r1, r6
 8004144:	4658      	mov	r0, fp
 8004146:	920c      	str	r2, [sp, #48]	@ 0x30
 8004148:	f000 fa0c 	bl	8004564 <_Bfree>
 800414c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800414e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8004150:	9e07      	ldr	r6, [sp, #28]
 8004152:	ea43 0102 	orr.w	r1, r3, r2
 8004156:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004158:	4319      	orrs	r1, r3
 800415a:	d110      	bne.n	800417e <_dtoa_r+0xa26>
 800415c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8004160:	d029      	beq.n	80041b6 <_dtoa_r+0xa5e>
 8004162:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004164:	2b00      	cmp	r3, #0
 8004166:	dd02      	ble.n	800416e <_dtoa_r+0xa16>
 8004168:	9b08      	ldr	r3, [sp, #32]
 800416a:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 800416e:	9b02      	ldr	r3, [sp, #8]
 8004170:	f883 8000 	strb.w	r8, [r3]
 8004174:	e63b      	b.n	8003dee <_dtoa_r+0x696>
 8004176:	4628      	mov	r0, r5
 8004178:	e7bb      	b.n	80040f2 <_dtoa_r+0x99a>
 800417a:	2201      	movs	r2, #1
 800417c:	e7e1      	b.n	8004142 <_dtoa_r+0x9ea>
 800417e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004180:	2b00      	cmp	r3, #0
 8004182:	db04      	blt.n	800418e <_dtoa_r+0xa36>
 8004184:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8004186:	430b      	orrs	r3, r1
 8004188:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800418a:	430b      	orrs	r3, r1
 800418c:	d120      	bne.n	80041d0 <_dtoa_r+0xa78>
 800418e:	2a00      	cmp	r2, #0
 8004190:	dded      	ble.n	800416e <_dtoa_r+0xa16>
 8004192:	4649      	mov	r1, r9
 8004194:	2201      	movs	r2, #1
 8004196:	4658      	mov	r0, fp
 8004198:	f000 fbfa 	bl	8004990 <__lshift>
 800419c:	4621      	mov	r1, r4
 800419e:	4681      	mov	r9, r0
 80041a0:	f000 fc62 	bl	8004a68 <__mcmp>
 80041a4:	2800      	cmp	r0, #0
 80041a6:	dc03      	bgt.n	80041b0 <_dtoa_r+0xa58>
 80041a8:	d1e1      	bne.n	800416e <_dtoa_r+0xa16>
 80041aa:	f018 0f01 	tst.w	r8, #1
 80041ae:	d0de      	beq.n	800416e <_dtoa_r+0xa16>
 80041b0:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80041b4:	d1d8      	bne.n	8004168 <_dtoa_r+0xa10>
 80041b6:	2339      	movs	r3, #57	@ 0x39
 80041b8:	9a02      	ldr	r2, [sp, #8]
 80041ba:	7013      	strb	r3, [r2, #0]
 80041bc:	4633      	mov	r3, r6
 80041be:	461e      	mov	r6, r3
 80041c0:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80041c4:	3b01      	subs	r3, #1
 80041c6:	2a39      	cmp	r2, #57	@ 0x39
 80041c8:	d052      	beq.n	8004270 <_dtoa_r+0xb18>
 80041ca:	3201      	adds	r2, #1
 80041cc:	701a      	strb	r2, [r3, #0]
 80041ce:	e60e      	b.n	8003dee <_dtoa_r+0x696>
 80041d0:	2a00      	cmp	r2, #0
 80041d2:	dd07      	ble.n	80041e4 <_dtoa_r+0xa8c>
 80041d4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80041d8:	d0ed      	beq.n	80041b6 <_dtoa_r+0xa5e>
 80041da:	9a02      	ldr	r2, [sp, #8]
 80041dc:	f108 0301 	add.w	r3, r8, #1
 80041e0:	7013      	strb	r3, [r2, #0]
 80041e2:	e604      	b.n	8003dee <_dtoa_r+0x696>
 80041e4:	9b07      	ldr	r3, [sp, #28]
 80041e6:	9a07      	ldr	r2, [sp, #28]
 80041e8:	f803 8c01 	strb.w	r8, [r3, #-1]
 80041ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80041ee:	4293      	cmp	r3, r2
 80041f0:	d028      	beq.n	8004244 <_dtoa_r+0xaec>
 80041f2:	4649      	mov	r1, r9
 80041f4:	2300      	movs	r3, #0
 80041f6:	220a      	movs	r2, #10
 80041f8:	4658      	mov	r0, fp
 80041fa:	f000 f9d5 	bl	80045a8 <__multadd>
 80041fe:	42af      	cmp	r7, r5
 8004200:	4681      	mov	r9, r0
 8004202:	f04f 0300 	mov.w	r3, #0
 8004206:	f04f 020a 	mov.w	r2, #10
 800420a:	4639      	mov	r1, r7
 800420c:	4658      	mov	r0, fp
 800420e:	d107      	bne.n	8004220 <_dtoa_r+0xac8>
 8004210:	f000 f9ca 	bl	80045a8 <__multadd>
 8004214:	4607      	mov	r7, r0
 8004216:	4605      	mov	r5, r0
 8004218:	9b07      	ldr	r3, [sp, #28]
 800421a:	3301      	adds	r3, #1
 800421c:	9307      	str	r3, [sp, #28]
 800421e:	e774      	b.n	800410a <_dtoa_r+0x9b2>
 8004220:	f000 f9c2 	bl	80045a8 <__multadd>
 8004224:	4629      	mov	r1, r5
 8004226:	4607      	mov	r7, r0
 8004228:	2300      	movs	r3, #0
 800422a:	220a      	movs	r2, #10
 800422c:	4658      	mov	r0, fp
 800422e:	f000 f9bb 	bl	80045a8 <__multadd>
 8004232:	4605      	mov	r5, r0
 8004234:	e7f0      	b.n	8004218 <_dtoa_r+0xac0>
 8004236:	9b08      	ldr	r3, [sp, #32]
 8004238:	2700      	movs	r7, #0
 800423a:	2b00      	cmp	r3, #0
 800423c:	bfcc      	ite	gt
 800423e:	461e      	movgt	r6, r3
 8004240:	2601      	movle	r6, #1
 8004242:	4456      	add	r6, sl
 8004244:	4649      	mov	r1, r9
 8004246:	2201      	movs	r2, #1
 8004248:	4658      	mov	r0, fp
 800424a:	f000 fba1 	bl	8004990 <__lshift>
 800424e:	4621      	mov	r1, r4
 8004250:	4681      	mov	r9, r0
 8004252:	f000 fc09 	bl	8004a68 <__mcmp>
 8004256:	2800      	cmp	r0, #0
 8004258:	dcb0      	bgt.n	80041bc <_dtoa_r+0xa64>
 800425a:	d102      	bne.n	8004262 <_dtoa_r+0xb0a>
 800425c:	f018 0f01 	tst.w	r8, #1
 8004260:	d1ac      	bne.n	80041bc <_dtoa_r+0xa64>
 8004262:	4633      	mov	r3, r6
 8004264:	461e      	mov	r6, r3
 8004266:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800426a:	2a30      	cmp	r2, #48	@ 0x30
 800426c:	d0fa      	beq.n	8004264 <_dtoa_r+0xb0c>
 800426e:	e5be      	b.n	8003dee <_dtoa_r+0x696>
 8004270:	459a      	cmp	sl, r3
 8004272:	d1a4      	bne.n	80041be <_dtoa_r+0xa66>
 8004274:	9b04      	ldr	r3, [sp, #16]
 8004276:	3301      	adds	r3, #1
 8004278:	9304      	str	r3, [sp, #16]
 800427a:	2331      	movs	r3, #49	@ 0x31
 800427c:	f88a 3000 	strb.w	r3, [sl]
 8004280:	e5b5      	b.n	8003dee <_dtoa_r+0x696>
 8004282:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8004284:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 80042e4 <_dtoa_r+0xb8c>
 8004288:	b11b      	cbz	r3, 8004292 <_dtoa_r+0xb3a>
 800428a:	f10a 0308 	add.w	r3, sl, #8
 800428e:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8004290:	6013      	str	r3, [r2, #0]
 8004292:	4650      	mov	r0, sl
 8004294:	b017      	add	sp, #92	@ 0x5c
 8004296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800429a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800429c:	2b01      	cmp	r3, #1
 800429e:	f77f ae3d 	ble.w	8003f1c <_dtoa_r+0x7c4>
 80042a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80042a4:	930a      	str	r3, [sp, #40]	@ 0x28
 80042a6:	2001      	movs	r0, #1
 80042a8:	e65b      	b.n	8003f62 <_dtoa_r+0x80a>
 80042aa:	9b08      	ldr	r3, [sp, #32]
 80042ac:	2b00      	cmp	r3, #0
 80042ae:	f77f aed6 	ble.w	800405e <_dtoa_r+0x906>
 80042b2:	4656      	mov	r6, sl
 80042b4:	4621      	mov	r1, r4
 80042b6:	4648      	mov	r0, r9
 80042b8:	f7ff f9c6 	bl	8003648 <quorem>
 80042bc:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80042c0:	9b08      	ldr	r3, [sp, #32]
 80042c2:	f806 8b01 	strb.w	r8, [r6], #1
 80042c6:	eba6 020a 	sub.w	r2, r6, sl
 80042ca:	4293      	cmp	r3, r2
 80042cc:	ddb3      	ble.n	8004236 <_dtoa_r+0xade>
 80042ce:	4649      	mov	r1, r9
 80042d0:	2300      	movs	r3, #0
 80042d2:	220a      	movs	r2, #10
 80042d4:	4658      	mov	r0, fp
 80042d6:	f000 f967 	bl	80045a8 <__multadd>
 80042da:	4681      	mov	r9, r0
 80042dc:	e7ea      	b.n	80042b4 <_dtoa_r+0xb5c>
 80042de:	bf00      	nop
 80042e0:	08006dc4 	.word	0x08006dc4
 80042e4:	08006d48 	.word	0x08006d48

080042e8 <_free_r>:
 80042e8:	b538      	push	{r3, r4, r5, lr}
 80042ea:	4605      	mov	r5, r0
 80042ec:	2900      	cmp	r1, #0
 80042ee:	d040      	beq.n	8004372 <_free_r+0x8a>
 80042f0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80042f4:	1f0c      	subs	r4, r1, #4
 80042f6:	2b00      	cmp	r3, #0
 80042f8:	bfb8      	it	lt
 80042fa:	18e4      	addlt	r4, r4, r3
 80042fc:	f000 f8e6 	bl	80044cc <__malloc_lock>
 8004300:	4a1c      	ldr	r2, [pc, #112]	@ (8004374 <_free_r+0x8c>)
 8004302:	6813      	ldr	r3, [r2, #0]
 8004304:	b933      	cbnz	r3, 8004314 <_free_r+0x2c>
 8004306:	6063      	str	r3, [r4, #4]
 8004308:	6014      	str	r4, [r2, #0]
 800430a:	4628      	mov	r0, r5
 800430c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004310:	f000 b8e2 	b.w	80044d8 <__malloc_unlock>
 8004314:	42a3      	cmp	r3, r4
 8004316:	d908      	bls.n	800432a <_free_r+0x42>
 8004318:	6820      	ldr	r0, [r4, #0]
 800431a:	1821      	adds	r1, r4, r0
 800431c:	428b      	cmp	r3, r1
 800431e:	bf01      	itttt	eq
 8004320:	6819      	ldreq	r1, [r3, #0]
 8004322:	685b      	ldreq	r3, [r3, #4]
 8004324:	1809      	addeq	r1, r1, r0
 8004326:	6021      	streq	r1, [r4, #0]
 8004328:	e7ed      	b.n	8004306 <_free_r+0x1e>
 800432a:	461a      	mov	r2, r3
 800432c:	685b      	ldr	r3, [r3, #4]
 800432e:	b10b      	cbz	r3, 8004334 <_free_r+0x4c>
 8004330:	42a3      	cmp	r3, r4
 8004332:	d9fa      	bls.n	800432a <_free_r+0x42>
 8004334:	6811      	ldr	r1, [r2, #0]
 8004336:	1850      	adds	r0, r2, r1
 8004338:	42a0      	cmp	r0, r4
 800433a:	d10b      	bne.n	8004354 <_free_r+0x6c>
 800433c:	6820      	ldr	r0, [r4, #0]
 800433e:	4401      	add	r1, r0
 8004340:	1850      	adds	r0, r2, r1
 8004342:	4283      	cmp	r3, r0
 8004344:	6011      	str	r1, [r2, #0]
 8004346:	d1e0      	bne.n	800430a <_free_r+0x22>
 8004348:	6818      	ldr	r0, [r3, #0]
 800434a:	685b      	ldr	r3, [r3, #4]
 800434c:	4408      	add	r0, r1
 800434e:	6010      	str	r0, [r2, #0]
 8004350:	6053      	str	r3, [r2, #4]
 8004352:	e7da      	b.n	800430a <_free_r+0x22>
 8004354:	d902      	bls.n	800435c <_free_r+0x74>
 8004356:	230c      	movs	r3, #12
 8004358:	602b      	str	r3, [r5, #0]
 800435a:	e7d6      	b.n	800430a <_free_r+0x22>
 800435c:	6820      	ldr	r0, [r4, #0]
 800435e:	1821      	adds	r1, r4, r0
 8004360:	428b      	cmp	r3, r1
 8004362:	bf01      	itttt	eq
 8004364:	6819      	ldreq	r1, [r3, #0]
 8004366:	685b      	ldreq	r3, [r3, #4]
 8004368:	1809      	addeq	r1, r1, r0
 800436a:	6021      	streq	r1, [r4, #0]
 800436c:	6063      	str	r3, [r4, #4]
 800436e:	6054      	str	r4, [r2, #4]
 8004370:	e7cb      	b.n	800430a <_free_r+0x22>
 8004372:	bd38      	pop	{r3, r4, r5, pc}
 8004374:	200003ec 	.word	0x200003ec

08004378 <malloc>:
 8004378:	4b02      	ldr	r3, [pc, #8]	@ (8004384 <malloc+0xc>)
 800437a:	4601      	mov	r1, r0
 800437c:	6818      	ldr	r0, [r3, #0]
 800437e:	f000 b825 	b.w	80043cc <_malloc_r>
 8004382:	bf00      	nop
 8004384:	20000018 	.word	0x20000018

08004388 <sbrk_aligned>:
 8004388:	b570      	push	{r4, r5, r6, lr}
 800438a:	4e0f      	ldr	r6, [pc, #60]	@ (80043c8 <sbrk_aligned+0x40>)
 800438c:	460c      	mov	r4, r1
 800438e:	6831      	ldr	r1, [r6, #0]
 8004390:	4605      	mov	r5, r0
 8004392:	b911      	cbnz	r1, 800439a <sbrk_aligned+0x12>
 8004394:	f001 fdf6 	bl	8005f84 <_sbrk_r>
 8004398:	6030      	str	r0, [r6, #0]
 800439a:	4621      	mov	r1, r4
 800439c:	4628      	mov	r0, r5
 800439e:	f001 fdf1 	bl	8005f84 <_sbrk_r>
 80043a2:	1c43      	adds	r3, r0, #1
 80043a4:	d103      	bne.n	80043ae <sbrk_aligned+0x26>
 80043a6:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 80043aa:	4620      	mov	r0, r4
 80043ac:	bd70      	pop	{r4, r5, r6, pc}
 80043ae:	1cc4      	adds	r4, r0, #3
 80043b0:	f024 0403 	bic.w	r4, r4, #3
 80043b4:	42a0      	cmp	r0, r4
 80043b6:	d0f8      	beq.n	80043aa <sbrk_aligned+0x22>
 80043b8:	1a21      	subs	r1, r4, r0
 80043ba:	4628      	mov	r0, r5
 80043bc:	f001 fde2 	bl	8005f84 <_sbrk_r>
 80043c0:	3001      	adds	r0, #1
 80043c2:	d1f2      	bne.n	80043aa <sbrk_aligned+0x22>
 80043c4:	e7ef      	b.n	80043a6 <sbrk_aligned+0x1e>
 80043c6:	bf00      	nop
 80043c8:	200003e8 	.word	0x200003e8

080043cc <_malloc_r>:
 80043cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80043d0:	1ccd      	adds	r5, r1, #3
 80043d2:	f025 0503 	bic.w	r5, r5, #3
 80043d6:	3508      	adds	r5, #8
 80043d8:	2d0c      	cmp	r5, #12
 80043da:	bf38      	it	cc
 80043dc:	250c      	movcc	r5, #12
 80043de:	2d00      	cmp	r5, #0
 80043e0:	4606      	mov	r6, r0
 80043e2:	db01      	blt.n	80043e8 <_malloc_r+0x1c>
 80043e4:	42a9      	cmp	r1, r5
 80043e6:	d904      	bls.n	80043f2 <_malloc_r+0x26>
 80043e8:	230c      	movs	r3, #12
 80043ea:	6033      	str	r3, [r6, #0]
 80043ec:	2000      	movs	r0, #0
 80043ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80043f2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80044c8 <_malloc_r+0xfc>
 80043f6:	f000 f869 	bl	80044cc <__malloc_lock>
 80043fa:	f8d8 3000 	ldr.w	r3, [r8]
 80043fe:	461c      	mov	r4, r3
 8004400:	bb44      	cbnz	r4, 8004454 <_malloc_r+0x88>
 8004402:	4629      	mov	r1, r5
 8004404:	4630      	mov	r0, r6
 8004406:	f7ff ffbf 	bl	8004388 <sbrk_aligned>
 800440a:	1c43      	adds	r3, r0, #1
 800440c:	4604      	mov	r4, r0
 800440e:	d158      	bne.n	80044c2 <_malloc_r+0xf6>
 8004410:	f8d8 4000 	ldr.w	r4, [r8]
 8004414:	4627      	mov	r7, r4
 8004416:	2f00      	cmp	r7, #0
 8004418:	d143      	bne.n	80044a2 <_malloc_r+0xd6>
 800441a:	2c00      	cmp	r4, #0
 800441c:	d04b      	beq.n	80044b6 <_malloc_r+0xea>
 800441e:	6823      	ldr	r3, [r4, #0]
 8004420:	4639      	mov	r1, r7
 8004422:	4630      	mov	r0, r6
 8004424:	eb04 0903 	add.w	r9, r4, r3
 8004428:	f001 fdac 	bl	8005f84 <_sbrk_r>
 800442c:	4581      	cmp	r9, r0
 800442e:	d142      	bne.n	80044b6 <_malloc_r+0xea>
 8004430:	6821      	ldr	r1, [r4, #0]
 8004432:	4630      	mov	r0, r6
 8004434:	1a6d      	subs	r5, r5, r1
 8004436:	4629      	mov	r1, r5
 8004438:	f7ff ffa6 	bl	8004388 <sbrk_aligned>
 800443c:	3001      	adds	r0, #1
 800443e:	d03a      	beq.n	80044b6 <_malloc_r+0xea>
 8004440:	6823      	ldr	r3, [r4, #0]
 8004442:	442b      	add	r3, r5
 8004444:	6023      	str	r3, [r4, #0]
 8004446:	f8d8 3000 	ldr.w	r3, [r8]
 800444a:	685a      	ldr	r2, [r3, #4]
 800444c:	bb62      	cbnz	r2, 80044a8 <_malloc_r+0xdc>
 800444e:	f8c8 7000 	str.w	r7, [r8]
 8004452:	e00f      	b.n	8004474 <_malloc_r+0xa8>
 8004454:	6822      	ldr	r2, [r4, #0]
 8004456:	1b52      	subs	r2, r2, r5
 8004458:	d420      	bmi.n	800449c <_malloc_r+0xd0>
 800445a:	2a0b      	cmp	r2, #11
 800445c:	d917      	bls.n	800448e <_malloc_r+0xc2>
 800445e:	1961      	adds	r1, r4, r5
 8004460:	42a3      	cmp	r3, r4
 8004462:	6025      	str	r5, [r4, #0]
 8004464:	bf18      	it	ne
 8004466:	6059      	strne	r1, [r3, #4]
 8004468:	6863      	ldr	r3, [r4, #4]
 800446a:	bf08      	it	eq
 800446c:	f8c8 1000 	streq.w	r1, [r8]
 8004470:	5162      	str	r2, [r4, r5]
 8004472:	604b      	str	r3, [r1, #4]
 8004474:	4630      	mov	r0, r6
 8004476:	f000 f82f 	bl	80044d8 <__malloc_unlock>
 800447a:	f104 000b 	add.w	r0, r4, #11
 800447e:	1d23      	adds	r3, r4, #4
 8004480:	f020 0007 	bic.w	r0, r0, #7
 8004484:	1ac2      	subs	r2, r0, r3
 8004486:	bf1c      	itt	ne
 8004488:	1a1b      	subne	r3, r3, r0
 800448a:	50a3      	strne	r3, [r4, r2]
 800448c:	e7af      	b.n	80043ee <_malloc_r+0x22>
 800448e:	6862      	ldr	r2, [r4, #4]
 8004490:	42a3      	cmp	r3, r4
 8004492:	bf0c      	ite	eq
 8004494:	f8c8 2000 	streq.w	r2, [r8]
 8004498:	605a      	strne	r2, [r3, #4]
 800449a:	e7eb      	b.n	8004474 <_malloc_r+0xa8>
 800449c:	4623      	mov	r3, r4
 800449e:	6864      	ldr	r4, [r4, #4]
 80044a0:	e7ae      	b.n	8004400 <_malloc_r+0x34>
 80044a2:	463c      	mov	r4, r7
 80044a4:	687f      	ldr	r7, [r7, #4]
 80044a6:	e7b6      	b.n	8004416 <_malloc_r+0x4a>
 80044a8:	461a      	mov	r2, r3
 80044aa:	685b      	ldr	r3, [r3, #4]
 80044ac:	42a3      	cmp	r3, r4
 80044ae:	d1fb      	bne.n	80044a8 <_malloc_r+0xdc>
 80044b0:	2300      	movs	r3, #0
 80044b2:	6053      	str	r3, [r2, #4]
 80044b4:	e7de      	b.n	8004474 <_malloc_r+0xa8>
 80044b6:	230c      	movs	r3, #12
 80044b8:	4630      	mov	r0, r6
 80044ba:	6033      	str	r3, [r6, #0]
 80044bc:	f000 f80c 	bl	80044d8 <__malloc_unlock>
 80044c0:	e794      	b.n	80043ec <_malloc_r+0x20>
 80044c2:	6005      	str	r5, [r0, #0]
 80044c4:	e7d6      	b.n	8004474 <_malloc_r+0xa8>
 80044c6:	bf00      	nop
 80044c8:	200003ec 	.word	0x200003ec

080044cc <__malloc_lock>:
 80044cc:	4801      	ldr	r0, [pc, #4]	@ (80044d4 <__malloc_lock+0x8>)
 80044ce:	f7ff b8a6 	b.w	800361e <__retarget_lock_acquire_recursive>
 80044d2:	bf00      	nop
 80044d4:	200003e4 	.word	0x200003e4

080044d8 <__malloc_unlock>:
 80044d8:	4801      	ldr	r0, [pc, #4]	@ (80044e0 <__malloc_unlock+0x8>)
 80044da:	f7ff b8a1 	b.w	8003620 <__retarget_lock_release_recursive>
 80044de:	bf00      	nop
 80044e0:	200003e4 	.word	0x200003e4

080044e4 <_Balloc>:
 80044e4:	b570      	push	{r4, r5, r6, lr}
 80044e6:	69c6      	ldr	r6, [r0, #28]
 80044e8:	4604      	mov	r4, r0
 80044ea:	460d      	mov	r5, r1
 80044ec:	b976      	cbnz	r6, 800450c <_Balloc+0x28>
 80044ee:	2010      	movs	r0, #16
 80044f0:	f7ff ff42 	bl	8004378 <malloc>
 80044f4:	4602      	mov	r2, r0
 80044f6:	61e0      	str	r0, [r4, #28]
 80044f8:	b920      	cbnz	r0, 8004504 <_Balloc+0x20>
 80044fa:	216b      	movs	r1, #107	@ 0x6b
 80044fc:	4b17      	ldr	r3, [pc, #92]	@ (800455c <_Balloc+0x78>)
 80044fe:	4818      	ldr	r0, [pc, #96]	@ (8004560 <_Balloc+0x7c>)
 8004500:	f001 fd64 	bl	8005fcc <__assert_func>
 8004504:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004508:	6006      	str	r6, [r0, #0]
 800450a:	60c6      	str	r6, [r0, #12]
 800450c:	69e6      	ldr	r6, [r4, #28]
 800450e:	68f3      	ldr	r3, [r6, #12]
 8004510:	b183      	cbz	r3, 8004534 <_Balloc+0x50>
 8004512:	69e3      	ldr	r3, [r4, #28]
 8004514:	68db      	ldr	r3, [r3, #12]
 8004516:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800451a:	b9b8      	cbnz	r0, 800454c <_Balloc+0x68>
 800451c:	2101      	movs	r1, #1
 800451e:	fa01 f605 	lsl.w	r6, r1, r5
 8004522:	1d72      	adds	r2, r6, #5
 8004524:	4620      	mov	r0, r4
 8004526:	0092      	lsls	r2, r2, #2
 8004528:	f001 fd6e 	bl	8006008 <_calloc_r>
 800452c:	b160      	cbz	r0, 8004548 <_Balloc+0x64>
 800452e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8004532:	e00e      	b.n	8004552 <_Balloc+0x6e>
 8004534:	2221      	movs	r2, #33	@ 0x21
 8004536:	2104      	movs	r1, #4
 8004538:	4620      	mov	r0, r4
 800453a:	f001 fd65 	bl	8006008 <_calloc_r>
 800453e:	69e3      	ldr	r3, [r4, #28]
 8004540:	60f0      	str	r0, [r6, #12]
 8004542:	68db      	ldr	r3, [r3, #12]
 8004544:	2b00      	cmp	r3, #0
 8004546:	d1e4      	bne.n	8004512 <_Balloc+0x2e>
 8004548:	2000      	movs	r0, #0
 800454a:	bd70      	pop	{r4, r5, r6, pc}
 800454c:	6802      	ldr	r2, [r0, #0]
 800454e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8004552:	2300      	movs	r3, #0
 8004554:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8004558:	e7f7      	b.n	800454a <_Balloc+0x66>
 800455a:	bf00      	nop
 800455c:	08006d55 	.word	0x08006d55
 8004560:	08006dd5 	.word	0x08006dd5

08004564 <_Bfree>:
 8004564:	b570      	push	{r4, r5, r6, lr}
 8004566:	69c6      	ldr	r6, [r0, #28]
 8004568:	4605      	mov	r5, r0
 800456a:	460c      	mov	r4, r1
 800456c:	b976      	cbnz	r6, 800458c <_Bfree+0x28>
 800456e:	2010      	movs	r0, #16
 8004570:	f7ff ff02 	bl	8004378 <malloc>
 8004574:	4602      	mov	r2, r0
 8004576:	61e8      	str	r0, [r5, #28]
 8004578:	b920      	cbnz	r0, 8004584 <_Bfree+0x20>
 800457a:	218f      	movs	r1, #143	@ 0x8f
 800457c:	4b08      	ldr	r3, [pc, #32]	@ (80045a0 <_Bfree+0x3c>)
 800457e:	4809      	ldr	r0, [pc, #36]	@ (80045a4 <_Bfree+0x40>)
 8004580:	f001 fd24 	bl	8005fcc <__assert_func>
 8004584:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004588:	6006      	str	r6, [r0, #0]
 800458a:	60c6      	str	r6, [r0, #12]
 800458c:	b13c      	cbz	r4, 800459e <_Bfree+0x3a>
 800458e:	69eb      	ldr	r3, [r5, #28]
 8004590:	6862      	ldr	r2, [r4, #4]
 8004592:	68db      	ldr	r3, [r3, #12]
 8004594:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004598:	6021      	str	r1, [r4, #0]
 800459a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800459e:	bd70      	pop	{r4, r5, r6, pc}
 80045a0:	08006d55 	.word	0x08006d55
 80045a4:	08006dd5 	.word	0x08006dd5

080045a8 <__multadd>:
 80045a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80045ac:	4607      	mov	r7, r0
 80045ae:	460c      	mov	r4, r1
 80045b0:	461e      	mov	r6, r3
 80045b2:	2000      	movs	r0, #0
 80045b4:	690d      	ldr	r5, [r1, #16]
 80045b6:	f101 0c14 	add.w	ip, r1, #20
 80045ba:	f8dc 3000 	ldr.w	r3, [ip]
 80045be:	3001      	adds	r0, #1
 80045c0:	b299      	uxth	r1, r3
 80045c2:	fb02 6101 	mla	r1, r2, r1, r6
 80045c6:	0c1e      	lsrs	r6, r3, #16
 80045c8:	0c0b      	lsrs	r3, r1, #16
 80045ca:	fb02 3306 	mla	r3, r2, r6, r3
 80045ce:	b289      	uxth	r1, r1
 80045d0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80045d4:	4285      	cmp	r5, r0
 80045d6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80045da:	f84c 1b04 	str.w	r1, [ip], #4
 80045de:	dcec      	bgt.n	80045ba <__multadd+0x12>
 80045e0:	b30e      	cbz	r6, 8004626 <__multadd+0x7e>
 80045e2:	68a3      	ldr	r3, [r4, #8]
 80045e4:	42ab      	cmp	r3, r5
 80045e6:	dc19      	bgt.n	800461c <__multadd+0x74>
 80045e8:	6861      	ldr	r1, [r4, #4]
 80045ea:	4638      	mov	r0, r7
 80045ec:	3101      	adds	r1, #1
 80045ee:	f7ff ff79 	bl	80044e4 <_Balloc>
 80045f2:	4680      	mov	r8, r0
 80045f4:	b928      	cbnz	r0, 8004602 <__multadd+0x5a>
 80045f6:	4602      	mov	r2, r0
 80045f8:	21ba      	movs	r1, #186	@ 0xba
 80045fa:	4b0c      	ldr	r3, [pc, #48]	@ (800462c <__multadd+0x84>)
 80045fc:	480c      	ldr	r0, [pc, #48]	@ (8004630 <__multadd+0x88>)
 80045fe:	f001 fce5 	bl	8005fcc <__assert_func>
 8004602:	6922      	ldr	r2, [r4, #16]
 8004604:	f104 010c 	add.w	r1, r4, #12
 8004608:	3202      	adds	r2, #2
 800460a:	0092      	lsls	r2, r2, #2
 800460c:	300c      	adds	r0, #12
 800460e:	f001 fcc9 	bl	8005fa4 <memcpy>
 8004612:	4621      	mov	r1, r4
 8004614:	4638      	mov	r0, r7
 8004616:	f7ff ffa5 	bl	8004564 <_Bfree>
 800461a:	4644      	mov	r4, r8
 800461c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8004620:	3501      	adds	r5, #1
 8004622:	615e      	str	r6, [r3, #20]
 8004624:	6125      	str	r5, [r4, #16]
 8004626:	4620      	mov	r0, r4
 8004628:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800462c:	08006dc4 	.word	0x08006dc4
 8004630:	08006dd5 	.word	0x08006dd5

08004634 <__s2b>:
 8004634:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004638:	4615      	mov	r5, r2
 800463a:	2209      	movs	r2, #9
 800463c:	461f      	mov	r7, r3
 800463e:	3308      	adds	r3, #8
 8004640:	460c      	mov	r4, r1
 8004642:	fb93 f3f2 	sdiv	r3, r3, r2
 8004646:	4606      	mov	r6, r0
 8004648:	2201      	movs	r2, #1
 800464a:	2100      	movs	r1, #0
 800464c:	429a      	cmp	r2, r3
 800464e:	db09      	blt.n	8004664 <__s2b+0x30>
 8004650:	4630      	mov	r0, r6
 8004652:	f7ff ff47 	bl	80044e4 <_Balloc>
 8004656:	b940      	cbnz	r0, 800466a <__s2b+0x36>
 8004658:	4602      	mov	r2, r0
 800465a:	21d3      	movs	r1, #211	@ 0xd3
 800465c:	4b18      	ldr	r3, [pc, #96]	@ (80046c0 <__s2b+0x8c>)
 800465e:	4819      	ldr	r0, [pc, #100]	@ (80046c4 <__s2b+0x90>)
 8004660:	f001 fcb4 	bl	8005fcc <__assert_func>
 8004664:	0052      	lsls	r2, r2, #1
 8004666:	3101      	adds	r1, #1
 8004668:	e7f0      	b.n	800464c <__s2b+0x18>
 800466a:	9b08      	ldr	r3, [sp, #32]
 800466c:	2d09      	cmp	r5, #9
 800466e:	6143      	str	r3, [r0, #20]
 8004670:	f04f 0301 	mov.w	r3, #1
 8004674:	6103      	str	r3, [r0, #16]
 8004676:	dd16      	ble.n	80046a6 <__s2b+0x72>
 8004678:	f104 0909 	add.w	r9, r4, #9
 800467c:	46c8      	mov	r8, r9
 800467e:	442c      	add	r4, r5
 8004680:	f818 3b01 	ldrb.w	r3, [r8], #1
 8004684:	4601      	mov	r1, r0
 8004686:	220a      	movs	r2, #10
 8004688:	4630      	mov	r0, r6
 800468a:	3b30      	subs	r3, #48	@ 0x30
 800468c:	f7ff ff8c 	bl	80045a8 <__multadd>
 8004690:	45a0      	cmp	r8, r4
 8004692:	d1f5      	bne.n	8004680 <__s2b+0x4c>
 8004694:	f1a5 0408 	sub.w	r4, r5, #8
 8004698:	444c      	add	r4, r9
 800469a:	1b2d      	subs	r5, r5, r4
 800469c:	1963      	adds	r3, r4, r5
 800469e:	42bb      	cmp	r3, r7
 80046a0:	db04      	blt.n	80046ac <__s2b+0x78>
 80046a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80046a6:	2509      	movs	r5, #9
 80046a8:	340a      	adds	r4, #10
 80046aa:	e7f6      	b.n	800469a <__s2b+0x66>
 80046ac:	f814 3b01 	ldrb.w	r3, [r4], #1
 80046b0:	4601      	mov	r1, r0
 80046b2:	220a      	movs	r2, #10
 80046b4:	4630      	mov	r0, r6
 80046b6:	3b30      	subs	r3, #48	@ 0x30
 80046b8:	f7ff ff76 	bl	80045a8 <__multadd>
 80046bc:	e7ee      	b.n	800469c <__s2b+0x68>
 80046be:	bf00      	nop
 80046c0:	08006dc4 	.word	0x08006dc4
 80046c4:	08006dd5 	.word	0x08006dd5

080046c8 <__hi0bits>:
 80046c8:	4603      	mov	r3, r0
 80046ca:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80046ce:	bf3a      	itte	cc
 80046d0:	0403      	lslcc	r3, r0, #16
 80046d2:	2010      	movcc	r0, #16
 80046d4:	2000      	movcs	r0, #0
 80046d6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80046da:	bf3c      	itt	cc
 80046dc:	021b      	lslcc	r3, r3, #8
 80046de:	3008      	addcc	r0, #8
 80046e0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80046e4:	bf3c      	itt	cc
 80046e6:	011b      	lslcc	r3, r3, #4
 80046e8:	3004      	addcc	r0, #4
 80046ea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80046ee:	bf3c      	itt	cc
 80046f0:	009b      	lslcc	r3, r3, #2
 80046f2:	3002      	addcc	r0, #2
 80046f4:	2b00      	cmp	r3, #0
 80046f6:	db05      	blt.n	8004704 <__hi0bits+0x3c>
 80046f8:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80046fc:	f100 0001 	add.w	r0, r0, #1
 8004700:	bf08      	it	eq
 8004702:	2020      	moveq	r0, #32
 8004704:	4770      	bx	lr

08004706 <__lo0bits>:
 8004706:	6803      	ldr	r3, [r0, #0]
 8004708:	4602      	mov	r2, r0
 800470a:	f013 0007 	ands.w	r0, r3, #7
 800470e:	d00b      	beq.n	8004728 <__lo0bits+0x22>
 8004710:	07d9      	lsls	r1, r3, #31
 8004712:	d421      	bmi.n	8004758 <__lo0bits+0x52>
 8004714:	0798      	lsls	r0, r3, #30
 8004716:	bf49      	itett	mi
 8004718:	085b      	lsrmi	r3, r3, #1
 800471a:	089b      	lsrpl	r3, r3, #2
 800471c:	2001      	movmi	r0, #1
 800471e:	6013      	strmi	r3, [r2, #0]
 8004720:	bf5c      	itt	pl
 8004722:	2002      	movpl	r0, #2
 8004724:	6013      	strpl	r3, [r2, #0]
 8004726:	4770      	bx	lr
 8004728:	b299      	uxth	r1, r3
 800472a:	b909      	cbnz	r1, 8004730 <__lo0bits+0x2a>
 800472c:	2010      	movs	r0, #16
 800472e:	0c1b      	lsrs	r3, r3, #16
 8004730:	b2d9      	uxtb	r1, r3
 8004732:	b909      	cbnz	r1, 8004738 <__lo0bits+0x32>
 8004734:	3008      	adds	r0, #8
 8004736:	0a1b      	lsrs	r3, r3, #8
 8004738:	0719      	lsls	r1, r3, #28
 800473a:	bf04      	itt	eq
 800473c:	091b      	lsreq	r3, r3, #4
 800473e:	3004      	addeq	r0, #4
 8004740:	0799      	lsls	r1, r3, #30
 8004742:	bf04      	itt	eq
 8004744:	089b      	lsreq	r3, r3, #2
 8004746:	3002      	addeq	r0, #2
 8004748:	07d9      	lsls	r1, r3, #31
 800474a:	d403      	bmi.n	8004754 <__lo0bits+0x4e>
 800474c:	085b      	lsrs	r3, r3, #1
 800474e:	f100 0001 	add.w	r0, r0, #1
 8004752:	d003      	beq.n	800475c <__lo0bits+0x56>
 8004754:	6013      	str	r3, [r2, #0]
 8004756:	4770      	bx	lr
 8004758:	2000      	movs	r0, #0
 800475a:	4770      	bx	lr
 800475c:	2020      	movs	r0, #32
 800475e:	4770      	bx	lr

08004760 <__i2b>:
 8004760:	b510      	push	{r4, lr}
 8004762:	460c      	mov	r4, r1
 8004764:	2101      	movs	r1, #1
 8004766:	f7ff febd 	bl	80044e4 <_Balloc>
 800476a:	4602      	mov	r2, r0
 800476c:	b928      	cbnz	r0, 800477a <__i2b+0x1a>
 800476e:	f240 1145 	movw	r1, #325	@ 0x145
 8004772:	4b04      	ldr	r3, [pc, #16]	@ (8004784 <__i2b+0x24>)
 8004774:	4804      	ldr	r0, [pc, #16]	@ (8004788 <__i2b+0x28>)
 8004776:	f001 fc29 	bl	8005fcc <__assert_func>
 800477a:	2301      	movs	r3, #1
 800477c:	6144      	str	r4, [r0, #20]
 800477e:	6103      	str	r3, [r0, #16]
 8004780:	bd10      	pop	{r4, pc}
 8004782:	bf00      	nop
 8004784:	08006dc4 	.word	0x08006dc4
 8004788:	08006dd5 	.word	0x08006dd5

0800478c <__multiply>:
 800478c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004790:	4614      	mov	r4, r2
 8004792:	690a      	ldr	r2, [r1, #16]
 8004794:	6923      	ldr	r3, [r4, #16]
 8004796:	460f      	mov	r7, r1
 8004798:	429a      	cmp	r2, r3
 800479a:	bfa2      	ittt	ge
 800479c:	4623      	movge	r3, r4
 800479e:	460c      	movge	r4, r1
 80047a0:	461f      	movge	r7, r3
 80047a2:	f8d4 a010 	ldr.w	sl, [r4, #16]
 80047a6:	f8d7 9010 	ldr.w	r9, [r7, #16]
 80047aa:	68a3      	ldr	r3, [r4, #8]
 80047ac:	6861      	ldr	r1, [r4, #4]
 80047ae:	eb0a 0609 	add.w	r6, sl, r9
 80047b2:	42b3      	cmp	r3, r6
 80047b4:	b085      	sub	sp, #20
 80047b6:	bfb8      	it	lt
 80047b8:	3101      	addlt	r1, #1
 80047ba:	f7ff fe93 	bl	80044e4 <_Balloc>
 80047be:	b930      	cbnz	r0, 80047ce <__multiply+0x42>
 80047c0:	4602      	mov	r2, r0
 80047c2:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80047c6:	4b43      	ldr	r3, [pc, #268]	@ (80048d4 <__multiply+0x148>)
 80047c8:	4843      	ldr	r0, [pc, #268]	@ (80048d8 <__multiply+0x14c>)
 80047ca:	f001 fbff 	bl	8005fcc <__assert_func>
 80047ce:	f100 0514 	add.w	r5, r0, #20
 80047d2:	462b      	mov	r3, r5
 80047d4:	2200      	movs	r2, #0
 80047d6:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80047da:	4543      	cmp	r3, r8
 80047dc:	d321      	bcc.n	8004822 <__multiply+0x96>
 80047de:	f107 0114 	add.w	r1, r7, #20
 80047e2:	f104 0214 	add.w	r2, r4, #20
 80047e6:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 80047ea:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 80047ee:	9302      	str	r3, [sp, #8]
 80047f0:	1b13      	subs	r3, r2, r4
 80047f2:	3b15      	subs	r3, #21
 80047f4:	f023 0303 	bic.w	r3, r3, #3
 80047f8:	3304      	adds	r3, #4
 80047fa:	f104 0715 	add.w	r7, r4, #21
 80047fe:	42ba      	cmp	r2, r7
 8004800:	bf38      	it	cc
 8004802:	2304      	movcc	r3, #4
 8004804:	9301      	str	r3, [sp, #4]
 8004806:	9b02      	ldr	r3, [sp, #8]
 8004808:	9103      	str	r1, [sp, #12]
 800480a:	428b      	cmp	r3, r1
 800480c:	d80c      	bhi.n	8004828 <__multiply+0x9c>
 800480e:	2e00      	cmp	r6, #0
 8004810:	dd03      	ble.n	800481a <__multiply+0x8e>
 8004812:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8004816:	2b00      	cmp	r3, #0
 8004818:	d05a      	beq.n	80048d0 <__multiply+0x144>
 800481a:	6106      	str	r6, [r0, #16]
 800481c:	b005      	add	sp, #20
 800481e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004822:	f843 2b04 	str.w	r2, [r3], #4
 8004826:	e7d8      	b.n	80047da <__multiply+0x4e>
 8004828:	f8b1 a000 	ldrh.w	sl, [r1]
 800482c:	f1ba 0f00 	cmp.w	sl, #0
 8004830:	d023      	beq.n	800487a <__multiply+0xee>
 8004832:	46a9      	mov	r9, r5
 8004834:	f04f 0c00 	mov.w	ip, #0
 8004838:	f104 0e14 	add.w	lr, r4, #20
 800483c:	f85e 7b04 	ldr.w	r7, [lr], #4
 8004840:	f8d9 3000 	ldr.w	r3, [r9]
 8004844:	fa1f fb87 	uxth.w	fp, r7
 8004848:	b29b      	uxth	r3, r3
 800484a:	fb0a 330b 	mla	r3, sl, fp, r3
 800484e:	4463      	add	r3, ip
 8004850:	f8d9 c000 	ldr.w	ip, [r9]
 8004854:	0c3f      	lsrs	r7, r7, #16
 8004856:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800485a:	fb0a c707 	mla	r7, sl, r7, ip
 800485e:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8004862:	b29b      	uxth	r3, r3
 8004864:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8004868:	4572      	cmp	r2, lr
 800486a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800486e:	f849 3b04 	str.w	r3, [r9], #4
 8004872:	d8e3      	bhi.n	800483c <__multiply+0xb0>
 8004874:	9b01      	ldr	r3, [sp, #4]
 8004876:	f845 c003 	str.w	ip, [r5, r3]
 800487a:	9b03      	ldr	r3, [sp, #12]
 800487c:	3104      	adds	r1, #4
 800487e:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8004882:	f1b9 0f00 	cmp.w	r9, #0
 8004886:	d021      	beq.n	80048cc <__multiply+0x140>
 8004888:	46ae      	mov	lr, r5
 800488a:	f04f 0a00 	mov.w	sl, #0
 800488e:	682b      	ldr	r3, [r5, #0]
 8004890:	f104 0c14 	add.w	ip, r4, #20
 8004894:	f8bc b000 	ldrh.w	fp, [ip]
 8004898:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800489c:	b29b      	uxth	r3, r3
 800489e:	fb09 770b 	mla	r7, r9, fp, r7
 80048a2:	4457      	add	r7, sl
 80048a4:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80048a8:	f84e 3b04 	str.w	r3, [lr], #4
 80048ac:	f85c 3b04 	ldr.w	r3, [ip], #4
 80048b0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80048b4:	f8be 3000 	ldrh.w	r3, [lr]
 80048b8:	4562      	cmp	r2, ip
 80048ba:	fb09 330a 	mla	r3, r9, sl, r3
 80048be:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 80048c2:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80048c6:	d8e5      	bhi.n	8004894 <__multiply+0x108>
 80048c8:	9f01      	ldr	r7, [sp, #4]
 80048ca:	51eb      	str	r3, [r5, r7]
 80048cc:	3504      	adds	r5, #4
 80048ce:	e79a      	b.n	8004806 <__multiply+0x7a>
 80048d0:	3e01      	subs	r6, #1
 80048d2:	e79c      	b.n	800480e <__multiply+0x82>
 80048d4:	08006dc4 	.word	0x08006dc4
 80048d8:	08006dd5 	.word	0x08006dd5

080048dc <__pow5mult>:
 80048dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80048e0:	4615      	mov	r5, r2
 80048e2:	f012 0203 	ands.w	r2, r2, #3
 80048e6:	4607      	mov	r7, r0
 80048e8:	460e      	mov	r6, r1
 80048ea:	d007      	beq.n	80048fc <__pow5mult+0x20>
 80048ec:	4c25      	ldr	r4, [pc, #148]	@ (8004984 <__pow5mult+0xa8>)
 80048ee:	3a01      	subs	r2, #1
 80048f0:	2300      	movs	r3, #0
 80048f2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80048f6:	f7ff fe57 	bl	80045a8 <__multadd>
 80048fa:	4606      	mov	r6, r0
 80048fc:	10ad      	asrs	r5, r5, #2
 80048fe:	d03d      	beq.n	800497c <__pow5mult+0xa0>
 8004900:	69fc      	ldr	r4, [r7, #28]
 8004902:	b97c      	cbnz	r4, 8004924 <__pow5mult+0x48>
 8004904:	2010      	movs	r0, #16
 8004906:	f7ff fd37 	bl	8004378 <malloc>
 800490a:	4602      	mov	r2, r0
 800490c:	61f8      	str	r0, [r7, #28]
 800490e:	b928      	cbnz	r0, 800491c <__pow5mult+0x40>
 8004910:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8004914:	4b1c      	ldr	r3, [pc, #112]	@ (8004988 <__pow5mult+0xac>)
 8004916:	481d      	ldr	r0, [pc, #116]	@ (800498c <__pow5mult+0xb0>)
 8004918:	f001 fb58 	bl	8005fcc <__assert_func>
 800491c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004920:	6004      	str	r4, [r0, #0]
 8004922:	60c4      	str	r4, [r0, #12]
 8004924:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8004928:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800492c:	b94c      	cbnz	r4, 8004942 <__pow5mult+0x66>
 800492e:	f240 2171 	movw	r1, #625	@ 0x271
 8004932:	4638      	mov	r0, r7
 8004934:	f7ff ff14 	bl	8004760 <__i2b>
 8004938:	2300      	movs	r3, #0
 800493a:	4604      	mov	r4, r0
 800493c:	f8c8 0008 	str.w	r0, [r8, #8]
 8004940:	6003      	str	r3, [r0, #0]
 8004942:	f04f 0900 	mov.w	r9, #0
 8004946:	07eb      	lsls	r3, r5, #31
 8004948:	d50a      	bpl.n	8004960 <__pow5mult+0x84>
 800494a:	4631      	mov	r1, r6
 800494c:	4622      	mov	r2, r4
 800494e:	4638      	mov	r0, r7
 8004950:	f7ff ff1c 	bl	800478c <__multiply>
 8004954:	4680      	mov	r8, r0
 8004956:	4631      	mov	r1, r6
 8004958:	4638      	mov	r0, r7
 800495a:	f7ff fe03 	bl	8004564 <_Bfree>
 800495e:	4646      	mov	r6, r8
 8004960:	106d      	asrs	r5, r5, #1
 8004962:	d00b      	beq.n	800497c <__pow5mult+0xa0>
 8004964:	6820      	ldr	r0, [r4, #0]
 8004966:	b938      	cbnz	r0, 8004978 <__pow5mult+0x9c>
 8004968:	4622      	mov	r2, r4
 800496a:	4621      	mov	r1, r4
 800496c:	4638      	mov	r0, r7
 800496e:	f7ff ff0d 	bl	800478c <__multiply>
 8004972:	6020      	str	r0, [r4, #0]
 8004974:	f8c0 9000 	str.w	r9, [r0]
 8004978:	4604      	mov	r4, r0
 800497a:	e7e4      	b.n	8004946 <__pow5mult+0x6a>
 800497c:	4630      	mov	r0, r6
 800497e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004982:	bf00      	nop
 8004984:	08006e30 	.word	0x08006e30
 8004988:	08006d55 	.word	0x08006d55
 800498c:	08006dd5 	.word	0x08006dd5

08004990 <__lshift>:
 8004990:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004994:	460c      	mov	r4, r1
 8004996:	4607      	mov	r7, r0
 8004998:	4691      	mov	r9, r2
 800499a:	6923      	ldr	r3, [r4, #16]
 800499c:	6849      	ldr	r1, [r1, #4]
 800499e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80049a2:	68a3      	ldr	r3, [r4, #8]
 80049a4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80049a8:	f108 0601 	add.w	r6, r8, #1
 80049ac:	42b3      	cmp	r3, r6
 80049ae:	db0b      	blt.n	80049c8 <__lshift+0x38>
 80049b0:	4638      	mov	r0, r7
 80049b2:	f7ff fd97 	bl	80044e4 <_Balloc>
 80049b6:	4605      	mov	r5, r0
 80049b8:	b948      	cbnz	r0, 80049ce <__lshift+0x3e>
 80049ba:	4602      	mov	r2, r0
 80049bc:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80049c0:	4b27      	ldr	r3, [pc, #156]	@ (8004a60 <__lshift+0xd0>)
 80049c2:	4828      	ldr	r0, [pc, #160]	@ (8004a64 <__lshift+0xd4>)
 80049c4:	f001 fb02 	bl	8005fcc <__assert_func>
 80049c8:	3101      	adds	r1, #1
 80049ca:	005b      	lsls	r3, r3, #1
 80049cc:	e7ee      	b.n	80049ac <__lshift+0x1c>
 80049ce:	2300      	movs	r3, #0
 80049d0:	f100 0114 	add.w	r1, r0, #20
 80049d4:	f100 0210 	add.w	r2, r0, #16
 80049d8:	4618      	mov	r0, r3
 80049da:	4553      	cmp	r3, sl
 80049dc:	db33      	blt.n	8004a46 <__lshift+0xb6>
 80049de:	6920      	ldr	r0, [r4, #16]
 80049e0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80049e4:	f104 0314 	add.w	r3, r4, #20
 80049e8:	f019 091f 	ands.w	r9, r9, #31
 80049ec:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80049f0:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80049f4:	d02b      	beq.n	8004a4e <__lshift+0xbe>
 80049f6:	468a      	mov	sl, r1
 80049f8:	2200      	movs	r2, #0
 80049fa:	f1c9 0e20 	rsb	lr, r9, #32
 80049fe:	6818      	ldr	r0, [r3, #0]
 8004a00:	fa00 f009 	lsl.w	r0, r0, r9
 8004a04:	4310      	orrs	r0, r2
 8004a06:	f84a 0b04 	str.w	r0, [sl], #4
 8004a0a:	f853 2b04 	ldr.w	r2, [r3], #4
 8004a0e:	459c      	cmp	ip, r3
 8004a10:	fa22 f20e 	lsr.w	r2, r2, lr
 8004a14:	d8f3      	bhi.n	80049fe <__lshift+0x6e>
 8004a16:	ebac 0304 	sub.w	r3, ip, r4
 8004a1a:	3b15      	subs	r3, #21
 8004a1c:	f023 0303 	bic.w	r3, r3, #3
 8004a20:	3304      	adds	r3, #4
 8004a22:	f104 0015 	add.w	r0, r4, #21
 8004a26:	4584      	cmp	ip, r0
 8004a28:	bf38      	it	cc
 8004a2a:	2304      	movcc	r3, #4
 8004a2c:	50ca      	str	r2, [r1, r3]
 8004a2e:	b10a      	cbz	r2, 8004a34 <__lshift+0xa4>
 8004a30:	f108 0602 	add.w	r6, r8, #2
 8004a34:	3e01      	subs	r6, #1
 8004a36:	4638      	mov	r0, r7
 8004a38:	4621      	mov	r1, r4
 8004a3a:	612e      	str	r6, [r5, #16]
 8004a3c:	f7ff fd92 	bl	8004564 <_Bfree>
 8004a40:	4628      	mov	r0, r5
 8004a42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004a46:	f842 0f04 	str.w	r0, [r2, #4]!
 8004a4a:	3301      	adds	r3, #1
 8004a4c:	e7c5      	b.n	80049da <__lshift+0x4a>
 8004a4e:	3904      	subs	r1, #4
 8004a50:	f853 2b04 	ldr.w	r2, [r3], #4
 8004a54:	459c      	cmp	ip, r3
 8004a56:	f841 2f04 	str.w	r2, [r1, #4]!
 8004a5a:	d8f9      	bhi.n	8004a50 <__lshift+0xc0>
 8004a5c:	e7ea      	b.n	8004a34 <__lshift+0xa4>
 8004a5e:	bf00      	nop
 8004a60:	08006dc4 	.word	0x08006dc4
 8004a64:	08006dd5 	.word	0x08006dd5

08004a68 <__mcmp>:
 8004a68:	4603      	mov	r3, r0
 8004a6a:	690a      	ldr	r2, [r1, #16]
 8004a6c:	6900      	ldr	r0, [r0, #16]
 8004a6e:	b530      	push	{r4, r5, lr}
 8004a70:	1a80      	subs	r0, r0, r2
 8004a72:	d10e      	bne.n	8004a92 <__mcmp+0x2a>
 8004a74:	3314      	adds	r3, #20
 8004a76:	3114      	adds	r1, #20
 8004a78:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8004a7c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004a80:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004a84:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004a88:	4295      	cmp	r5, r2
 8004a8a:	d003      	beq.n	8004a94 <__mcmp+0x2c>
 8004a8c:	d205      	bcs.n	8004a9a <__mcmp+0x32>
 8004a8e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8004a92:	bd30      	pop	{r4, r5, pc}
 8004a94:	42a3      	cmp	r3, r4
 8004a96:	d3f3      	bcc.n	8004a80 <__mcmp+0x18>
 8004a98:	e7fb      	b.n	8004a92 <__mcmp+0x2a>
 8004a9a:	2001      	movs	r0, #1
 8004a9c:	e7f9      	b.n	8004a92 <__mcmp+0x2a>
	...

08004aa0 <__mdiff>:
 8004aa0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004aa4:	4689      	mov	r9, r1
 8004aa6:	4606      	mov	r6, r0
 8004aa8:	4611      	mov	r1, r2
 8004aaa:	4648      	mov	r0, r9
 8004aac:	4614      	mov	r4, r2
 8004aae:	f7ff ffdb 	bl	8004a68 <__mcmp>
 8004ab2:	1e05      	subs	r5, r0, #0
 8004ab4:	d112      	bne.n	8004adc <__mdiff+0x3c>
 8004ab6:	4629      	mov	r1, r5
 8004ab8:	4630      	mov	r0, r6
 8004aba:	f7ff fd13 	bl	80044e4 <_Balloc>
 8004abe:	4602      	mov	r2, r0
 8004ac0:	b928      	cbnz	r0, 8004ace <__mdiff+0x2e>
 8004ac2:	f240 2137 	movw	r1, #567	@ 0x237
 8004ac6:	4b3e      	ldr	r3, [pc, #248]	@ (8004bc0 <__mdiff+0x120>)
 8004ac8:	483e      	ldr	r0, [pc, #248]	@ (8004bc4 <__mdiff+0x124>)
 8004aca:	f001 fa7f 	bl	8005fcc <__assert_func>
 8004ace:	2301      	movs	r3, #1
 8004ad0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8004ad4:	4610      	mov	r0, r2
 8004ad6:	b003      	add	sp, #12
 8004ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004adc:	bfbc      	itt	lt
 8004ade:	464b      	movlt	r3, r9
 8004ae0:	46a1      	movlt	r9, r4
 8004ae2:	4630      	mov	r0, r6
 8004ae4:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004ae8:	bfba      	itte	lt
 8004aea:	461c      	movlt	r4, r3
 8004aec:	2501      	movlt	r5, #1
 8004aee:	2500      	movge	r5, #0
 8004af0:	f7ff fcf8 	bl	80044e4 <_Balloc>
 8004af4:	4602      	mov	r2, r0
 8004af6:	b918      	cbnz	r0, 8004b00 <__mdiff+0x60>
 8004af8:	f240 2145 	movw	r1, #581	@ 0x245
 8004afc:	4b30      	ldr	r3, [pc, #192]	@ (8004bc0 <__mdiff+0x120>)
 8004afe:	e7e3      	b.n	8004ac8 <__mdiff+0x28>
 8004b00:	f100 0b14 	add.w	fp, r0, #20
 8004b04:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8004b08:	f109 0310 	add.w	r3, r9, #16
 8004b0c:	60c5      	str	r5, [r0, #12]
 8004b0e:	f04f 0c00 	mov.w	ip, #0
 8004b12:	f109 0514 	add.w	r5, r9, #20
 8004b16:	46d9      	mov	r9, fp
 8004b18:	6926      	ldr	r6, [r4, #16]
 8004b1a:	f104 0e14 	add.w	lr, r4, #20
 8004b1e:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8004b22:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8004b26:	9301      	str	r3, [sp, #4]
 8004b28:	9b01      	ldr	r3, [sp, #4]
 8004b2a:	f85e 0b04 	ldr.w	r0, [lr], #4
 8004b2e:	f853 af04 	ldr.w	sl, [r3, #4]!
 8004b32:	b281      	uxth	r1, r0
 8004b34:	9301      	str	r3, [sp, #4]
 8004b36:	fa1f f38a 	uxth.w	r3, sl
 8004b3a:	1a5b      	subs	r3, r3, r1
 8004b3c:	0c00      	lsrs	r0, r0, #16
 8004b3e:	4463      	add	r3, ip
 8004b40:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8004b44:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8004b48:	b29b      	uxth	r3, r3
 8004b4a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004b4e:	4576      	cmp	r6, lr
 8004b50:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004b54:	f849 3b04 	str.w	r3, [r9], #4
 8004b58:	d8e6      	bhi.n	8004b28 <__mdiff+0x88>
 8004b5a:	1b33      	subs	r3, r6, r4
 8004b5c:	3b15      	subs	r3, #21
 8004b5e:	f023 0303 	bic.w	r3, r3, #3
 8004b62:	3415      	adds	r4, #21
 8004b64:	3304      	adds	r3, #4
 8004b66:	42a6      	cmp	r6, r4
 8004b68:	bf38      	it	cc
 8004b6a:	2304      	movcc	r3, #4
 8004b6c:	441d      	add	r5, r3
 8004b6e:	445b      	add	r3, fp
 8004b70:	461e      	mov	r6, r3
 8004b72:	462c      	mov	r4, r5
 8004b74:	4544      	cmp	r4, r8
 8004b76:	d30e      	bcc.n	8004b96 <__mdiff+0xf6>
 8004b78:	f108 0103 	add.w	r1, r8, #3
 8004b7c:	1b49      	subs	r1, r1, r5
 8004b7e:	f021 0103 	bic.w	r1, r1, #3
 8004b82:	3d03      	subs	r5, #3
 8004b84:	45a8      	cmp	r8, r5
 8004b86:	bf38      	it	cc
 8004b88:	2100      	movcc	r1, #0
 8004b8a:	440b      	add	r3, r1
 8004b8c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004b90:	b199      	cbz	r1, 8004bba <__mdiff+0x11a>
 8004b92:	6117      	str	r7, [r2, #16]
 8004b94:	e79e      	b.n	8004ad4 <__mdiff+0x34>
 8004b96:	46e6      	mov	lr, ip
 8004b98:	f854 1b04 	ldr.w	r1, [r4], #4
 8004b9c:	fa1f fc81 	uxth.w	ip, r1
 8004ba0:	44f4      	add	ip, lr
 8004ba2:	0c08      	lsrs	r0, r1, #16
 8004ba4:	4471      	add	r1, lr
 8004ba6:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8004baa:	b289      	uxth	r1, r1
 8004bac:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8004bb0:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004bb4:	f846 1b04 	str.w	r1, [r6], #4
 8004bb8:	e7dc      	b.n	8004b74 <__mdiff+0xd4>
 8004bba:	3f01      	subs	r7, #1
 8004bbc:	e7e6      	b.n	8004b8c <__mdiff+0xec>
 8004bbe:	bf00      	nop
 8004bc0:	08006dc4 	.word	0x08006dc4
 8004bc4:	08006dd5 	.word	0x08006dd5

08004bc8 <__ulp>:
 8004bc8:	4b0e      	ldr	r3, [pc, #56]	@ (8004c04 <__ulp+0x3c>)
 8004bca:	400b      	ands	r3, r1
 8004bcc:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8004bd0:	2b00      	cmp	r3, #0
 8004bd2:	dc08      	bgt.n	8004be6 <__ulp+0x1e>
 8004bd4:	425b      	negs	r3, r3
 8004bd6:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8004bda:	ea4f 5223 	mov.w	r2, r3, asr #20
 8004bde:	da04      	bge.n	8004bea <__ulp+0x22>
 8004be0:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8004be4:	4113      	asrs	r3, r2
 8004be6:	2200      	movs	r2, #0
 8004be8:	e008      	b.n	8004bfc <__ulp+0x34>
 8004bea:	f1a2 0314 	sub.w	r3, r2, #20
 8004bee:	2b1e      	cmp	r3, #30
 8004bf0:	bfd6      	itet	le
 8004bf2:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8004bf6:	2201      	movgt	r2, #1
 8004bf8:	40da      	lsrle	r2, r3
 8004bfa:	2300      	movs	r3, #0
 8004bfc:	4619      	mov	r1, r3
 8004bfe:	4610      	mov	r0, r2
 8004c00:	4770      	bx	lr
 8004c02:	bf00      	nop
 8004c04:	7ff00000 	.word	0x7ff00000

08004c08 <__b2d>:
 8004c08:	6902      	ldr	r2, [r0, #16]
 8004c0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c0c:	f100 0614 	add.w	r6, r0, #20
 8004c10:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8004c14:	f852 4c04 	ldr.w	r4, [r2, #-4]
 8004c18:	4f1e      	ldr	r7, [pc, #120]	@ (8004c94 <__b2d+0x8c>)
 8004c1a:	4620      	mov	r0, r4
 8004c1c:	f7ff fd54 	bl	80046c8 <__hi0bits>
 8004c20:	4603      	mov	r3, r0
 8004c22:	f1c0 0020 	rsb	r0, r0, #32
 8004c26:	2b0a      	cmp	r3, #10
 8004c28:	f1a2 0504 	sub.w	r5, r2, #4
 8004c2c:	6008      	str	r0, [r1, #0]
 8004c2e:	dc12      	bgt.n	8004c56 <__b2d+0x4e>
 8004c30:	42ae      	cmp	r6, r5
 8004c32:	bf2c      	ite	cs
 8004c34:	2200      	movcs	r2, #0
 8004c36:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8004c3a:	f1c3 0c0b 	rsb	ip, r3, #11
 8004c3e:	3315      	adds	r3, #21
 8004c40:	fa24 fe0c 	lsr.w	lr, r4, ip
 8004c44:	fa04 f303 	lsl.w	r3, r4, r3
 8004c48:	fa22 f20c 	lsr.w	r2, r2, ip
 8004c4c:	ea4e 0107 	orr.w	r1, lr, r7
 8004c50:	431a      	orrs	r2, r3
 8004c52:	4610      	mov	r0, r2
 8004c54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004c56:	42ae      	cmp	r6, r5
 8004c58:	bf36      	itet	cc
 8004c5a:	f1a2 0508 	subcc.w	r5, r2, #8
 8004c5e:	2200      	movcs	r2, #0
 8004c60:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8004c64:	3b0b      	subs	r3, #11
 8004c66:	d012      	beq.n	8004c8e <__b2d+0x86>
 8004c68:	f1c3 0720 	rsb	r7, r3, #32
 8004c6c:	fa22 f107 	lsr.w	r1, r2, r7
 8004c70:	409c      	lsls	r4, r3
 8004c72:	430c      	orrs	r4, r1
 8004c74:	42b5      	cmp	r5, r6
 8004c76:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 8004c7a:	bf94      	ite	ls
 8004c7c:	2400      	movls	r4, #0
 8004c7e:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 8004c82:	409a      	lsls	r2, r3
 8004c84:	40fc      	lsrs	r4, r7
 8004c86:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 8004c8a:	4322      	orrs	r2, r4
 8004c8c:	e7e1      	b.n	8004c52 <__b2d+0x4a>
 8004c8e:	ea44 0107 	orr.w	r1, r4, r7
 8004c92:	e7de      	b.n	8004c52 <__b2d+0x4a>
 8004c94:	3ff00000 	.word	0x3ff00000

08004c98 <__d2b>:
 8004c98:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8004c9c:	2101      	movs	r1, #1
 8004c9e:	4690      	mov	r8, r2
 8004ca0:	4699      	mov	r9, r3
 8004ca2:	9e08      	ldr	r6, [sp, #32]
 8004ca4:	f7ff fc1e 	bl	80044e4 <_Balloc>
 8004ca8:	4604      	mov	r4, r0
 8004caa:	b930      	cbnz	r0, 8004cba <__d2b+0x22>
 8004cac:	4602      	mov	r2, r0
 8004cae:	f240 310f 	movw	r1, #783	@ 0x30f
 8004cb2:	4b23      	ldr	r3, [pc, #140]	@ (8004d40 <__d2b+0xa8>)
 8004cb4:	4823      	ldr	r0, [pc, #140]	@ (8004d44 <__d2b+0xac>)
 8004cb6:	f001 f989 	bl	8005fcc <__assert_func>
 8004cba:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8004cbe:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004cc2:	b10d      	cbz	r5, 8004cc8 <__d2b+0x30>
 8004cc4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004cc8:	9301      	str	r3, [sp, #4]
 8004cca:	f1b8 0300 	subs.w	r3, r8, #0
 8004cce:	d024      	beq.n	8004d1a <__d2b+0x82>
 8004cd0:	4668      	mov	r0, sp
 8004cd2:	9300      	str	r3, [sp, #0]
 8004cd4:	f7ff fd17 	bl	8004706 <__lo0bits>
 8004cd8:	e9dd 1200 	ldrd	r1, r2, [sp]
 8004cdc:	b1d8      	cbz	r0, 8004d16 <__d2b+0x7e>
 8004cde:	f1c0 0320 	rsb	r3, r0, #32
 8004ce2:	fa02 f303 	lsl.w	r3, r2, r3
 8004ce6:	430b      	orrs	r3, r1
 8004ce8:	40c2      	lsrs	r2, r0
 8004cea:	6163      	str	r3, [r4, #20]
 8004cec:	9201      	str	r2, [sp, #4]
 8004cee:	9b01      	ldr	r3, [sp, #4]
 8004cf0:	2b00      	cmp	r3, #0
 8004cf2:	bf0c      	ite	eq
 8004cf4:	2201      	moveq	r2, #1
 8004cf6:	2202      	movne	r2, #2
 8004cf8:	61a3      	str	r3, [r4, #24]
 8004cfa:	6122      	str	r2, [r4, #16]
 8004cfc:	b1ad      	cbz	r5, 8004d2a <__d2b+0x92>
 8004cfe:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8004d02:	4405      	add	r5, r0
 8004d04:	6035      	str	r5, [r6, #0]
 8004d06:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8004d0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004d0c:	6018      	str	r0, [r3, #0]
 8004d0e:	4620      	mov	r0, r4
 8004d10:	b002      	add	sp, #8
 8004d12:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8004d16:	6161      	str	r1, [r4, #20]
 8004d18:	e7e9      	b.n	8004cee <__d2b+0x56>
 8004d1a:	a801      	add	r0, sp, #4
 8004d1c:	f7ff fcf3 	bl	8004706 <__lo0bits>
 8004d20:	9b01      	ldr	r3, [sp, #4]
 8004d22:	2201      	movs	r2, #1
 8004d24:	6163      	str	r3, [r4, #20]
 8004d26:	3020      	adds	r0, #32
 8004d28:	e7e7      	b.n	8004cfa <__d2b+0x62>
 8004d2a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8004d2e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004d32:	6030      	str	r0, [r6, #0]
 8004d34:	6918      	ldr	r0, [r3, #16]
 8004d36:	f7ff fcc7 	bl	80046c8 <__hi0bits>
 8004d3a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8004d3e:	e7e4      	b.n	8004d0a <__d2b+0x72>
 8004d40:	08006dc4 	.word	0x08006dc4
 8004d44:	08006dd5 	.word	0x08006dd5

08004d48 <__ratio>:
 8004d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d4c:	b085      	sub	sp, #20
 8004d4e:	e9cd 1000 	strd	r1, r0, [sp]
 8004d52:	a902      	add	r1, sp, #8
 8004d54:	f7ff ff58 	bl	8004c08 <__b2d>
 8004d58:	468b      	mov	fp, r1
 8004d5a:	4606      	mov	r6, r0
 8004d5c:	460f      	mov	r7, r1
 8004d5e:	9800      	ldr	r0, [sp, #0]
 8004d60:	a903      	add	r1, sp, #12
 8004d62:	f7ff ff51 	bl	8004c08 <__b2d>
 8004d66:	460d      	mov	r5, r1
 8004d68:	9b01      	ldr	r3, [sp, #4]
 8004d6a:	4689      	mov	r9, r1
 8004d6c:	6919      	ldr	r1, [r3, #16]
 8004d6e:	9b00      	ldr	r3, [sp, #0]
 8004d70:	4604      	mov	r4, r0
 8004d72:	691b      	ldr	r3, [r3, #16]
 8004d74:	4630      	mov	r0, r6
 8004d76:	1ac9      	subs	r1, r1, r3
 8004d78:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8004d7c:	1a9b      	subs	r3, r3, r2
 8004d7e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8004d82:	2b00      	cmp	r3, #0
 8004d84:	bfcd      	iteet	gt
 8004d86:	463a      	movgt	r2, r7
 8004d88:	462a      	movle	r2, r5
 8004d8a:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004d8e:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 8004d92:	bfd8      	it	le
 8004d94:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8004d98:	464b      	mov	r3, r9
 8004d9a:	4622      	mov	r2, r4
 8004d9c:	4659      	mov	r1, fp
 8004d9e:	f7fb fcc5 	bl	800072c <__aeabi_ddiv>
 8004da2:	b005      	add	sp, #20
 8004da4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004da8 <__copybits>:
 8004da8:	3901      	subs	r1, #1
 8004daa:	b570      	push	{r4, r5, r6, lr}
 8004dac:	1149      	asrs	r1, r1, #5
 8004dae:	6914      	ldr	r4, [r2, #16]
 8004db0:	3101      	adds	r1, #1
 8004db2:	f102 0314 	add.w	r3, r2, #20
 8004db6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8004dba:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8004dbe:	1f05      	subs	r5, r0, #4
 8004dc0:	42a3      	cmp	r3, r4
 8004dc2:	d30c      	bcc.n	8004dde <__copybits+0x36>
 8004dc4:	1aa3      	subs	r3, r4, r2
 8004dc6:	3b11      	subs	r3, #17
 8004dc8:	f023 0303 	bic.w	r3, r3, #3
 8004dcc:	3211      	adds	r2, #17
 8004dce:	42a2      	cmp	r2, r4
 8004dd0:	bf88      	it	hi
 8004dd2:	2300      	movhi	r3, #0
 8004dd4:	4418      	add	r0, r3
 8004dd6:	2300      	movs	r3, #0
 8004dd8:	4288      	cmp	r0, r1
 8004dda:	d305      	bcc.n	8004de8 <__copybits+0x40>
 8004ddc:	bd70      	pop	{r4, r5, r6, pc}
 8004dde:	f853 6b04 	ldr.w	r6, [r3], #4
 8004de2:	f845 6f04 	str.w	r6, [r5, #4]!
 8004de6:	e7eb      	b.n	8004dc0 <__copybits+0x18>
 8004de8:	f840 3b04 	str.w	r3, [r0], #4
 8004dec:	e7f4      	b.n	8004dd8 <__copybits+0x30>

08004dee <__any_on>:
 8004dee:	f100 0214 	add.w	r2, r0, #20
 8004df2:	6900      	ldr	r0, [r0, #16]
 8004df4:	114b      	asrs	r3, r1, #5
 8004df6:	4298      	cmp	r0, r3
 8004df8:	b510      	push	{r4, lr}
 8004dfa:	db11      	blt.n	8004e20 <__any_on+0x32>
 8004dfc:	dd0a      	ble.n	8004e14 <__any_on+0x26>
 8004dfe:	f011 011f 	ands.w	r1, r1, #31
 8004e02:	d007      	beq.n	8004e14 <__any_on+0x26>
 8004e04:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004e08:	fa24 f001 	lsr.w	r0, r4, r1
 8004e0c:	fa00 f101 	lsl.w	r1, r0, r1
 8004e10:	428c      	cmp	r4, r1
 8004e12:	d10b      	bne.n	8004e2c <__any_on+0x3e>
 8004e14:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004e18:	4293      	cmp	r3, r2
 8004e1a:	d803      	bhi.n	8004e24 <__any_on+0x36>
 8004e1c:	2000      	movs	r0, #0
 8004e1e:	bd10      	pop	{r4, pc}
 8004e20:	4603      	mov	r3, r0
 8004e22:	e7f7      	b.n	8004e14 <__any_on+0x26>
 8004e24:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004e28:	2900      	cmp	r1, #0
 8004e2a:	d0f5      	beq.n	8004e18 <__any_on+0x2a>
 8004e2c:	2001      	movs	r0, #1
 8004e2e:	e7f6      	b.n	8004e1e <__any_on+0x30>

08004e30 <sulp>:
 8004e30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e34:	460f      	mov	r7, r1
 8004e36:	4690      	mov	r8, r2
 8004e38:	f7ff fec6 	bl	8004bc8 <__ulp>
 8004e3c:	4604      	mov	r4, r0
 8004e3e:	460d      	mov	r5, r1
 8004e40:	f1b8 0f00 	cmp.w	r8, #0
 8004e44:	d011      	beq.n	8004e6a <sulp+0x3a>
 8004e46:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8004e4a:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8004e4e:	2b00      	cmp	r3, #0
 8004e50:	dd0b      	ble.n	8004e6a <sulp+0x3a>
 8004e52:	2400      	movs	r4, #0
 8004e54:	051b      	lsls	r3, r3, #20
 8004e56:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8004e5a:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8004e5e:	4622      	mov	r2, r4
 8004e60:	462b      	mov	r3, r5
 8004e62:	f7fb fb39 	bl	80004d8 <__aeabi_dmul>
 8004e66:	4604      	mov	r4, r0
 8004e68:	460d      	mov	r5, r1
 8004e6a:	4620      	mov	r0, r4
 8004e6c:	4629      	mov	r1, r5
 8004e6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004e72:	0000      	movs	r0, r0
 8004e74:	0000      	movs	r0, r0
	...

08004e78 <_strtod_l>:
 8004e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e7c:	b09f      	sub	sp, #124	@ 0x7c
 8004e7e:	9217      	str	r2, [sp, #92]	@ 0x5c
 8004e80:	2200      	movs	r2, #0
 8004e82:	460c      	mov	r4, r1
 8004e84:	921a      	str	r2, [sp, #104]	@ 0x68
 8004e86:	f04f 0a00 	mov.w	sl, #0
 8004e8a:	f04f 0b00 	mov.w	fp, #0
 8004e8e:	460a      	mov	r2, r1
 8004e90:	9005      	str	r0, [sp, #20]
 8004e92:	9219      	str	r2, [sp, #100]	@ 0x64
 8004e94:	7811      	ldrb	r1, [r2, #0]
 8004e96:	292b      	cmp	r1, #43	@ 0x2b
 8004e98:	d048      	beq.n	8004f2c <_strtod_l+0xb4>
 8004e9a:	d836      	bhi.n	8004f0a <_strtod_l+0x92>
 8004e9c:	290d      	cmp	r1, #13
 8004e9e:	d830      	bhi.n	8004f02 <_strtod_l+0x8a>
 8004ea0:	2908      	cmp	r1, #8
 8004ea2:	d830      	bhi.n	8004f06 <_strtod_l+0x8e>
 8004ea4:	2900      	cmp	r1, #0
 8004ea6:	d039      	beq.n	8004f1c <_strtod_l+0xa4>
 8004ea8:	2200      	movs	r2, #0
 8004eaa:	920b      	str	r2, [sp, #44]	@ 0x2c
 8004eac:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8004eae:	782a      	ldrb	r2, [r5, #0]
 8004eb0:	2a30      	cmp	r2, #48	@ 0x30
 8004eb2:	f040 80b1 	bne.w	8005018 <_strtod_l+0x1a0>
 8004eb6:	786a      	ldrb	r2, [r5, #1]
 8004eb8:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004ebc:	2a58      	cmp	r2, #88	@ 0x58
 8004ebe:	d16c      	bne.n	8004f9a <_strtod_l+0x122>
 8004ec0:	9302      	str	r3, [sp, #8]
 8004ec2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004ec4:	4a8e      	ldr	r2, [pc, #568]	@ (8005100 <_strtod_l+0x288>)
 8004ec6:	9301      	str	r3, [sp, #4]
 8004ec8:	ab1a      	add	r3, sp, #104	@ 0x68
 8004eca:	9300      	str	r3, [sp, #0]
 8004ecc:	9805      	ldr	r0, [sp, #20]
 8004ece:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004ed0:	a919      	add	r1, sp, #100	@ 0x64
 8004ed2:	f001 f915 	bl	8006100 <__gethex>
 8004ed6:	f010 060f 	ands.w	r6, r0, #15
 8004eda:	4604      	mov	r4, r0
 8004edc:	d005      	beq.n	8004eea <_strtod_l+0x72>
 8004ede:	2e06      	cmp	r6, #6
 8004ee0:	d126      	bne.n	8004f30 <_strtod_l+0xb8>
 8004ee2:	2300      	movs	r3, #0
 8004ee4:	3501      	adds	r5, #1
 8004ee6:	9519      	str	r5, [sp, #100]	@ 0x64
 8004ee8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004eea:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004eec:	2b00      	cmp	r3, #0
 8004eee:	f040 8584 	bne.w	80059fa <_strtod_l+0xb82>
 8004ef2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004ef4:	b1bb      	cbz	r3, 8004f26 <_strtod_l+0xae>
 8004ef6:	4650      	mov	r0, sl
 8004ef8:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 8004efc:	b01f      	add	sp, #124	@ 0x7c
 8004efe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f02:	2920      	cmp	r1, #32
 8004f04:	d1d0      	bne.n	8004ea8 <_strtod_l+0x30>
 8004f06:	3201      	adds	r2, #1
 8004f08:	e7c3      	b.n	8004e92 <_strtod_l+0x1a>
 8004f0a:	292d      	cmp	r1, #45	@ 0x2d
 8004f0c:	d1cc      	bne.n	8004ea8 <_strtod_l+0x30>
 8004f0e:	2101      	movs	r1, #1
 8004f10:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004f12:	1c51      	adds	r1, r2, #1
 8004f14:	9119      	str	r1, [sp, #100]	@ 0x64
 8004f16:	7852      	ldrb	r2, [r2, #1]
 8004f18:	2a00      	cmp	r2, #0
 8004f1a:	d1c7      	bne.n	8004eac <_strtod_l+0x34>
 8004f1c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004f1e:	9419      	str	r4, [sp, #100]	@ 0x64
 8004f20:	2b00      	cmp	r3, #0
 8004f22:	f040 8568 	bne.w	80059f6 <_strtod_l+0xb7e>
 8004f26:	4650      	mov	r0, sl
 8004f28:	4659      	mov	r1, fp
 8004f2a:	e7e7      	b.n	8004efc <_strtod_l+0x84>
 8004f2c:	2100      	movs	r1, #0
 8004f2e:	e7ef      	b.n	8004f10 <_strtod_l+0x98>
 8004f30:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004f32:	b13a      	cbz	r2, 8004f44 <_strtod_l+0xcc>
 8004f34:	2135      	movs	r1, #53	@ 0x35
 8004f36:	a81c      	add	r0, sp, #112	@ 0x70
 8004f38:	f7ff ff36 	bl	8004da8 <__copybits>
 8004f3c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004f3e:	9805      	ldr	r0, [sp, #20]
 8004f40:	f7ff fb10 	bl	8004564 <_Bfree>
 8004f44:	3e01      	subs	r6, #1
 8004f46:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8004f48:	2e04      	cmp	r6, #4
 8004f4a:	d806      	bhi.n	8004f5a <_strtod_l+0xe2>
 8004f4c:	e8df f006 	tbb	[pc, r6]
 8004f50:	201d0314 	.word	0x201d0314
 8004f54:	14          	.byte	0x14
 8004f55:	00          	.byte	0x00
 8004f56:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8004f5a:	05e1      	lsls	r1, r4, #23
 8004f5c:	bf48      	it	mi
 8004f5e:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8004f62:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004f66:	0d1b      	lsrs	r3, r3, #20
 8004f68:	051b      	lsls	r3, r3, #20
 8004f6a:	2b00      	cmp	r3, #0
 8004f6c:	d1bd      	bne.n	8004eea <_strtod_l+0x72>
 8004f6e:	f7fe fb2b 	bl	80035c8 <__errno>
 8004f72:	2322      	movs	r3, #34	@ 0x22
 8004f74:	6003      	str	r3, [r0, #0]
 8004f76:	e7b8      	b.n	8004eea <_strtod_l+0x72>
 8004f78:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8004f7c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8004f80:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8004f84:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8004f88:	e7e7      	b.n	8004f5a <_strtod_l+0xe2>
 8004f8a:	f8df b178 	ldr.w	fp, [pc, #376]	@ 8005104 <_strtod_l+0x28c>
 8004f8e:	e7e4      	b.n	8004f5a <_strtod_l+0xe2>
 8004f90:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8004f94:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8004f98:	e7df      	b.n	8004f5a <_strtod_l+0xe2>
 8004f9a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004f9c:	1c5a      	adds	r2, r3, #1
 8004f9e:	9219      	str	r2, [sp, #100]	@ 0x64
 8004fa0:	785b      	ldrb	r3, [r3, #1]
 8004fa2:	2b30      	cmp	r3, #48	@ 0x30
 8004fa4:	d0f9      	beq.n	8004f9a <_strtod_l+0x122>
 8004fa6:	2b00      	cmp	r3, #0
 8004fa8:	d09f      	beq.n	8004eea <_strtod_l+0x72>
 8004faa:	2301      	movs	r3, #1
 8004fac:	9309      	str	r3, [sp, #36]	@ 0x24
 8004fae:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004fb0:	220a      	movs	r2, #10
 8004fb2:	930c      	str	r3, [sp, #48]	@ 0x30
 8004fb4:	2300      	movs	r3, #0
 8004fb6:	461f      	mov	r7, r3
 8004fb8:	9308      	str	r3, [sp, #32]
 8004fba:	930a      	str	r3, [sp, #40]	@ 0x28
 8004fbc:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8004fbe:	7805      	ldrb	r5, [r0, #0]
 8004fc0:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8004fc4:	b2d9      	uxtb	r1, r3
 8004fc6:	2909      	cmp	r1, #9
 8004fc8:	d928      	bls.n	800501c <_strtod_l+0x1a4>
 8004fca:	2201      	movs	r2, #1
 8004fcc:	494e      	ldr	r1, [pc, #312]	@ (8005108 <_strtod_l+0x290>)
 8004fce:	f000 ffc7 	bl	8005f60 <strncmp>
 8004fd2:	2800      	cmp	r0, #0
 8004fd4:	d032      	beq.n	800503c <_strtod_l+0x1c4>
 8004fd6:	2000      	movs	r0, #0
 8004fd8:	462a      	mov	r2, r5
 8004fda:	4681      	mov	r9, r0
 8004fdc:	463d      	mov	r5, r7
 8004fde:	4603      	mov	r3, r0
 8004fe0:	2a65      	cmp	r2, #101	@ 0x65
 8004fe2:	d001      	beq.n	8004fe8 <_strtod_l+0x170>
 8004fe4:	2a45      	cmp	r2, #69	@ 0x45
 8004fe6:	d114      	bne.n	8005012 <_strtod_l+0x19a>
 8004fe8:	b91d      	cbnz	r5, 8004ff2 <_strtod_l+0x17a>
 8004fea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004fec:	4302      	orrs	r2, r0
 8004fee:	d095      	beq.n	8004f1c <_strtod_l+0xa4>
 8004ff0:	2500      	movs	r5, #0
 8004ff2:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8004ff4:	1c62      	adds	r2, r4, #1
 8004ff6:	9219      	str	r2, [sp, #100]	@ 0x64
 8004ff8:	7862      	ldrb	r2, [r4, #1]
 8004ffa:	2a2b      	cmp	r2, #43	@ 0x2b
 8004ffc:	d077      	beq.n	80050ee <_strtod_l+0x276>
 8004ffe:	2a2d      	cmp	r2, #45	@ 0x2d
 8005000:	d07b      	beq.n	80050fa <_strtod_l+0x282>
 8005002:	f04f 0c00 	mov.w	ip, #0
 8005006:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 800500a:	2909      	cmp	r1, #9
 800500c:	f240 8082 	bls.w	8005114 <_strtod_l+0x29c>
 8005010:	9419      	str	r4, [sp, #100]	@ 0x64
 8005012:	f04f 0800 	mov.w	r8, #0
 8005016:	e0a2      	b.n	800515e <_strtod_l+0x2e6>
 8005018:	2300      	movs	r3, #0
 800501a:	e7c7      	b.n	8004fac <_strtod_l+0x134>
 800501c:	2f08      	cmp	r7, #8
 800501e:	bfd5      	itete	le
 8005020:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 8005022:	9908      	ldrgt	r1, [sp, #32]
 8005024:	fb02 3301 	mlale	r3, r2, r1, r3
 8005028:	fb02 3301 	mlagt	r3, r2, r1, r3
 800502c:	f100 0001 	add.w	r0, r0, #1
 8005030:	bfd4      	ite	le
 8005032:	930a      	strle	r3, [sp, #40]	@ 0x28
 8005034:	9308      	strgt	r3, [sp, #32]
 8005036:	3701      	adds	r7, #1
 8005038:	9019      	str	r0, [sp, #100]	@ 0x64
 800503a:	e7bf      	b.n	8004fbc <_strtod_l+0x144>
 800503c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800503e:	1c5a      	adds	r2, r3, #1
 8005040:	9219      	str	r2, [sp, #100]	@ 0x64
 8005042:	785a      	ldrb	r2, [r3, #1]
 8005044:	b37f      	cbz	r7, 80050a6 <_strtod_l+0x22e>
 8005046:	4681      	mov	r9, r0
 8005048:	463d      	mov	r5, r7
 800504a:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 800504e:	2b09      	cmp	r3, #9
 8005050:	d912      	bls.n	8005078 <_strtod_l+0x200>
 8005052:	2301      	movs	r3, #1
 8005054:	e7c4      	b.n	8004fe0 <_strtod_l+0x168>
 8005056:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005058:	3001      	adds	r0, #1
 800505a:	1c5a      	adds	r2, r3, #1
 800505c:	9219      	str	r2, [sp, #100]	@ 0x64
 800505e:	785a      	ldrb	r2, [r3, #1]
 8005060:	2a30      	cmp	r2, #48	@ 0x30
 8005062:	d0f8      	beq.n	8005056 <_strtod_l+0x1de>
 8005064:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8005068:	2b08      	cmp	r3, #8
 800506a:	f200 84cb 	bhi.w	8005a04 <_strtod_l+0xb8c>
 800506e:	4681      	mov	r9, r0
 8005070:	2000      	movs	r0, #0
 8005072:	4605      	mov	r5, r0
 8005074:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005076:	930c      	str	r3, [sp, #48]	@ 0x30
 8005078:	3a30      	subs	r2, #48	@ 0x30
 800507a:	f100 0301 	add.w	r3, r0, #1
 800507e:	d02a      	beq.n	80050d6 <_strtod_l+0x25e>
 8005080:	4499      	add	r9, r3
 8005082:	210a      	movs	r1, #10
 8005084:	462b      	mov	r3, r5
 8005086:	eb00 0c05 	add.w	ip, r0, r5
 800508a:	4563      	cmp	r3, ip
 800508c:	d10d      	bne.n	80050aa <_strtod_l+0x232>
 800508e:	1c69      	adds	r1, r5, #1
 8005090:	4401      	add	r1, r0
 8005092:	4428      	add	r0, r5
 8005094:	2808      	cmp	r0, #8
 8005096:	dc16      	bgt.n	80050c6 <_strtod_l+0x24e>
 8005098:	230a      	movs	r3, #10
 800509a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800509c:	fb03 2300 	mla	r3, r3, r0, r2
 80050a0:	930a      	str	r3, [sp, #40]	@ 0x28
 80050a2:	2300      	movs	r3, #0
 80050a4:	e018      	b.n	80050d8 <_strtod_l+0x260>
 80050a6:	4638      	mov	r0, r7
 80050a8:	e7da      	b.n	8005060 <_strtod_l+0x1e8>
 80050aa:	2b08      	cmp	r3, #8
 80050ac:	f103 0301 	add.w	r3, r3, #1
 80050b0:	dc03      	bgt.n	80050ba <_strtod_l+0x242>
 80050b2:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 80050b4:	434e      	muls	r6, r1
 80050b6:	960a      	str	r6, [sp, #40]	@ 0x28
 80050b8:	e7e7      	b.n	800508a <_strtod_l+0x212>
 80050ba:	2b10      	cmp	r3, #16
 80050bc:	bfde      	ittt	le
 80050be:	9e08      	ldrle	r6, [sp, #32]
 80050c0:	434e      	mulle	r6, r1
 80050c2:	9608      	strle	r6, [sp, #32]
 80050c4:	e7e1      	b.n	800508a <_strtod_l+0x212>
 80050c6:	280f      	cmp	r0, #15
 80050c8:	dceb      	bgt.n	80050a2 <_strtod_l+0x22a>
 80050ca:	230a      	movs	r3, #10
 80050cc:	9808      	ldr	r0, [sp, #32]
 80050ce:	fb03 2300 	mla	r3, r3, r0, r2
 80050d2:	9308      	str	r3, [sp, #32]
 80050d4:	e7e5      	b.n	80050a2 <_strtod_l+0x22a>
 80050d6:	4629      	mov	r1, r5
 80050d8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80050da:	460d      	mov	r5, r1
 80050dc:	1c50      	adds	r0, r2, #1
 80050de:	9019      	str	r0, [sp, #100]	@ 0x64
 80050e0:	7852      	ldrb	r2, [r2, #1]
 80050e2:	4618      	mov	r0, r3
 80050e4:	e7b1      	b.n	800504a <_strtod_l+0x1d2>
 80050e6:	f04f 0900 	mov.w	r9, #0
 80050ea:	2301      	movs	r3, #1
 80050ec:	e77d      	b.n	8004fea <_strtod_l+0x172>
 80050ee:	f04f 0c00 	mov.w	ip, #0
 80050f2:	1ca2      	adds	r2, r4, #2
 80050f4:	9219      	str	r2, [sp, #100]	@ 0x64
 80050f6:	78a2      	ldrb	r2, [r4, #2]
 80050f8:	e785      	b.n	8005006 <_strtod_l+0x18e>
 80050fa:	f04f 0c01 	mov.w	ip, #1
 80050fe:	e7f8      	b.n	80050f2 <_strtod_l+0x27a>
 8005100:	08006f48 	.word	0x08006f48
 8005104:	7ff00000 	.word	0x7ff00000
 8005108:	08006f30 	.word	0x08006f30
 800510c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800510e:	1c51      	adds	r1, r2, #1
 8005110:	9119      	str	r1, [sp, #100]	@ 0x64
 8005112:	7852      	ldrb	r2, [r2, #1]
 8005114:	2a30      	cmp	r2, #48	@ 0x30
 8005116:	d0f9      	beq.n	800510c <_strtod_l+0x294>
 8005118:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 800511c:	2908      	cmp	r1, #8
 800511e:	f63f af78 	bhi.w	8005012 <_strtod_l+0x19a>
 8005122:	f04f 080a 	mov.w	r8, #10
 8005126:	3a30      	subs	r2, #48	@ 0x30
 8005128:	920e      	str	r2, [sp, #56]	@ 0x38
 800512a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800512c:	920f      	str	r2, [sp, #60]	@ 0x3c
 800512e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8005130:	1c56      	adds	r6, r2, #1
 8005132:	9619      	str	r6, [sp, #100]	@ 0x64
 8005134:	7852      	ldrb	r2, [r2, #1]
 8005136:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 800513a:	f1be 0f09 	cmp.w	lr, #9
 800513e:	d939      	bls.n	80051b4 <_strtod_l+0x33c>
 8005140:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8005142:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8005146:	1a76      	subs	r6, r6, r1
 8005148:	2e08      	cmp	r6, #8
 800514a:	dc03      	bgt.n	8005154 <_strtod_l+0x2dc>
 800514c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800514e:	4588      	cmp	r8, r1
 8005150:	bfa8      	it	ge
 8005152:	4688      	movge	r8, r1
 8005154:	f1bc 0f00 	cmp.w	ip, #0
 8005158:	d001      	beq.n	800515e <_strtod_l+0x2e6>
 800515a:	f1c8 0800 	rsb	r8, r8, #0
 800515e:	2d00      	cmp	r5, #0
 8005160:	d14e      	bne.n	8005200 <_strtod_l+0x388>
 8005162:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005164:	4308      	orrs	r0, r1
 8005166:	f47f aec0 	bne.w	8004eea <_strtod_l+0x72>
 800516a:	2b00      	cmp	r3, #0
 800516c:	f47f aed6 	bne.w	8004f1c <_strtod_l+0xa4>
 8005170:	2a69      	cmp	r2, #105	@ 0x69
 8005172:	d028      	beq.n	80051c6 <_strtod_l+0x34e>
 8005174:	dc25      	bgt.n	80051c2 <_strtod_l+0x34a>
 8005176:	2a49      	cmp	r2, #73	@ 0x49
 8005178:	d025      	beq.n	80051c6 <_strtod_l+0x34e>
 800517a:	2a4e      	cmp	r2, #78	@ 0x4e
 800517c:	f47f aece 	bne.w	8004f1c <_strtod_l+0xa4>
 8005180:	499a      	ldr	r1, [pc, #616]	@ (80053ec <_strtod_l+0x574>)
 8005182:	a819      	add	r0, sp, #100	@ 0x64
 8005184:	f001 f9de 	bl	8006544 <__match>
 8005188:	2800      	cmp	r0, #0
 800518a:	f43f aec7 	beq.w	8004f1c <_strtod_l+0xa4>
 800518e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005190:	781b      	ldrb	r3, [r3, #0]
 8005192:	2b28      	cmp	r3, #40	@ 0x28
 8005194:	d12e      	bne.n	80051f4 <_strtod_l+0x37c>
 8005196:	4996      	ldr	r1, [pc, #600]	@ (80053f0 <_strtod_l+0x578>)
 8005198:	aa1c      	add	r2, sp, #112	@ 0x70
 800519a:	a819      	add	r0, sp, #100	@ 0x64
 800519c:	f001 f9e6 	bl	800656c <__hexnan>
 80051a0:	2805      	cmp	r0, #5
 80051a2:	d127      	bne.n	80051f4 <_strtod_l+0x37c>
 80051a4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80051a6:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 80051aa:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 80051ae:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 80051b2:	e69a      	b.n	8004eea <_strtod_l+0x72>
 80051b4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80051b6:	fb08 2101 	mla	r1, r8, r1, r2
 80051ba:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 80051be:	920e      	str	r2, [sp, #56]	@ 0x38
 80051c0:	e7b5      	b.n	800512e <_strtod_l+0x2b6>
 80051c2:	2a6e      	cmp	r2, #110	@ 0x6e
 80051c4:	e7da      	b.n	800517c <_strtod_l+0x304>
 80051c6:	498b      	ldr	r1, [pc, #556]	@ (80053f4 <_strtod_l+0x57c>)
 80051c8:	a819      	add	r0, sp, #100	@ 0x64
 80051ca:	f001 f9bb 	bl	8006544 <__match>
 80051ce:	2800      	cmp	r0, #0
 80051d0:	f43f aea4 	beq.w	8004f1c <_strtod_l+0xa4>
 80051d4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80051d6:	4988      	ldr	r1, [pc, #544]	@ (80053f8 <_strtod_l+0x580>)
 80051d8:	3b01      	subs	r3, #1
 80051da:	a819      	add	r0, sp, #100	@ 0x64
 80051dc:	9319      	str	r3, [sp, #100]	@ 0x64
 80051de:	f001 f9b1 	bl	8006544 <__match>
 80051e2:	b910      	cbnz	r0, 80051ea <_strtod_l+0x372>
 80051e4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80051e6:	3301      	adds	r3, #1
 80051e8:	9319      	str	r3, [sp, #100]	@ 0x64
 80051ea:	f04f 0a00 	mov.w	sl, #0
 80051ee:	f8df b20c 	ldr.w	fp, [pc, #524]	@ 80053fc <_strtod_l+0x584>
 80051f2:	e67a      	b.n	8004eea <_strtod_l+0x72>
 80051f4:	4882      	ldr	r0, [pc, #520]	@ (8005400 <_strtod_l+0x588>)
 80051f6:	f000 fee3 	bl	8005fc0 <nan>
 80051fa:	4682      	mov	sl, r0
 80051fc:	468b      	mov	fp, r1
 80051fe:	e674      	b.n	8004eea <_strtod_l+0x72>
 8005200:	eba8 0309 	sub.w	r3, r8, r9
 8005204:	2f00      	cmp	r7, #0
 8005206:	bf08      	it	eq
 8005208:	462f      	moveq	r7, r5
 800520a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800520c:	2d10      	cmp	r5, #16
 800520e:	462c      	mov	r4, r5
 8005210:	9309      	str	r3, [sp, #36]	@ 0x24
 8005212:	bfa8      	it	ge
 8005214:	2410      	movge	r4, #16
 8005216:	f7fb f8e5 	bl	80003e4 <__aeabi_ui2d>
 800521a:	2d09      	cmp	r5, #9
 800521c:	4682      	mov	sl, r0
 800521e:	468b      	mov	fp, r1
 8005220:	dc11      	bgt.n	8005246 <_strtod_l+0x3ce>
 8005222:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005224:	2b00      	cmp	r3, #0
 8005226:	f43f ae60 	beq.w	8004eea <_strtod_l+0x72>
 800522a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800522c:	dd76      	ble.n	800531c <_strtod_l+0x4a4>
 800522e:	2b16      	cmp	r3, #22
 8005230:	dc5d      	bgt.n	80052ee <_strtod_l+0x476>
 8005232:	4974      	ldr	r1, [pc, #464]	@ (8005404 <_strtod_l+0x58c>)
 8005234:	4652      	mov	r2, sl
 8005236:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800523a:	465b      	mov	r3, fp
 800523c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005240:	f7fb f94a 	bl	80004d8 <__aeabi_dmul>
 8005244:	e7d9      	b.n	80051fa <_strtod_l+0x382>
 8005246:	4b6f      	ldr	r3, [pc, #444]	@ (8005404 <_strtod_l+0x58c>)
 8005248:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800524c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8005250:	f7fb f942 	bl	80004d8 <__aeabi_dmul>
 8005254:	4682      	mov	sl, r0
 8005256:	9808      	ldr	r0, [sp, #32]
 8005258:	468b      	mov	fp, r1
 800525a:	f7fb f8c3 	bl	80003e4 <__aeabi_ui2d>
 800525e:	4602      	mov	r2, r0
 8005260:	460b      	mov	r3, r1
 8005262:	4650      	mov	r0, sl
 8005264:	4659      	mov	r1, fp
 8005266:	f7fa ff81 	bl	800016c <__adddf3>
 800526a:	2d0f      	cmp	r5, #15
 800526c:	4682      	mov	sl, r0
 800526e:	468b      	mov	fp, r1
 8005270:	ddd7      	ble.n	8005222 <_strtod_l+0x3aa>
 8005272:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005274:	1b2c      	subs	r4, r5, r4
 8005276:	441c      	add	r4, r3
 8005278:	2c00      	cmp	r4, #0
 800527a:	f340 8096 	ble.w	80053aa <_strtod_l+0x532>
 800527e:	f014 030f 	ands.w	r3, r4, #15
 8005282:	d00a      	beq.n	800529a <_strtod_l+0x422>
 8005284:	495f      	ldr	r1, [pc, #380]	@ (8005404 <_strtod_l+0x58c>)
 8005286:	4652      	mov	r2, sl
 8005288:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800528c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005290:	465b      	mov	r3, fp
 8005292:	f7fb f921 	bl	80004d8 <__aeabi_dmul>
 8005296:	4682      	mov	sl, r0
 8005298:	468b      	mov	fp, r1
 800529a:	f034 040f 	bics.w	r4, r4, #15
 800529e:	d073      	beq.n	8005388 <_strtod_l+0x510>
 80052a0:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 80052a4:	dd48      	ble.n	8005338 <_strtod_l+0x4c0>
 80052a6:	2400      	movs	r4, #0
 80052a8:	46a0      	mov	r8, r4
 80052aa:	46a1      	mov	r9, r4
 80052ac:	940a      	str	r4, [sp, #40]	@ 0x28
 80052ae:	2322      	movs	r3, #34	@ 0x22
 80052b0:	f04f 0a00 	mov.w	sl, #0
 80052b4:	9a05      	ldr	r2, [sp, #20]
 80052b6:	f8df b144 	ldr.w	fp, [pc, #324]	@ 80053fc <_strtod_l+0x584>
 80052ba:	6013      	str	r3, [r2, #0]
 80052bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80052be:	2b00      	cmp	r3, #0
 80052c0:	f43f ae13 	beq.w	8004eea <_strtod_l+0x72>
 80052c4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80052c6:	9805      	ldr	r0, [sp, #20]
 80052c8:	f7ff f94c 	bl	8004564 <_Bfree>
 80052cc:	4649      	mov	r1, r9
 80052ce:	9805      	ldr	r0, [sp, #20]
 80052d0:	f7ff f948 	bl	8004564 <_Bfree>
 80052d4:	4641      	mov	r1, r8
 80052d6:	9805      	ldr	r0, [sp, #20]
 80052d8:	f7ff f944 	bl	8004564 <_Bfree>
 80052dc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80052de:	9805      	ldr	r0, [sp, #20]
 80052e0:	f7ff f940 	bl	8004564 <_Bfree>
 80052e4:	4621      	mov	r1, r4
 80052e6:	9805      	ldr	r0, [sp, #20]
 80052e8:	f7ff f93c 	bl	8004564 <_Bfree>
 80052ec:	e5fd      	b.n	8004eea <_strtod_l+0x72>
 80052ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80052f0:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 80052f4:	4293      	cmp	r3, r2
 80052f6:	dbbc      	blt.n	8005272 <_strtod_l+0x3fa>
 80052f8:	4c42      	ldr	r4, [pc, #264]	@ (8005404 <_strtod_l+0x58c>)
 80052fa:	f1c5 050f 	rsb	r5, r5, #15
 80052fe:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8005302:	4652      	mov	r2, sl
 8005304:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005308:	465b      	mov	r3, fp
 800530a:	f7fb f8e5 	bl	80004d8 <__aeabi_dmul>
 800530e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005310:	1b5d      	subs	r5, r3, r5
 8005312:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8005316:	e9d4 2300 	ldrd	r2, r3, [r4]
 800531a:	e791      	b.n	8005240 <_strtod_l+0x3c8>
 800531c:	3316      	adds	r3, #22
 800531e:	dba8      	blt.n	8005272 <_strtod_l+0x3fa>
 8005320:	4b38      	ldr	r3, [pc, #224]	@ (8005404 <_strtod_l+0x58c>)
 8005322:	eba9 0808 	sub.w	r8, r9, r8
 8005326:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 800532a:	4650      	mov	r0, sl
 800532c:	e9d8 2300 	ldrd	r2, r3, [r8]
 8005330:	4659      	mov	r1, fp
 8005332:	f7fb f9fb 	bl	800072c <__aeabi_ddiv>
 8005336:	e760      	b.n	80051fa <_strtod_l+0x382>
 8005338:	4b33      	ldr	r3, [pc, #204]	@ (8005408 <_strtod_l+0x590>)
 800533a:	4650      	mov	r0, sl
 800533c:	9308      	str	r3, [sp, #32]
 800533e:	2300      	movs	r3, #0
 8005340:	4659      	mov	r1, fp
 8005342:	461e      	mov	r6, r3
 8005344:	1124      	asrs	r4, r4, #4
 8005346:	2c01      	cmp	r4, #1
 8005348:	dc21      	bgt.n	800538e <_strtod_l+0x516>
 800534a:	b10b      	cbz	r3, 8005350 <_strtod_l+0x4d8>
 800534c:	4682      	mov	sl, r0
 800534e:	468b      	mov	fp, r1
 8005350:	492d      	ldr	r1, [pc, #180]	@ (8005408 <_strtod_l+0x590>)
 8005352:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8005356:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800535a:	4652      	mov	r2, sl
 800535c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005360:	465b      	mov	r3, fp
 8005362:	f7fb f8b9 	bl	80004d8 <__aeabi_dmul>
 8005366:	4b25      	ldr	r3, [pc, #148]	@ (80053fc <_strtod_l+0x584>)
 8005368:	460a      	mov	r2, r1
 800536a:	400b      	ands	r3, r1
 800536c:	4927      	ldr	r1, [pc, #156]	@ (800540c <_strtod_l+0x594>)
 800536e:	4682      	mov	sl, r0
 8005370:	428b      	cmp	r3, r1
 8005372:	d898      	bhi.n	80052a6 <_strtod_l+0x42e>
 8005374:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8005378:	428b      	cmp	r3, r1
 800537a:	bf86      	itte	hi
 800537c:	f04f 3aff 	movhi.w	sl, #4294967295	@ 0xffffffff
 8005380:	f8df b08c 	ldrhi.w	fp, [pc, #140]	@ 8005410 <_strtod_l+0x598>
 8005384:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8005388:	2300      	movs	r3, #0
 800538a:	9308      	str	r3, [sp, #32]
 800538c:	e07a      	b.n	8005484 <_strtod_l+0x60c>
 800538e:	07e2      	lsls	r2, r4, #31
 8005390:	d505      	bpl.n	800539e <_strtod_l+0x526>
 8005392:	9b08      	ldr	r3, [sp, #32]
 8005394:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005398:	f7fb f89e 	bl	80004d8 <__aeabi_dmul>
 800539c:	2301      	movs	r3, #1
 800539e:	9a08      	ldr	r2, [sp, #32]
 80053a0:	3601      	adds	r6, #1
 80053a2:	3208      	adds	r2, #8
 80053a4:	1064      	asrs	r4, r4, #1
 80053a6:	9208      	str	r2, [sp, #32]
 80053a8:	e7cd      	b.n	8005346 <_strtod_l+0x4ce>
 80053aa:	d0ed      	beq.n	8005388 <_strtod_l+0x510>
 80053ac:	4264      	negs	r4, r4
 80053ae:	f014 020f 	ands.w	r2, r4, #15
 80053b2:	d00a      	beq.n	80053ca <_strtod_l+0x552>
 80053b4:	4b13      	ldr	r3, [pc, #76]	@ (8005404 <_strtod_l+0x58c>)
 80053b6:	4650      	mov	r0, sl
 80053b8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80053bc:	4659      	mov	r1, fp
 80053be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053c2:	f7fb f9b3 	bl	800072c <__aeabi_ddiv>
 80053c6:	4682      	mov	sl, r0
 80053c8:	468b      	mov	fp, r1
 80053ca:	1124      	asrs	r4, r4, #4
 80053cc:	d0dc      	beq.n	8005388 <_strtod_l+0x510>
 80053ce:	2c1f      	cmp	r4, #31
 80053d0:	dd20      	ble.n	8005414 <_strtod_l+0x59c>
 80053d2:	2400      	movs	r4, #0
 80053d4:	46a0      	mov	r8, r4
 80053d6:	46a1      	mov	r9, r4
 80053d8:	940a      	str	r4, [sp, #40]	@ 0x28
 80053da:	2322      	movs	r3, #34	@ 0x22
 80053dc:	9a05      	ldr	r2, [sp, #20]
 80053de:	f04f 0a00 	mov.w	sl, #0
 80053e2:	f04f 0b00 	mov.w	fp, #0
 80053e6:	6013      	str	r3, [r2, #0]
 80053e8:	e768      	b.n	80052bc <_strtod_l+0x444>
 80053ea:	bf00      	nop
 80053ec:	08006d1c 	.word	0x08006d1c
 80053f0:	08006f34 	.word	0x08006f34
 80053f4:	08006d14 	.word	0x08006d14
 80053f8:	08006d4b 	.word	0x08006d4b
 80053fc:	7ff00000 	.word	0x7ff00000
 8005400:	08006ce4 	.word	0x08006ce4
 8005404:	08006e68 	.word	0x08006e68
 8005408:	08006e40 	.word	0x08006e40
 800540c:	7ca00000 	.word	0x7ca00000
 8005410:	7fefffff 	.word	0x7fefffff
 8005414:	f014 0310 	ands.w	r3, r4, #16
 8005418:	bf18      	it	ne
 800541a:	236a      	movne	r3, #106	@ 0x6a
 800541c:	4650      	mov	r0, sl
 800541e:	9308      	str	r3, [sp, #32]
 8005420:	4659      	mov	r1, fp
 8005422:	2300      	movs	r3, #0
 8005424:	4ea9      	ldr	r6, [pc, #676]	@ (80056cc <_strtod_l+0x854>)
 8005426:	07e2      	lsls	r2, r4, #31
 8005428:	d504      	bpl.n	8005434 <_strtod_l+0x5bc>
 800542a:	e9d6 2300 	ldrd	r2, r3, [r6]
 800542e:	f7fb f853 	bl	80004d8 <__aeabi_dmul>
 8005432:	2301      	movs	r3, #1
 8005434:	1064      	asrs	r4, r4, #1
 8005436:	f106 0608 	add.w	r6, r6, #8
 800543a:	d1f4      	bne.n	8005426 <_strtod_l+0x5ae>
 800543c:	b10b      	cbz	r3, 8005442 <_strtod_l+0x5ca>
 800543e:	4682      	mov	sl, r0
 8005440:	468b      	mov	fp, r1
 8005442:	9b08      	ldr	r3, [sp, #32]
 8005444:	b1b3      	cbz	r3, 8005474 <_strtod_l+0x5fc>
 8005446:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800544a:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 800544e:	2b00      	cmp	r3, #0
 8005450:	4659      	mov	r1, fp
 8005452:	dd0f      	ble.n	8005474 <_strtod_l+0x5fc>
 8005454:	2b1f      	cmp	r3, #31
 8005456:	dd57      	ble.n	8005508 <_strtod_l+0x690>
 8005458:	2b34      	cmp	r3, #52	@ 0x34
 800545a:	bfd8      	it	le
 800545c:	f04f 33ff 	movle.w	r3, #4294967295	@ 0xffffffff
 8005460:	f04f 0a00 	mov.w	sl, #0
 8005464:	bfcf      	iteee	gt
 8005466:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 800546a:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800546e:	4093      	lslle	r3, r2
 8005470:	ea03 0b01 	andle.w	fp, r3, r1
 8005474:	2200      	movs	r2, #0
 8005476:	2300      	movs	r3, #0
 8005478:	4650      	mov	r0, sl
 800547a:	4659      	mov	r1, fp
 800547c:	f7fb fa94 	bl	80009a8 <__aeabi_dcmpeq>
 8005480:	2800      	cmp	r0, #0
 8005482:	d1a6      	bne.n	80053d2 <_strtod_l+0x55a>
 8005484:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005486:	463a      	mov	r2, r7
 8005488:	9300      	str	r3, [sp, #0]
 800548a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800548c:	462b      	mov	r3, r5
 800548e:	9805      	ldr	r0, [sp, #20]
 8005490:	f7ff f8d0 	bl	8004634 <__s2b>
 8005494:	900a      	str	r0, [sp, #40]	@ 0x28
 8005496:	2800      	cmp	r0, #0
 8005498:	f43f af05 	beq.w	80052a6 <_strtod_l+0x42e>
 800549c:	2400      	movs	r4, #0
 800549e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80054a0:	eba9 0308 	sub.w	r3, r9, r8
 80054a4:	2a00      	cmp	r2, #0
 80054a6:	bfa8      	it	ge
 80054a8:	2300      	movge	r3, #0
 80054aa:	46a0      	mov	r8, r4
 80054ac:	9312      	str	r3, [sp, #72]	@ 0x48
 80054ae:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 80054b2:	9316      	str	r3, [sp, #88]	@ 0x58
 80054b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80054b6:	9805      	ldr	r0, [sp, #20]
 80054b8:	6859      	ldr	r1, [r3, #4]
 80054ba:	f7ff f813 	bl	80044e4 <_Balloc>
 80054be:	4681      	mov	r9, r0
 80054c0:	2800      	cmp	r0, #0
 80054c2:	f43f aef4 	beq.w	80052ae <_strtod_l+0x436>
 80054c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80054c8:	300c      	adds	r0, #12
 80054ca:	691a      	ldr	r2, [r3, #16]
 80054cc:	f103 010c 	add.w	r1, r3, #12
 80054d0:	3202      	adds	r2, #2
 80054d2:	0092      	lsls	r2, r2, #2
 80054d4:	f000 fd66 	bl	8005fa4 <memcpy>
 80054d8:	ab1c      	add	r3, sp, #112	@ 0x70
 80054da:	9301      	str	r3, [sp, #4]
 80054dc:	ab1b      	add	r3, sp, #108	@ 0x6c
 80054de:	9300      	str	r3, [sp, #0]
 80054e0:	4652      	mov	r2, sl
 80054e2:	465b      	mov	r3, fp
 80054e4:	9805      	ldr	r0, [sp, #20]
 80054e6:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 80054ea:	f7ff fbd5 	bl	8004c98 <__d2b>
 80054ee:	901a      	str	r0, [sp, #104]	@ 0x68
 80054f0:	2800      	cmp	r0, #0
 80054f2:	f43f aedc 	beq.w	80052ae <_strtod_l+0x436>
 80054f6:	2101      	movs	r1, #1
 80054f8:	9805      	ldr	r0, [sp, #20]
 80054fa:	f7ff f931 	bl	8004760 <__i2b>
 80054fe:	4680      	mov	r8, r0
 8005500:	b948      	cbnz	r0, 8005516 <_strtod_l+0x69e>
 8005502:	f04f 0800 	mov.w	r8, #0
 8005506:	e6d2      	b.n	80052ae <_strtod_l+0x436>
 8005508:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800550c:	fa02 f303 	lsl.w	r3, r2, r3
 8005510:	ea03 0a0a 	and.w	sl, r3, sl
 8005514:	e7ae      	b.n	8005474 <_strtod_l+0x5fc>
 8005516:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8005518:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800551a:	2d00      	cmp	r5, #0
 800551c:	bfab      	itete	ge
 800551e:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 8005520:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 8005522:	18ef      	addge	r7, r5, r3
 8005524:	1b5e      	sublt	r6, r3, r5
 8005526:	9b08      	ldr	r3, [sp, #32]
 8005528:	bfa8      	it	ge
 800552a:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 800552c:	eba5 0503 	sub.w	r5, r5, r3
 8005530:	4415      	add	r5, r2
 8005532:	4b67      	ldr	r3, [pc, #412]	@ (80056d0 <_strtod_l+0x858>)
 8005534:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 8005538:	bfb8      	it	lt
 800553a:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 800553c:	429d      	cmp	r5, r3
 800553e:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8005542:	da50      	bge.n	80055e6 <_strtod_l+0x76e>
 8005544:	1b5b      	subs	r3, r3, r5
 8005546:	2b1f      	cmp	r3, #31
 8005548:	f04f 0101 	mov.w	r1, #1
 800554c:	eba2 0203 	sub.w	r2, r2, r3
 8005550:	dc3d      	bgt.n	80055ce <_strtod_l+0x756>
 8005552:	fa01 f303 	lsl.w	r3, r1, r3
 8005556:	9313      	str	r3, [sp, #76]	@ 0x4c
 8005558:	2300      	movs	r3, #0
 800555a:	9310      	str	r3, [sp, #64]	@ 0x40
 800555c:	18bd      	adds	r5, r7, r2
 800555e:	9b08      	ldr	r3, [sp, #32]
 8005560:	42af      	cmp	r7, r5
 8005562:	4416      	add	r6, r2
 8005564:	441e      	add	r6, r3
 8005566:	463b      	mov	r3, r7
 8005568:	bfa8      	it	ge
 800556a:	462b      	movge	r3, r5
 800556c:	42b3      	cmp	r3, r6
 800556e:	bfa8      	it	ge
 8005570:	4633      	movge	r3, r6
 8005572:	2b00      	cmp	r3, #0
 8005574:	bfc2      	ittt	gt
 8005576:	1aed      	subgt	r5, r5, r3
 8005578:	1af6      	subgt	r6, r6, r3
 800557a:	1aff      	subgt	r7, r7, r3
 800557c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800557e:	2b00      	cmp	r3, #0
 8005580:	dd16      	ble.n	80055b0 <_strtod_l+0x738>
 8005582:	4641      	mov	r1, r8
 8005584:	461a      	mov	r2, r3
 8005586:	9805      	ldr	r0, [sp, #20]
 8005588:	f7ff f9a8 	bl	80048dc <__pow5mult>
 800558c:	4680      	mov	r8, r0
 800558e:	2800      	cmp	r0, #0
 8005590:	d0b7      	beq.n	8005502 <_strtod_l+0x68a>
 8005592:	4601      	mov	r1, r0
 8005594:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8005596:	9805      	ldr	r0, [sp, #20]
 8005598:	f7ff f8f8 	bl	800478c <__multiply>
 800559c:	900e      	str	r0, [sp, #56]	@ 0x38
 800559e:	2800      	cmp	r0, #0
 80055a0:	f43f ae85 	beq.w	80052ae <_strtod_l+0x436>
 80055a4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80055a6:	9805      	ldr	r0, [sp, #20]
 80055a8:	f7fe ffdc 	bl	8004564 <_Bfree>
 80055ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80055ae:	931a      	str	r3, [sp, #104]	@ 0x68
 80055b0:	2d00      	cmp	r5, #0
 80055b2:	dc1d      	bgt.n	80055f0 <_strtod_l+0x778>
 80055b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80055b6:	2b00      	cmp	r3, #0
 80055b8:	dd23      	ble.n	8005602 <_strtod_l+0x78a>
 80055ba:	4649      	mov	r1, r9
 80055bc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80055be:	9805      	ldr	r0, [sp, #20]
 80055c0:	f7ff f98c 	bl	80048dc <__pow5mult>
 80055c4:	4681      	mov	r9, r0
 80055c6:	b9e0      	cbnz	r0, 8005602 <_strtod_l+0x78a>
 80055c8:	f04f 0900 	mov.w	r9, #0
 80055cc:	e66f      	b.n	80052ae <_strtod_l+0x436>
 80055ce:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 80055d2:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 80055d6:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 80055da:	35e2      	adds	r5, #226	@ 0xe2
 80055dc:	fa01 f305 	lsl.w	r3, r1, r5
 80055e0:	9310      	str	r3, [sp, #64]	@ 0x40
 80055e2:	9113      	str	r1, [sp, #76]	@ 0x4c
 80055e4:	e7ba      	b.n	800555c <_strtod_l+0x6e4>
 80055e6:	2300      	movs	r3, #0
 80055e8:	9310      	str	r3, [sp, #64]	@ 0x40
 80055ea:	2301      	movs	r3, #1
 80055ec:	9313      	str	r3, [sp, #76]	@ 0x4c
 80055ee:	e7b5      	b.n	800555c <_strtod_l+0x6e4>
 80055f0:	462a      	mov	r2, r5
 80055f2:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80055f4:	9805      	ldr	r0, [sp, #20]
 80055f6:	f7ff f9cb 	bl	8004990 <__lshift>
 80055fa:	901a      	str	r0, [sp, #104]	@ 0x68
 80055fc:	2800      	cmp	r0, #0
 80055fe:	d1d9      	bne.n	80055b4 <_strtod_l+0x73c>
 8005600:	e655      	b.n	80052ae <_strtod_l+0x436>
 8005602:	2e00      	cmp	r6, #0
 8005604:	dd07      	ble.n	8005616 <_strtod_l+0x79e>
 8005606:	4649      	mov	r1, r9
 8005608:	4632      	mov	r2, r6
 800560a:	9805      	ldr	r0, [sp, #20]
 800560c:	f7ff f9c0 	bl	8004990 <__lshift>
 8005610:	4681      	mov	r9, r0
 8005612:	2800      	cmp	r0, #0
 8005614:	d0d8      	beq.n	80055c8 <_strtod_l+0x750>
 8005616:	2f00      	cmp	r7, #0
 8005618:	dd08      	ble.n	800562c <_strtod_l+0x7b4>
 800561a:	4641      	mov	r1, r8
 800561c:	463a      	mov	r2, r7
 800561e:	9805      	ldr	r0, [sp, #20]
 8005620:	f7ff f9b6 	bl	8004990 <__lshift>
 8005624:	4680      	mov	r8, r0
 8005626:	2800      	cmp	r0, #0
 8005628:	f43f ae41 	beq.w	80052ae <_strtod_l+0x436>
 800562c:	464a      	mov	r2, r9
 800562e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005630:	9805      	ldr	r0, [sp, #20]
 8005632:	f7ff fa35 	bl	8004aa0 <__mdiff>
 8005636:	4604      	mov	r4, r0
 8005638:	2800      	cmp	r0, #0
 800563a:	f43f ae38 	beq.w	80052ae <_strtod_l+0x436>
 800563e:	68c3      	ldr	r3, [r0, #12]
 8005640:	4641      	mov	r1, r8
 8005642:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005644:	2300      	movs	r3, #0
 8005646:	60c3      	str	r3, [r0, #12]
 8005648:	f7ff fa0e 	bl	8004a68 <__mcmp>
 800564c:	2800      	cmp	r0, #0
 800564e:	da45      	bge.n	80056dc <_strtod_l+0x864>
 8005650:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005652:	ea53 030a 	orrs.w	r3, r3, sl
 8005656:	d16b      	bne.n	8005730 <_strtod_l+0x8b8>
 8005658:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800565c:	2b00      	cmp	r3, #0
 800565e:	d167      	bne.n	8005730 <_strtod_l+0x8b8>
 8005660:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005664:	0d1b      	lsrs	r3, r3, #20
 8005666:	051b      	lsls	r3, r3, #20
 8005668:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800566c:	d960      	bls.n	8005730 <_strtod_l+0x8b8>
 800566e:	6963      	ldr	r3, [r4, #20]
 8005670:	b913      	cbnz	r3, 8005678 <_strtod_l+0x800>
 8005672:	6923      	ldr	r3, [r4, #16]
 8005674:	2b01      	cmp	r3, #1
 8005676:	dd5b      	ble.n	8005730 <_strtod_l+0x8b8>
 8005678:	4621      	mov	r1, r4
 800567a:	2201      	movs	r2, #1
 800567c:	9805      	ldr	r0, [sp, #20]
 800567e:	f7ff f987 	bl	8004990 <__lshift>
 8005682:	4641      	mov	r1, r8
 8005684:	4604      	mov	r4, r0
 8005686:	f7ff f9ef 	bl	8004a68 <__mcmp>
 800568a:	2800      	cmp	r0, #0
 800568c:	dd50      	ble.n	8005730 <_strtod_l+0x8b8>
 800568e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005692:	9a08      	ldr	r2, [sp, #32]
 8005694:	0d1b      	lsrs	r3, r3, #20
 8005696:	051b      	lsls	r3, r3, #20
 8005698:	2a00      	cmp	r2, #0
 800569a:	d06a      	beq.n	8005772 <_strtod_l+0x8fa>
 800569c:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80056a0:	d867      	bhi.n	8005772 <_strtod_l+0x8fa>
 80056a2:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 80056a6:	f67f ae98 	bls.w	80053da <_strtod_l+0x562>
 80056aa:	4650      	mov	r0, sl
 80056ac:	4659      	mov	r1, fp
 80056ae:	4b09      	ldr	r3, [pc, #36]	@ (80056d4 <_strtod_l+0x85c>)
 80056b0:	2200      	movs	r2, #0
 80056b2:	f7fa ff11 	bl	80004d8 <__aeabi_dmul>
 80056b6:	4b08      	ldr	r3, [pc, #32]	@ (80056d8 <_strtod_l+0x860>)
 80056b8:	4682      	mov	sl, r0
 80056ba:	400b      	ands	r3, r1
 80056bc:	468b      	mov	fp, r1
 80056be:	2b00      	cmp	r3, #0
 80056c0:	f47f ae00 	bne.w	80052c4 <_strtod_l+0x44c>
 80056c4:	2322      	movs	r3, #34	@ 0x22
 80056c6:	9a05      	ldr	r2, [sp, #20]
 80056c8:	6013      	str	r3, [r2, #0]
 80056ca:	e5fb      	b.n	80052c4 <_strtod_l+0x44c>
 80056cc:	08006f60 	.word	0x08006f60
 80056d0:	fffffc02 	.word	0xfffffc02
 80056d4:	39500000 	.word	0x39500000
 80056d8:	7ff00000 	.word	0x7ff00000
 80056dc:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 80056e0:	d165      	bne.n	80057ae <_strtod_l+0x936>
 80056e2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80056e4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80056e8:	b35a      	cbz	r2, 8005742 <_strtod_l+0x8ca>
 80056ea:	4a99      	ldr	r2, [pc, #612]	@ (8005950 <_strtod_l+0xad8>)
 80056ec:	4293      	cmp	r3, r2
 80056ee:	d12b      	bne.n	8005748 <_strtod_l+0x8d0>
 80056f0:	9b08      	ldr	r3, [sp, #32]
 80056f2:	4651      	mov	r1, sl
 80056f4:	b303      	cbz	r3, 8005738 <_strtod_l+0x8c0>
 80056f6:	465a      	mov	r2, fp
 80056f8:	4b96      	ldr	r3, [pc, #600]	@ (8005954 <_strtod_l+0xadc>)
 80056fa:	4013      	ands	r3, r2
 80056fc:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8005700:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005704:	d81b      	bhi.n	800573e <_strtod_l+0x8c6>
 8005706:	0d1b      	lsrs	r3, r3, #20
 8005708:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800570c:	fa02 f303 	lsl.w	r3, r2, r3
 8005710:	4299      	cmp	r1, r3
 8005712:	d119      	bne.n	8005748 <_strtod_l+0x8d0>
 8005714:	4b90      	ldr	r3, [pc, #576]	@ (8005958 <_strtod_l+0xae0>)
 8005716:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005718:	429a      	cmp	r2, r3
 800571a:	d102      	bne.n	8005722 <_strtod_l+0x8aa>
 800571c:	3101      	adds	r1, #1
 800571e:	f43f adc6 	beq.w	80052ae <_strtod_l+0x436>
 8005722:	f04f 0a00 	mov.w	sl, #0
 8005726:	4b8b      	ldr	r3, [pc, #556]	@ (8005954 <_strtod_l+0xadc>)
 8005728:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800572a:	401a      	ands	r2, r3
 800572c:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 8005730:	9b08      	ldr	r3, [sp, #32]
 8005732:	2b00      	cmp	r3, #0
 8005734:	d1b9      	bne.n	80056aa <_strtod_l+0x832>
 8005736:	e5c5      	b.n	80052c4 <_strtod_l+0x44c>
 8005738:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800573c:	e7e8      	b.n	8005710 <_strtod_l+0x898>
 800573e:	4613      	mov	r3, r2
 8005740:	e7e6      	b.n	8005710 <_strtod_l+0x898>
 8005742:	ea53 030a 	orrs.w	r3, r3, sl
 8005746:	d0a2      	beq.n	800568e <_strtod_l+0x816>
 8005748:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800574a:	b1db      	cbz	r3, 8005784 <_strtod_l+0x90c>
 800574c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800574e:	4213      	tst	r3, r2
 8005750:	d0ee      	beq.n	8005730 <_strtod_l+0x8b8>
 8005752:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005754:	4650      	mov	r0, sl
 8005756:	4659      	mov	r1, fp
 8005758:	9a08      	ldr	r2, [sp, #32]
 800575a:	b1bb      	cbz	r3, 800578c <_strtod_l+0x914>
 800575c:	f7ff fb68 	bl	8004e30 <sulp>
 8005760:	4602      	mov	r2, r0
 8005762:	460b      	mov	r3, r1
 8005764:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005768:	f7fa fd00 	bl	800016c <__adddf3>
 800576c:	4682      	mov	sl, r0
 800576e:	468b      	mov	fp, r1
 8005770:	e7de      	b.n	8005730 <_strtod_l+0x8b8>
 8005772:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8005776:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800577a:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 800577e:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8005782:	e7d5      	b.n	8005730 <_strtod_l+0x8b8>
 8005784:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005786:	ea13 0f0a 	tst.w	r3, sl
 800578a:	e7e1      	b.n	8005750 <_strtod_l+0x8d8>
 800578c:	f7ff fb50 	bl	8004e30 <sulp>
 8005790:	4602      	mov	r2, r0
 8005792:	460b      	mov	r3, r1
 8005794:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005798:	f7fa fce6 	bl	8000168 <__aeabi_dsub>
 800579c:	2200      	movs	r2, #0
 800579e:	2300      	movs	r3, #0
 80057a0:	4682      	mov	sl, r0
 80057a2:	468b      	mov	fp, r1
 80057a4:	f7fb f900 	bl	80009a8 <__aeabi_dcmpeq>
 80057a8:	2800      	cmp	r0, #0
 80057aa:	d0c1      	beq.n	8005730 <_strtod_l+0x8b8>
 80057ac:	e615      	b.n	80053da <_strtod_l+0x562>
 80057ae:	4641      	mov	r1, r8
 80057b0:	4620      	mov	r0, r4
 80057b2:	f7ff fac9 	bl	8004d48 <__ratio>
 80057b6:	2200      	movs	r2, #0
 80057b8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80057bc:	4606      	mov	r6, r0
 80057be:	460f      	mov	r7, r1
 80057c0:	f7fb f906 	bl	80009d0 <__aeabi_dcmple>
 80057c4:	2800      	cmp	r0, #0
 80057c6:	d06d      	beq.n	80058a4 <_strtod_l+0xa2c>
 80057c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80057ca:	2b00      	cmp	r3, #0
 80057cc:	d178      	bne.n	80058c0 <_strtod_l+0xa48>
 80057ce:	f1ba 0f00 	cmp.w	sl, #0
 80057d2:	d156      	bne.n	8005882 <_strtod_l+0xa0a>
 80057d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80057d6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80057da:	2b00      	cmp	r3, #0
 80057dc:	d158      	bne.n	8005890 <_strtod_l+0xa18>
 80057de:	2200      	movs	r2, #0
 80057e0:	4630      	mov	r0, r6
 80057e2:	4639      	mov	r1, r7
 80057e4:	4b5d      	ldr	r3, [pc, #372]	@ (800595c <_strtod_l+0xae4>)
 80057e6:	f7fb f8e9 	bl	80009bc <__aeabi_dcmplt>
 80057ea:	2800      	cmp	r0, #0
 80057ec:	d157      	bne.n	800589e <_strtod_l+0xa26>
 80057ee:	4630      	mov	r0, r6
 80057f0:	4639      	mov	r1, r7
 80057f2:	2200      	movs	r2, #0
 80057f4:	4b5a      	ldr	r3, [pc, #360]	@ (8005960 <_strtod_l+0xae8>)
 80057f6:	f7fa fe6f 	bl	80004d8 <__aeabi_dmul>
 80057fa:	4606      	mov	r6, r0
 80057fc:	460f      	mov	r7, r1
 80057fe:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 8005802:	9606      	str	r6, [sp, #24]
 8005804:	9307      	str	r3, [sp, #28]
 8005806:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800580a:	4d52      	ldr	r5, [pc, #328]	@ (8005954 <_strtod_l+0xadc>)
 800580c:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8005810:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005812:	401d      	ands	r5, r3
 8005814:	4b53      	ldr	r3, [pc, #332]	@ (8005964 <_strtod_l+0xaec>)
 8005816:	429d      	cmp	r5, r3
 8005818:	f040 80aa 	bne.w	8005970 <_strtod_l+0xaf8>
 800581c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800581e:	4650      	mov	r0, sl
 8005820:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 8005824:	4659      	mov	r1, fp
 8005826:	f7ff f9cf 	bl	8004bc8 <__ulp>
 800582a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800582e:	f7fa fe53 	bl	80004d8 <__aeabi_dmul>
 8005832:	4652      	mov	r2, sl
 8005834:	465b      	mov	r3, fp
 8005836:	f7fa fc99 	bl	800016c <__adddf3>
 800583a:	460b      	mov	r3, r1
 800583c:	4945      	ldr	r1, [pc, #276]	@ (8005954 <_strtod_l+0xadc>)
 800583e:	4a4a      	ldr	r2, [pc, #296]	@ (8005968 <_strtod_l+0xaf0>)
 8005840:	4019      	ands	r1, r3
 8005842:	4291      	cmp	r1, r2
 8005844:	4682      	mov	sl, r0
 8005846:	d942      	bls.n	80058ce <_strtod_l+0xa56>
 8005848:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800584a:	4b43      	ldr	r3, [pc, #268]	@ (8005958 <_strtod_l+0xae0>)
 800584c:	429a      	cmp	r2, r3
 800584e:	d103      	bne.n	8005858 <_strtod_l+0x9e0>
 8005850:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005852:	3301      	adds	r3, #1
 8005854:	f43f ad2b 	beq.w	80052ae <_strtod_l+0x436>
 8005858:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 800585c:	f8df b0f8 	ldr.w	fp, [pc, #248]	@ 8005958 <_strtod_l+0xae0>
 8005860:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005862:	9805      	ldr	r0, [sp, #20]
 8005864:	f7fe fe7e 	bl	8004564 <_Bfree>
 8005868:	4649      	mov	r1, r9
 800586a:	9805      	ldr	r0, [sp, #20]
 800586c:	f7fe fe7a 	bl	8004564 <_Bfree>
 8005870:	4641      	mov	r1, r8
 8005872:	9805      	ldr	r0, [sp, #20]
 8005874:	f7fe fe76 	bl	8004564 <_Bfree>
 8005878:	4621      	mov	r1, r4
 800587a:	9805      	ldr	r0, [sp, #20]
 800587c:	f7fe fe72 	bl	8004564 <_Bfree>
 8005880:	e618      	b.n	80054b4 <_strtod_l+0x63c>
 8005882:	f1ba 0f01 	cmp.w	sl, #1
 8005886:	d103      	bne.n	8005890 <_strtod_l+0xa18>
 8005888:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800588a:	2b00      	cmp	r3, #0
 800588c:	f43f ada5 	beq.w	80053da <_strtod_l+0x562>
 8005890:	2200      	movs	r2, #0
 8005892:	4b36      	ldr	r3, [pc, #216]	@ (800596c <_strtod_l+0xaf4>)
 8005894:	2600      	movs	r6, #0
 8005896:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800589a:	4f30      	ldr	r7, [pc, #192]	@ (800595c <_strtod_l+0xae4>)
 800589c:	e7b3      	b.n	8005806 <_strtod_l+0x98e>
 800589e:	2600      	movs	r6, #0
 80058a0:	4f2f      	ldr	r7, [pc, #188]	@ (8005960 <_strtod_l+0xae8>)
 80058a2:	e7ac      	b.n	80057fe <_strtod_l+0x986>
 80058a4:	4630      	mov	r0, r6
 80058a6:	4639      	mov	r1, r7
 80058a8:	4b2d      	ldr	r3, [pc, #180]	@ (8005960 <_strtod_l+0xae8>)
 80058aa:	2200      	movs	r2, #0
 80058ac:	f7fa fe14 	bl	80004d8 <__aeabi_dmul>
 80058b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80058b2:	4606      	mov	r6, r0
 80058b4:	460f      	mov	r7, r1
 80058b6:	2b00      	cmp	r3, #0
 80058b8:	d0a1      	beq.n	80057fe <_strtod_l+0x986>
 80058ba:	e9cd 6706 	strd	r6, r7, [sp, #24]
 80058be:	e7a2      	b.n	8005806 <_strtod_l+0x98e>
 80058c0:	2200      	movs	r2, #0
 80058c2:	4b26      	ldr	r3, [pc, #152]	@ (800595c <_strtod_l+0xae4>)
 80058c4:	4616      	mov	r6, r2
 80058c6:	461f      	mov	r7, r3
 80058c8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80058cc:	e79b      	b.n	8005806 <_strtod_l+0x98e>
 80058ce:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 80058d2:	9b08      	ldr	r3, [sp, #32]
 80058d4:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 80058d8:	2b00      	cmp	r3, #0
 80058da:	d1c1      	bne.n	8005860 <_strtod_l+0x9e8>
 80058dc:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80058e0:	0d1b      	lsrs	r3, r3, #20
 80058e2:	051b      	lsls	r3, r3, #20
 80058e4:	429d      	cmp	r5, r3
 80058e6:	d1bb      	bne.n	8005860 <_strtod_l+0x9e8>
 80058e8:	4630      	mov	r0, r6
 80058ea:	4639      	mov	r1, r7
 80058ec:	f7fb fb9a 	bl	8001024 <__aeabi_d2lz>
 80058f0:	f7fa fdc4 	bl	800047c <__aeabi_l2d>
 80058f4:	4602      	mov	r2, r0
 80058f6:	460b      	mov	r3, r1
 80058f8:	4630      	mov	r0, r6
 80058fa:	4639      	mov	r1, r7
 80058fc:	f7fa fc34 	bl	8000168 <__aeabi_dsub>
 8005900:	460b      	mov	r3, r1
 8005902:	4602      	mov	r2, r0
 8005904:	f3cb 0613 	ubfx	r6, fp, #0, #20
 8005908:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800590c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800590e:	ea46 060a 	orr.w	r6, r6, sl
 8005912:	431e      	orrs	r6, r3
 8005914:	d069      	beq.n	80059ea <_strtod_l+0xb72>
 8005916:	a30a      	add	r3, pc, #40	@ (adr r3, 8005940 <_strtod_l+0xac8>)
 8005918:	e9d3 2300 	ldrd	r2, r3, [r3]
 800591c:	f7fb f84e 	bl	80009bc <__aeabi_dcmplt>
 8005920:	2800      	cmp	r0, #0
 8005922:	f47f accf 	bne.w	80052c4 <_strtod_l+0x44c>
 8005926:	a308      	add	r3, pc, #32	@ (adr r3, 8005948 <_strtod_l+0xad0>)
 8005928:	e9d3 2300 	ldrd	r2, r3, [r3]
 800592c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005930:	f7fb f862 	bl	80009f8 <__aeabi_dcmpgt>
 8005934:	2800      	cmp	r0, #0
 8005936:	d093      	beq.n	8005860 <_strtod_l+0x9e8>
 8005938:	e4c4      	b.n	80052c4 <_strtod_l+0x44c>
 800593a:	bf00      	nop
 800593c:	f3af 8000 	nop.w
 8005940:	94a03595 	.word	0x94a03595
 8005944:	3fdfffff 	.word	0x3fdfffff
 8005948:	35afe535 	.word	0x35afe535
 800594c:	3fe00000 	.word	0x3fe00000
 8005950:	000fffff 	.word	0x000fffff
 8005954:	7ff00000 	.word	0x7ff00000
 8005958:	7fefffff 	.word	0x7fefffff
 800595c:	3ff00000 	.word	0x3ff00000
 8005960:	3fe00000 	.word	0x3fe00000
 8005964:	7fe00000 	.word	0x7fe00000
 8005968:	7c9fffff 	.word	0x7c9fffff
 800596c:	bff00000 	.word	0xbff00000
 8005970:	9b08      	ldr	r3, [sp, #32]
 8005972:	b323      	cbz	r3, 80059be <_strtod_l+0xb46>
 8005974:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8005978:	d821      	bhi.n	80059be <_strtod_l+0xb46>
 800597a:	a327      	add	r3, pc, #156	@ (adr r3, 8005a18 <_strtod_l+0xba0>)
 800597c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005980:	4630      	mov	r0, r6
 8005982:	4639      	mov	r1, r7
 8005984:	f7fb f824 	bl	80009d0 <__aeabi_dcmple>
 8005988:	b1a0      	cbz	r0, 80059b4 <_strtod_l+0xb3c>
 800598a:	4639      	mov	r1, r7
 800598c:	4630      	mov	r0, r6
 800598e:	f7fb f87b 	bl	8000a88 <__aeabi_d2uiz>
 8005992:	2801      	cmp	r0, #1
 8005994:	bf38      	it	cc
 8005996:	2001      	movcc	r0, #1
 8005998:	f7fa fd24 	bl	80003e4 <__aeabi_ui2d>
 800599c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800599e:	4606      	mov	r6, r0
 80059a0:	460f      	mov	r7, r1
 80059a2:	b9fb      	cbnz	r3, 80059e4 <_strtod_l+0xb6c>
 80059a4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80059a8:	9014      	str	r0, [sp, #80]	@ 0x50
 80059aa:	9315      	str	r3, [sp, #84]	@ 0x54
 80059ac:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 80059b0:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80059b4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80059b6:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 80059ba:	1b5b      	subs	r3, r3, r5
 80059bc:	9311      	str	r3, [sp, #68]	@ 0x44
 80059be:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80059c2:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 80059c6:	f7ff f8ff 	bl	8004bc8 <__ulp>
 80059ca:	4602      	mov	r2, r0
 80059cc:	460b      	mov	r3, r1
 80059ce:	4650      	mov	r0, sl
 80059d0:	4659      	mov	r1, fp
 80059d2:	f7fa fd81 	bl	80004d8 <__aeabi_dmul>
 80059d6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80059da:	f7fa fbc7 	bl	800016c <__adddf3>
 80059de:	4682      	mov	sl, r0
 80059e0:	468b      	mov	fp, r1
 80059e2:	e776      	b.n	80058d2 <_strtod_l+0xa5a>
 80059e4:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 80059e8:	e7e0      	b.n	80059ac <_strtod_l+0xb34>
 80059ea:	a30d      	add	r3, pc, #52	@ (adr r3, 8005a20 <_strtod_l+0xba8>)
 80059ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80059f0:	f7fa ffe4 	bl	80009bc <__aeabi_dcmplt>
 80059f4:	e79e      	b.n	8005934 <_strtod_l+0xabc>
 80059f6:	2300      	movs	r3, #0
 80059f8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80059fa:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80059fc:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80059fe:	6013      	str	r3, [r2, #0]
 8005a00:	f7ff ba77 	b.w	8004ef2 <_strtod_l+0x7a>
 8005a04:	2a65      	cmp	r2, #101	@ 0x65
 8005a06:	f43f ab6e 	beq.w	80050e6 <_strtod_l+0x26e>
 8005a0a:	2a45      	cmp	r2, #69	@ 0x45
 8005a0c:	f43f ab6b 	beq.w	80050e6 <_strtod_l+0x26e>
 8005a10:	2301      	movs	r3, #1
 8005a12:	f7ff bba6 	b.w	8005162 <_strtod_l+0x2ea>
 8005a16:	bf00      	nop
 8005a18:	ffc00000 	.word	0xffc00000
 8005a1c:	41dfffff 	.word	0x41dfffff
 8005a20:	94a03595 	.word	0x94a03595
 8005a24:	3fcfffff 	.word	0x3fcfffff

08005a28 <_strtod_r>:
 8005a28:	4b01      	ldr	r3, [pc, #4]	@ (8005a30 <_strtod_r+0x8>)
 8005a2a:	f7ff ba25 	b.w	8004e78 <_strtod_l>
 8005a2e:	bf00      	nop
 8005a30:	20000068 	.word	0x20000068

08005a34 <_strtol_l.constprop.0>:
 8005a34:	2b24      	cmp	r3, #36	@ 0x24
 8005a36:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a3a:	4686      	mov	lr, r0
 8005a3c:	4690      	mov	r8, r2
 8005a3e:	d801      	bhi.n	8005a44 <_strtol_l.constprop.0+0x10>
 8005a40:	2b01      	cmp	r3, #1
 8005a42:	d106      	bne.n	8005a52 <_strtol_l.constprop.0+0x1e>
 8005a44:	f7fd fdc0 	bl	80035c8 <__errno>
 8005a48:	2316      	movs	r3, #22
 8005a4a:	6003      	str	r3, [r0, #0]
 8005a4c:	2000      	movs	r0, #0
 8005a4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a52:	460d      	mov	r5, r1
 8005a54:	4833      	ldr	r0, [pc, #204]	@ (8005b24 <_strtol_l.constprop.0+0xf0>)
 8005a56:	462a      	mov	r2, r5
 8005a58:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005a5c:	5d06      	ldrb	r6, [r0, r4]
 8005a5e:	f016 0608 	ands.w	r6, r6, #8
 8005a62:	d1f8      	bne.n	8005a56 <_strtol_l.constprop.0+0x22>
 8005a64:	2c2d      	cmp	r4, #45	@ 0x2d
 8005a66:	d12d      	bne.n	8005ac4 <_strtol_l.constprop.0+0x90>
 8005a68:	2601      	movs	r6, #1
 8005a6a:	782c      	ldrb	r4, [r5, #0]
 8005a6c:	1c95      	adds	r5, r2, #2
 8005a6e:	f033 0210 	bics.w	r2, r3, #16
 8005a72:	d109      	bne.n	8005a88 <_strtol_l.constprop.0+0x54>
 8005a74:	2c30      	cmp	r4, #48	@ 0x30
 8005a76:	d12a      	bne.n	8005ace <_strtol_l.constprop.0+0x9a>
 8005a78:	782a      	ldrb	r2, [r5, #0]
 8005a7a:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8005a7e:	2a58      	cmp	r2, #88	@ 0x58
 8005a80:	d125      	bne.n	8005ace <_strtol_l.constprop.0+0x9a>
 8005a82:	2310      	movs	r3, #16
 8005a84:	786c      	ldrb	r4, [r5, #1]
 8005a86:	3502      	adds	r5, #2
 8005a88:	2200      	movs	r2, #0
 8005a8a:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8005a8e:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8005a92:	fbbc f9f3 	udiv	r9, ip, r3
 8005a96:	4610      	mov	r0, r2
 8005a98:	fb03 ca19 	mls	sl, r3, r9, ip
 8005a9c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8005aa0:	2f09      	cmp	r7, #9
 8005aa2:	d81b      	bhi.n	8005adc <_strtol_l.constprop.0+0xa8>
 8005aa4:	463c      	mov	r4, r7
 8005aa6:	42a3      	cmp	r3, r4
 8005aa8:	dd27      	ble.n	8005afa <_strtol_l.constprop.0+0xc6>
 8005aaa:	1c57      	adds	r7, r2, #1
 8005aac:	d007      	beq.n	8005abe <_strtol_l.constprop.0+0x8a>
 8005aae:	4581      	cmp	r9, r0
 8005ab0:	d320      	bcc.n	8005af4 <_strtol_l.constprop.0+0xc0>
 8005ab2:	d101      	bne.n	8005ab8 <_strtol_l.constprop.0+0x84>
 8005ab4:	45a2      	cmp	sl, r4
 8005ab6:	db1d      	blt.n	8005af4 <_strtol_l.constprop.0+0xc0>
 8005ab8:	2201      	movs	r2, #1
 8005aba:	fb00 4003 	mla	r0, r0, r3, r4
 8005abe:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005ac2:	e7eb      	b.n	8005a9c <_strtol_l.constprop.0+0x68>
 8005ac4:	2c2b      	cmp	r4, #43	@ 0x2b
 8005ac6:	bf04      	itt	eq
 8005ac8:	782c      	ldrbeq	r4, [r5, #0]
 8005aca:	1c95      	addeq	r5, r2, #2
 8005acc:	e7cf      	b.n	8005a6e <_strtol_l.constprop.0+0x3a>
 8005ace:	2b00      	cmp	r3, #0
 8005ad0:	d1da      	bne.n	8005a88 <_strtol_l.constprop.0+0x54>
 8005ad2:	2c30      	cmp	r4, #48	@ 0x30
 8005ad4:	bf0c      	ite	eq
 8005ad6:	2308      	moveq	r3, #8
 8005ad8:	230a      	movne	r3, #10
 8005ada:	e7d5      	b.n	8005a88 <_strtol_l.constprop.0+0x54>
 8005adc:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8005ae0:	2f19      	cmp	r7, #25
 8005ae2:	d801      	bhi.n	8005ae8 <_strtol_l.constprop.0+0xb4>
 8005ae4:	3c37      	subs	r4, #55	@ 0x37
 8005ae6:	e7de      	b.n	8005aa6 <_strtol_l.constprop.0+0x72>
 8005ae8:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8005aec:	2f19      	cmp	r7, #25
 8005aee:	d804      	bhi.n	8005afa <_strtol_l.constprop.0+0xc6>
 8005af0:	3c57      	subs	r4, #87	@ 0x57
 8005af2:	e7d8      	b.n	8005aa6 <_strtol_l.constprop.0+0x72>
 8005af4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005af8:	e7e1      	b.n	8005abe <_strtol_l.constprop.0+0x8a>
 8005afa:	1c53      	adds	r3, r2, #1
 8005afc:	d108      	bne.n	8005b10 <_strtol_l.constprop.0+0xdc>
 8005afe:	2322      	movs	r3, #34	@ 0x22
 8005b00:	4660      	mov	r0, ip
 8005b02:	f8ce 3000 	str.w	r3, [lr]
 8005b06:	f1b8 0f00 	cmp.w	r8, #0
 8005b0a:	d0a0      	beq.n	8005a4e <_strtol_l.constprop.0+0x1a>
 8005b0c:	1e69      	subs	r1, r5, #1
 8005b0e:	e006      	b.n	8005b1e <_strtol_l.constprop.0+0xea>
 8005b10:	b106      	cbz	r6, 8005b14 <_strtol_l.constprop.0+0xe0>
 8005b12:	4240      	negs	r0, r0
 8005b14:	f1b8 0f00 	cmp.w	r8, #0
 8005b18:	d099      	beq.n	8005a4e <_strtol_l.constprop.0+0x1a>
 8005b1a:	2a00      	cmp	r2, #0
 8005b1c:	d1f6      	bne.n	8005b0c <_strtol_l.constprop.0+0xd8>
 8005b1e:	f8c8 1000 	str.w	r1, [r8]
 8005b22:	e794      	b.n	8005a4e <_strtol_l.constprop.0+0x1a>
 8005b24:	08006f89 	.word	0x08006f89

08005b28 <_strtol_r>:
 8005b28:	f7ff bf84 	b.w	8005a34 <_strtol_l.constprop.0>

08005b2c <__ssputs_r>:
 8005b2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b30:	461f      	mov	r7, r3
 8005b32:	688e      	ldr	r6, [r1, #8]
 8005b34:	4682      	mov	sl, r0
 8005b36:	42be      	cmp	r6, r7
 8005b38:	460c      	mov	r4, r1
 8005b3a:	4690      	mov	r8, r2
 8005b3c:	680b      	ldr	r3, [r1, #0]
 8005b3e:	d82d      	bhi.n	8005b9c <__ssputs_r+0x70>
 8005b40:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005b44:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8005b48:	d026      	beq.n	8005b98 <__ssputs_r+0x6c>
 8005b4a:	6965      	ldr	r5, [r4, #20]
 8005b4c:	6909      	ldr	r1, [r1, #16]
 8005b4e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005b52:	eba3 0901 	sub.w	r9, r3, r1
 8005b56:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005b5a:	1c7b      	adds	r3, r7, #1
 8005b5c:	444b      	add	r3, r9
 8005b5e:	106d      	asrs	r5, r5, #1
 8005b60:	429d      	cmp	r5, r3
 8005b62:	bf38      	it	cc
 8005b64:	461d      	movcc	r5, r3
 8005b66:	0553      	lsls	r3, r2, #21
 8005b68:	d527      	bpl.n	8005bba <__ssputs_r+0x8e>
 8005b6a:	4629      	mov	r1, r5
 8005b6c:	f7fe fc2e 	bl	80043cc <_malloc_r>
 8005b70:	4606      	mov	r6, r0
 8005b72:	b360      	cbz	r0, 8005bce <__ssputs_r+0xa2>
 8005b74:	464a      	mov	r2, r9
 8005b76:	6921      	ldr	r1, [r4, #16]
 8005b78:	f000 fa14 	bl	8005fa4 <memcpy>
 8005b7c:	89a3      	ldrh	r3, [r4, #12]
 8005b7e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8005b82:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005b86:	81a3      	strh	r3, [r4, #12]
 8005b88:	6126      	str	r6, [r4, #16]
 8005b8a:	444e      	add	r6, r9
 8005b8c:	6026      	str	r6, [r4, #0]
 8005b8e:	463e      	mov	r6, r7
 8005b90:	6165      	str	r5, [r4, #20]
 8005b92:	eba5 0509 	sub.w	r5, r5, r9
 8005b96:	60a5      	str	r5, [r4, #8]
 8005b98:	42be      	cmp	r6, r7
 8005b9a:	d900      	bls.n	8005b9e <__ssputs_r+0x72>
 8005b9c:	463e      	mov	r6, r7
 8005b9e:	4632      	mov	r2, r6
 8005ba0:	4641      	mov	r1, r8
 8005ba2:	6820      	ldr	r0, [r4, #0]
 8005ba4:	f000 f9c2 	bl	8005f2c <memmove>
 8005ba8:	2000      	movs	r0, #0
 8005baa:	68a3      	ldr	r3, [r4, #8]
 8005bac:	1b9b      	subs	r3, r3, r6
 8005bae:	60a3      	str	r3, [r4, #8]
 8005bb0:	6823      	ldr	r3, [r4, #0]
 8005bb2:	4433      	add	r3, r6
 8005bb4:	6023      	str	r3, [r4, #0]
 8005bb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005bba:	462a      	mov	r2, r5
 8005bbc:	f000 fd83 	bl	80066c6 <_realloc_r>
 8005bc0:	4606      	mov	r6, r0
 8005bc2:	2800      	cmp	r0, #0
 8005bc4:	d1e0      	bne.n	8005b88 <__ssputs_r+0x5c>
 8005bc6:	4650      	mov	r0, sl
 8005bc8:	6921      	ldr	r1, [r4, #16]
 8005bca:	f7fe fb8d 	bl	80042e8 <_free_r>
 8005bce:	230c      	movs	r3, #12
 8005bd0:	f8ca 3000 	str.w	r3, [sl]
 8005bd4:	89a3      	ldrh	r3, [r4, #12]
 8005bd6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005bda:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005bde:	81a3      	strh	r3, [r4, #12]
 8005be0:	e7e9      	b.n	8005bb6 <__ssputs_r+0x8a>
	...

08005be4 <_svfiprintf_r>:
 8005be4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005be8:	4698      	mov	r8, r3
 8005bea:	898b      	ldrh	r3, [r1, #12]
 8005bec:	4607      	mov	r7, r0
 8005bee:	061b      	lsls	r3, r3, #24
 8005bf0:	460d      	mov	r5, r1
 8005bf2:	4614      	mov	r4, r2
 8005bf4:	b09d      	sub	sp, #116	@ 0x74
 8005bf6:	d510      	bpl.n	8005c1a <_svfiprintf_r+0x36>
 8005bf8:	690b      	ldr	r3, [r1, #16]
 8005bfa:	b973      	cbnz	r3, 8005c1a <_svfiprintf_r+0x36>
 8005bfc:	2140      	movs	r1, #64	@ 0x40
 8005bfe:	f7fe fbe5 	bl	80043cc <_malloc_r>
 8005c02:	6028      	str	r0, [r5, #0]
 8005c04:	6128      	str	r0, [r5, #16]
 8005c06:	b930      	cbnz	r0, 8005c16 <_svfiprintf_r+0x32>
 8005c08:	230c      	movs	r3, #12
 8005c0a:	603b      	str	r3, [r7, #0]
 8005c0c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005c10:	b01d      	add	sp, #116	@ 0x74
 8005c12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c16:	2340      	movs	r3, #64	@ 0x40
 8005c18:	616b      	str	r3, [r5, #20]
 8005c1a:	2300      	movs	r3, #0
 8005c1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8005c1e:	2320      	movs	r3, #32
 8005c20:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005c24:	2330      	movs	r3, #48	@ 0x30
 8005c26:	f04f 0901 	mov.w	r9, #1
 8005c2a:	f8cd 800c 	str.w	r8, [sp, #12]
 8005c2e:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8005dc8 <_svfiprintf_r+0x1e4>
 8005c32:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005c36:	4623      	mov	r3, r4
 8005c38:	469a      	mov	sl, r3
 8005c3a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005c3e:	b10a      	cbz	r2, 8005c44 <_svfiprintf_r+0x60>
 8005c40:	2a25      	cmp	r2, #37	@ 0x25
 8005c42:	d1f9      	bne.n	8005c38 <_svfiprintf_r+0x54>
 8005c44:	ebba 0b04 	subs.w	fp, sl, r4
 8005c48:	d00b      	beq.n	8005c62 <_svfiprintf_r+0x7e>
 8005c4a:	465b      	mov	r3, fp
 8005c4c:	4622      	mov	r2, r4
 8005c4e:	4629      	mov	r1, r5
 8005c50:	4638      	mov	r0, r7
 8005c52:	f7ff ff6b 	bl	8005b2c <__ssputs_r>
 8005c56:	3001      	adds	r0, #1
 8005c58:	f000 80a7 	beq.w	8005daa <_svfiprintf_r+0x1c6>
 8005c5c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005c5e:	445a      	add	r2, fp
 8005c60:	9209      	str	r2, [sp, #36]	@ 0x24
 8005c62:	f89a 3000 	ldrb.w	r3, [sl]
 8005c66:	2b00      	cmp	r3, #0
 8005c68:	f000 809f 	beq.w	8005daa <_svfiprintf_r+0x1c6>
 8005c6c:	2300      	movs	r3, #0
 8005c6e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005c72:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005c76:	f10a 0a01 	add.w	sl, sl, #1
 8005c7a:	9304      	str	r3, [sp, #16]
 8005c7c:	9307      	str	r3, [sp, #28]
 8005c7e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005c82:	931a      	str	r3, [sp, #104]	@ 0x68
 8005c84:	4654      	mov	r4, sl
 8005c86:	2205      	movs	r2, #5
 8005c88:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005c8c:	484e      	ldr	r0, [pc, #312]	@ (8005dc8 <_svfiprintf_r+0x1e4>)
 8005c8e:	f7fd fcc8 	bl	8003622 <memchr>
 8005c92:	9a04      	ldr	r2, [sp, #16]
 8005c94:	b9d8      	cbnz	r0, 8005cce <_svfiprintf_r+0xea>
 8005c96:	06d0      	lsls	r0, r2, #27
 8005c98:	bf44      	itt	mi
 8005c9a:	2320      	movmi	r3, #32
 8005c9c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005ca0:	0711      	lsls	r1, r2, #28
 8005ca2:	bf44      	itt	mi
 8005ca4:	232b      	movmi	r3, #43	@ 0x2b
 8005ca6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005caa:	f89a 3000 	ldrb.w	r3, [sl]
 8005cae:	2b2a      	cmp	r3, #42	@ 0x2a
 8005cb0:	d015      	beq.n	8005cde <_svfiprintf_r+0xfa>
 8005cb2:	4654      	mov	r4, sl
 8005cb4:	2000      	movs	r0, #0
 8005cb6:	f04f 0c0a 	mov.w	ip, #10
 8005cba:	9a07      	ldr	r2, [sp, #28]
 8005cbc:	4621      	mov	r1, r4
 8005cbe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005cc2:	3b30      	subs	r3, #48	@ 0x30
 8005cc4:	2b09      	cmp	r3, #9
 8005cc6:	d94b      	bls.n	8005d60 <_svfiprintf_r+0x17c>
 8005cc8:	b1b0      	cbz	r0, 8005cf8 <_svfiprintf_r+0x114>
 8005cca:	9207      	str	r2, [sp, #28]
 8005ccc:	e014      	b.n	8005cf8 <_svfiprintf_r+0x114>
 8005cce:	eba0 0308 	sub.w	r3, r0, r8
 8005cd2:	fa09 f303 	lsl.w	r3, r9, r3
 8005cd6:	4313      	orrs	r3, r2
 8005cd8:	46a2      	mov	sl, r4
 8005cda:	9304      	str	r3, [sp, #16]
 8005cdc:	e7d2      	b.n	8005c84 <_svfiprintf_r+0xa0>
 8005cde:	9b03      	ldr	r3, [sp, #12]
 8005ce0:	1d19      	adds	r1, r3, #4
 8005ce2:	681b      	ldr	r3, [r3, #0]
 8005ce4:	9103      	str	r1, [sp, #12]
 8005ce6:	2b00      	cmp	r3, #0
 8005ce8:	bfbb      	ittet	lt
 8005cea:	425b      	neglt	r3, r3
 8005cec:	f042 0202 	orrlt.w	r2, r2, #2
 8005cf0:	9307      	strge	r3, [sp, #28]
 8005cf2:	9307      	strlt	r3, [sp, #28]
 8005cf4:	bfb8      	it	lt
 8005cf6:	9204      	strlt	r2, [sp, #16]
 8005cf8:	7823      	ldrb	r3, [r4, #0]
 8005cfa:	2b2e      	cmp	r3, #46	@ 0x2e
 8005cfc:	d10a      	bne.n	8005d14 <_svfiprintf_r+0x130>
 8005cfe:	7863      	ldrb	r3, [r4, #1]
 8005d00:	2b2a      	cmp	r3, #42	@ 0x2a
 8005d02:	d132      	bne.n	8005d6a <_svfiprintf_r+0x186>
 8005d04:	9b03      	ldr	r3, [sp, #12]
 8005d06:	3402      	adds	r4, #2
 8005d08:	1d1a      	adds	r2, r3, #4
 8005d0a:	681b      	ldr	r3, [r3, #0]
 8005d0c:	9203      	str	r2, [sp, #12]
 8005d0e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005d12:	9305      	str	r3, [sp, #20]
 8005d14:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8005dcc <_svfiprintf_r+0x1e8>
 8005d18:	2203      	movs	r2, #3
 8005d1a:	4650      	mov	r0, sl
 8005d1c:	7821      	ldrb	r1, [r4, #0]
 8005d1e:	f7fd fc80 	bl	8003622 <memchr>
 8005d22:	b138      	cbz	r0, 8005d34 <_svfiprintf_r+0x150>
 8005d24:	2240      	movs	r2, #64	@ 0x40
 8005d26:	9b04      	ldr	r3, [sp, #16]
 8005d28:	eba0 000a 	sub.w	r0, r0, sl
 8005d2c:	4082      	lsls	r2, r0
 8005d2e:	4313      	orrs	r3, r2
 8005d30:	3401      	adds	r4, #1
 8005d32:	9304      	str	r3, [sp, #16]
 8005d34:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005d38:	2206      	movs	r2, #6
 8005d3a:	4825      	ldr	r0, [pc, #148]	@ (8005dd0 <_svfiprintf_r+0x1ec>)
 8005d3c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005d40:	f7fd fc6f 	bl	8003622 <memchr>
 8005d44:	2800      	cmp	r0, #0
 8005d46:	d036      	beq.n	8005db6 <_svfiprintf_r+0x1d2>
 8005d48:	4b22      	ldr	r3, [pc, #136]	@ (8005dd4 <_svfiprintf_r+0x1f0>)
 8005d4a:	bb1b      	cbnz	r3, 8005d94 <_svfiprintf_r+0x1b0>
 8005d4c:	9b03      	ldr	r3, [sp, #12]
 8005d4e:	3307      	adds	r3, #7
 8005d50:	f023 0307 	bic.w	r3, r3, #7
 8005d54:	3308      	adds	r3, #8
 8005d56:	9303      	str	r3, [sp, #12]
 8005d58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005d5a:	4433      	add	r3, r6
 8005d5c:	9309      	str	r3, [sp, #36]	@ 0x24
 8005d5e:	e76a      	b.n	8005c36 <_svfiprintf_r+0x52>
 8005d60:	460c      	mov	r4, r1
 8005d62:	2001      	movs	r0, #1
 8005d64:	fb0c 3202 	mla	r2, ip, r2, r3
 8005d68:	e7a8      	b.n	8005cbc <_svfiprintf_r+0xd8>
 8005d6a:	2300      	movs	r3, #0
 8005d6c:	f04f 0c0a 	mov.w	ip, #10
 8005d70:	4619      	mov	r1, r3
 8005d72:	3401      	adds	r4, #1
 8005d74:	9305      	str	r3, [sp, #20]
 8005d76:	4620      	mov	r0, r4
 8005d78:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005d7c:	3a30      	subs	r2, #48	@ 0x30
 8005d7e:	2a09      	cmp	r2, #9
 8005d80:	d903      	bls.n	8005d8a <_svfiprintf_r+0x1a6>
 8005d82:	2b00      	cmp	r3, #0
 8005d84:	d0c6      	beq.n	8005d14 <_svfiprintf_r+0x130>
 8005d86:	9105      	str	r1, [sp, #20]
 8005d88:	e7c4      	b.n	8005d14 <_svfiprintf_r+0x130>
 8005d8a:	4604      	mov	r4, r0
 8005d8c:	2301      	movs	r3, #1
 8005d8e:	fb0c 2101 	mla	r1, ip, r1, r2
 8005d92:	e7f0      	b.n	8005d76 <_svfiprintf_r+0x192>
 8005d94:	ab03      	add	r3, sp, #12
 8005d96:	9300      	str	r3, [sp, #0]
 8005d98:	462a      	mov	r2, r5
 8005d9a:	4638      	mov	r0, r7
 8005d9c:	4b0e      	ldr	r3, [pc, #56]	@ (8005dd8 <_svfiprintf_r+0x1f4>)
 8005d9e:	a904      	add	r1, sp, #16
 8005da0:	f7fc fccc 	bl	800273c <_printf_float>
 8005da4:	1c42      	adds	r2, r0, #1
 8005da6:	4606      	mov	r6, r0
 8005da8:	d1d6      	bne.n	8005d58 <_svfiprintf_r+0x174>
 8005daa:	89ab      	ldrh	r3, [r5, #12]
 8005dac:	065b      	lsls	r3, r3, #25
 8005dae:	f53f af2d 	bmi.w	8005c0c <_svfiprintf_r+0x28>
 8005db2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005db4:	e72c      	b.n	8005c10 <_svfiprintf_r+0x2c>
 8005db6:	ab03      	add	r3, sp, #12
 8005db8:	9300      	str	r3, [sp, #0]
 8005dba:	462a      	mov	r2, r5
 8005dbc:	4638      	mov	r0, r7
 8005dbe:	4b06      	ldr	r3, [pc, #24]	@ (8005dd8 <_svfiprintf_r+0x1f4>)
 8005dc0:	a904      	add	r1, sp, #16
 8005dc2:	f7fc ff59 	bl	8002c78 <_printf_i>
 8005dc6:	e7ed      	b.n	8005da4 <_svfiprintf_r+0x1c0>
 8005dc8:	08007089 	.word	0x08007089
 8005dcc:	0800708f 	.word	0x0800708f
 8005dd0:	08007093 	.word	0x08007093
 8005dd4:	0800273d 	.word	0x0800273d
 8005dd8:	08005b2d 	.word	0x08005b2d

08005ddc <__sflush_r>:
 8005ddc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005de0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005de2:	0716      	lsls	r6, r2, #28
 8005de4:	4605      	mov	r5, r0
 8005de6:	460c      	mov	r4, r1
 8005de8:	d454      	bmi.n	8005e94 <__sflush_r+0xb8>
 8005dea:	684b      	ldr	r3, [r1, #4]
 8005dec:	2b00      	cmp	r3, #0
 8005dee:	dc02      	bgt.n	8005df6 <__sflush_r+0x1a>
 8005df0:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8005df2:	2b00      	cmp	r3, #0
 8005df4:	dd48      	ble.n	8005e88 <__sflush_r+0xac>
 8005df6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005df8:	2e00      	cmp	r6, #0
 8005dfa:	d045      	beq.n	8005e88 <__sflush_r+0xac>
 8005dfc:	2300      	movs	r3, #0
 8005dfe:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8005e02:	682f      	ldr	r7, [r5, #0]
 8005e04:	6a21      	ldr	r1, [r4, #32]
 8005e06:	602b      	str	r3, [r5, #0]
 8005e08:	d030      	beq.n	8005e6c <__sflush_r+0x90>
 8005e0a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005e0c:	89a3      	ldrh	r3, [r4, #12]
 8005e0e:	0759      	lsls	r1, r3, #29
 8005e10:	d505      	bpl.n	8005e1e <__sflush_r+0x42>
 8005e12:	6863      	ldr	r3, [r4, #4]
 8005e14:	1ad2      	subs	r2, r2, r3
 8005e16:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005e18:	b10b      	cbz	r3, 8005e1e <__sflush_r+0x42>
 8005e1a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005e1c:	1ad2      	subs	r2, r2, r3
 8005e1e:	2300      	movs	r3, #0
 8005e20:	4628      	mov	r0, r5
 8005e22:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005e24:	6a21      	ldr	r1, [r4, #32]
 8005e26:	47b0      	blx	r6
 8005e28:	1c43      	adds	r3, r0, #1
 8005e2a:	89a3      	ldrh	r3, [r4, #12]
 8005e2c:	d106      	bne.n	8005e3c <__sflush_r+0x60>
 8005e2e:	6829      	ldr	r1, [r5, #0]
 8005e30:	291d      	cmp	r1, #29
 8005e32:	d82b      	bhi.n	8005e8c <__sflush_r+0xb0>
 8005e34:	4a28      	ldr	r2, [pc, #160]	@ (8005ed8 <__sflush_r+0xfc>)
 8005e36:	410a      	asrs	r2, r1
 8005e38:	07d6      	lsls	r6, r2, #31
 8005e3a:	d427      	bmi.n	8005e8c <__sflush_r+0xb0>
 8005e3c:	2200      	movs	r2, #0
 8005e3e:	6062      	str	r2, [r4, #4]
 8005e40:	6922      	ldr	r2, [r4, #16]
 8005e42:	04d9      	lsls	r1, r3, #19
 8005e44:	6022      	str	r2, [r4, #0]
 8005e46:	d504      	bpl.n	8005e52 <__sflush_r+0x76>
 8005e48:	1c42      	adds	r2, r0, #1
 8005e4a:	d101      	bne.n	8005e50 <__sflush_r+0x74>
 8005e4c:	682b      	ldr	r3, [r5, #0]
 8005e4e:	b903      	cbnz	r3, 8005e52 <__sflush_r+0x76>
 8005e50:	6560      	str	r0, [r4, #84]	@ 0x54
 8005e52:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005e54:	602f      	str	r7, [r5, #0]
 8005e56:	b1b9      	cbz	r1, 8005e88 <__sflush_r+0xac>
 8005e58:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005e5c:	4299      	cmp	r1, r3
 8005e5e:	d002      	beq.n	8005e66 <__sflush_r+0x8a>
 8005e60:	4628      	mov	r0, r5
 8005e62:	f7fe fa41 	bl	80042e8 <_free_r>
 8005e66:	2300      	movs	r3, #0
 8005e68:	6363      	str	r3, [r4, #52]	@ 0x34
 8005e6a:	e00d      	b.n	8005e88 <__sflush_r+0xac>
 8005e6c:	2301      	movs	r3, #1
 8005e6e:	4628      	mov	r0, r5
 8005e70:	47b0      	blx	r6
 8005e72:	4602      	mov	r2, r0
 8005e74:	1c50      	adds	r0, r2, #1
 8005e76:	d1c9      	bne.n	8005e0c <__sflush_r+0x30>
 8005e78:	682b      	ldr	r3, [r5, #0]
 8005e7a:	2b00      	cmp	r3, #0
 8005e7c:	d0c6      	beq.n	8005e0c <__sflush_r+0x30>
 8005e7e:	2b1d      	cmp	r3, #29
 8005e80:	d001      	beq.n	8005e86 <__sflush_r+0xaa>
 8005e82:	2b16      	cmp	r3, #22
 8005e84:	d11d      	bne.n	8005ec2 <__sflush_r+0xe6>
 8005e86:	602f      	str	r7, [r5, #0]
 8005e88:	2000      	movs	r0, #0
 8005e8a:	e021      	b.n	8005ed0 <__sflush_r+0xf4>
 8005e8c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005e90:	b21b      	sxth	r3, r3
 8005e92:	e01a      	b.n	8005eca <__sflush_r+0xee>
 8005e94:	690f      	ldr	r7, [r1, #16]
 8005e96:	2f00      	cmp	r7, #0
 8005e98:	d0f6      	beq.n	8005e88 <__sflush_r+0xac>
 8005e9a:	0793      	lsls	r3, r2, #30
 8005e9c:	bf18      	it	ne
 8005e9e:	2300      	movne	r3, #0
 8005ea0:	680e      	ldr	r6, [r1, #0]
 8005ea2:	bf08      	it	eq
 8005ea4:	694b      	ldreq	r3, [r1, #20]
 8005ea6:	1bf6      	subs	r6, r6, r7
 8005ea8:	600f      	str	r7, [r1, #0]
 8005eaa:	608b      	str	r3, [r1, #8]
 8005eac:	2e00      	cmp	r6, #0
 8005eae:	ddeb      	ble.n	8005e88 <__sflush_r+0xac>
 8005eb0:	4633      	mov	r3, r6
 8005eb2:	463a      	mov	r2, r7
 8005eb4:	4628      	mov	r0, r5
 8005eb6:	6a21      	ldr	r1, [r4, #32]
 8005eb8:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8005ebc:	47e0      	blx	ip
 8005ebe:	2800      	cmp	r0, #0
 8005ec0:	dc07      	bgt.n	8005ed2 <__sflush_r+0xf6>
 8005ec2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005ec6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005eca:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005ece:	81a3      	strh	r3, [r4, #12]
 8005ed0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005ed2:	4407      	add	r7, r0
 8005ed4:	1a36      	subs	r6, r6, r0
 8005ed6:	e7e9      	b.n	8005eac <__sflush_r+0xd0>
 8005ed8:	dfbffffe 	.word	0xdfbffffe

08005edc <_fflush_r>:
 8005edc:	b538      	push	{r3, r4, r5, lr}
 8005ede:	690b      	ldr	r3, [r1, #16]
 8005ee0:	4605      	mov	r5, r0
 8005ee2:	460c      	mov	r4, r1
 8005ee4:	b913      	cbnz	r3, 8005eec <_fflush_r+0x10>
 8005ee6:	2500      	movs	r5, #0
 8005ee8:	4628      	mov	r0, r5
 8005eea:	bd38      	pop	{r3, r4, r5, pc}
 8005eec:	b118      	cbz	r0, 8005ef6 <_fflush_r+0x1a>
 8005eee:	6a03      	ldr	r3, [r0, #32]
 8005ef0:	b90b      	cbnz	r3, 8005ef6 <_fflush_r+0x1a>
 8005ef2:	f7fd fa7d 	bl	80033f0 <__sinit>
 8005ef6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005efa:	2b00      	cmp	r3, #0
 8005efc:	d0f3      	beq.n	8005ee6 <_fflush_r+0xa>
 8005efe:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005f00:	07d0      	lsls	r0, r2, #31
 8005f02:	d404      	bmi.n	8005f0e <_fflush_r+0x32>
 8005f04:	0599      	lsls	r1, r3, #22
 8005f06:	d402      	bmi.n	8005f0e <_fflush_r+0x32>
 8005f08:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005f0a:	f7fd fb88 	bl	800361e <__retarget_lock_acquire_recursive>
 8005f0e:	4628      	mov	r0, r5
 8005f10:	4621      	mov	r1, r4
 8005f12:	f7ff ff63 	bl	8005ddc <__sflush_r>
 8005f16:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005f18:	4605      	mov	r5, r0
 8005f1a:	07da      	lsls	r2, r3, #31
 8005f1c:	d4e4      	bmi.n	8005ee8 <_fflush_r+0xc>
 8005f1e:	89a3      	ldrh	r3, [r4, #12]
 8005f20:	059b      	lsls	r3, r3, #22
 8005f22:	d4e1      	bmi.n	8005ee8 <_fflush_r+0xc>
 8005f24:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005f26:	f7fd fb7b 	bl	8003620 <__retarget_lock_release_recursive>
 8005f2a:	e7dd      	b.n	8005ee8 <_fflush_r+0xc>

08005f2c <memmove>:
 8005f2c:	4288      	cmp	r0, r1
 8005f2e:	b510      	push	{r4, lr}
 8005f30:	eb01 0402 	add.w	r4, r1, r2
 8005f34:	d902      	bls.n	8005f3c <memmove+0x10>
 8005f36:	4284      	cmp	r4, r0
 8005f38:	4623      	mov	r3, r4
 8005f3a:	d807      	bhi.n	8005f4c <memmove+0x20>
 8005f3c:	1e43      	subs	r3, r0, #1
 8005f3e:	42a1      	cmp	r1, r4
 8005f40:	d008      	beq.n	8005f54 <memmove+0x28>
 8005f42:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005f46:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005f4a:	e7f8      	b.n	8005f3e <memmove+0x12>
 8005f4c:	4601      	mov	r1, r0
 8005f4e:	4402      	add	r2, r0
 8005f50:	428a      	cmp	r2, r1
 8005f52:	d100      	bne.n	8005f56 <memmove+0x2a>
 8005f54:	bd10      	pop	{r4, pc}
 8005f56:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005f5a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005f5e:	e7f7      	b.n	8005f50 <memmove+0x24>

08005f60 <strncmp>:
 8005f60:	b510      	push	{r4, lr}
 8005f62:	b16a      	cbz	r2, 8005f80 <strncmp+0x20>
 8005f64:	3901      	subs	r1, #1
 8005f66:	1884      	adds	r4, r0, r2
 8005f68:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005f6c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8005f70:	429a      	cmp	r2, r3
 8005f72:	d103      	bne.n	8005f7c <strncmp+0x1c>
 8005f74:	42a0      	cmp	r0, r4
 8005f76:	d001      	beq.n	8005f7c <strncmp+0x1c>
 8005f78:	2a00      	cmp	r2, #0
 8005f7a:	d1f5      	bne.n	8005f68 <strncmp+0x8>
 8005f7c:	1ad0      	subs	r0, r2, r3
 8005f7e:	bd10      	pop	{r4, pc}
 8005f80:	4610      	mov	r0, r2
 8005f82:	e7fc      	b.n	8005f7e <strncmp+0x1e>

08005f84 <_sbrk_r>:
 8005f84:	b538      	push	{r3, r4, r5, lr}
 8005f86:	2300      	movs	r3, #0
 8005f88:	4d05      	ldr	r5, [pc, #20]	@ (8005fa0 <_sbrk_r+0x1c>)
 8005f8a:	4604      	mov	r4, r0
 8005f8c:	4608      	mov	r0, r1
 8005f8e:	602b      	str	r3, [r5, #0]
 8005f90:	f7fb fa6c 	bl	800146c <_sbrk>
 8005f94:	1c43      	adds	r3, r0, #1
 8005f96:	d102      	bne.n	8005f9e <_sbrk_r+0x1a>
 8005f98:	682b      	ldr	r3, [r5, #0]
 8005f9a:	b103      	cbz	r3, 8005f9e <_sbrk_r+0x1a>
 8005f9c:	6023      	str	r3, [r4, #0]
 8005f9e:	bd38      	pop	{r3, r4, r5, pc}
 8005fa0:	200003e0 	.word	0x200003e0

08005fa4 <memcpy>:
 8005fa4:	440a      	add	r2, r1
 8005fa6:	4291      	cmp	r1, r2
 8005fa8:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8005fac:	d100      	bne.n	8005fb0 <memcpy+0xc>
 8005fae:	4770      	bx	lr
 8005fb0:	b510      	push	{r4, lr}
 8005fb2:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005fb6:	4291      	cmp	r1, r2
 8005fb8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005fbc:	d1f9      	bne.n	8005fb2 <memcpy+0xe>
 8005fbe:	bd10      	pop	{r4, pc}

08005fc0 <nan>:
 8005fc0:	2000      	movs	r0, #0
 8005fc2:	4901      	ldr	r1, [pc, #4]	@ (8005fc8 <nan+0x8>)
 8005fc4:	4770      	bx	lr
 8005fc6:	bf00      	nop
 8005fc8:	7ff80000 	.word	0x7ff80000

08005fcc <__assert_func>:
 8005fcc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005fce:	4614      	mov	r4, r2
 8005fd0:	461a      	mov	r2, r3
 8005fd2:	4b09      	ldr	r3, [pc, #36]	@ (8005ff8 <__assert_func+0x2c>)
 8005fd4:	4605      	mov	r5, r0
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	68d8      	ldr	r0, [r3, #12]
 8005fda:	b954      	cbnz	r4, 8005ff2 <__assert_func+0x26>
 8005fdc:	4b07      	ldr	r3, [pc, #28]	@ (8005ffc <__assert_func+0x30>)
 8005fde:	461c      	mov	r4, r3
 8005fe0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005fe4:	9100      	str	r1, [sp, #0]
 8005fe6:	462b      	mov	r3, r5
 8005fe8:	4905      	ldr	r1, [pc, #20]	@ (8006000 <__assert_func+0x34>)
 8005fea:	f000 fba7 	bl	800673c <fiprintf>
 8005fee:	f000 fbb7 	bl	8006760 <abort>
 8005ff2:	4b04      	ldr	r3, [pc, #16]	@ (8006004 <__assert_func+0x38>)
 8005ff4:	e7f4      	b.n	8005fe0 <__assert_func+0x14>
 8005ff6:	bf00      	nop
 8005ff8:	20000018 	.word	0x20000018
 8005ffc:	08006ce4 	.word	0x08006ce4
 8006000:	080070af 	.word	0x080070af
 8006004:	080070a2 	.word	0x080070a2

08006008 <_calloc_r>:
 8006008:	b570      	push	{r4, r5, r6, lr}
 800600a:	fba1 5402 	umull	r5, r4, r1, r2
 800600e:	b93c      	cbnz	r4, 8006020 <_calloc_r+0x18>
 8006010:	4629      	mov	r1, r5
 8006012:	f7fe f9db 	bl	80043cc <_malloc_r>
 8006016:	4606      	mov	r6, r0
 8006018:	b928      	cbnz	r0, 8006026 <_calloc_r+0x1e>
 800601a:	2600      	movs	r6, #0
 800601c:	4630      	mov	r0, r6
 800601e:	bd70      	pop	{r4, r5, r6, pc}
 8006020:	220c      	movs	r2, #12
 8006022:	6002      	str	r2, [r0, #0]
 8006024:	e7f9      	b.n	800601a <_calloc_r+0x12>
 8006026:	462a      	mov	r2, r5
 8006028:	4621      	mov	r1, r4
 800602a:	f7fd fa7a 	bl	8003522 <memset>
 800602e:	e7f5      	b.n	800601c <_calloc_r+0x14>

08006030 <rshift>:
 8006030:	6903      	ldr	r3, [r0, #16]
 8006032:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006036:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800603a:	f100 0414 	add.w	r4, r0, #20
 800603e:	ea4f 1261 	mov.w	r2, r1, asr #5
 8006042:	dd46      	ble.n	80060d2 <rshift+0xa2>
 8006044:	f011 011f 	ands.w	r1, r1, #31
 8006048:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800604c:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8006050:	d10c      	bne.n	800606c <rshift+0x3c>
 8006052:	4629      	mov	r1, r5
 8006054:	f100 0710 	add.w	r7, r0, #16
 8006058:	42b1      	cmp	r1, r6
 800605a:	d335      	bcc.n	80060c8 <rshift+0x98>
 800605c:	1a9b      	subs	r3, r3, r2
 800605e:	009b      	lsls	r3, r3, #2
 8006060:	1eea      	subs	r2, r5, #3
 8006062:	4296      	cmp	r6, r2
 8006064:	bf38      	it	cc
 8006066:	2300      	movcc	r3, #0
 8006068:	4423      	add	r3, r4
 800606a:	e015      	b.n	8006098 <rshift+0x68>
 800606c:	46a1      	mov	r9, r4
 800606e:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8006072:	f1c1 0820 	rsb	r8, r1, #32
 8006076:	40cf      	lsrs	r7, r1
 8006078:	f105 0e04 	add.w	lr, r5, #4
 800607c:	4576      	cmp	r6, lr
 800607e:	46f4      	mov	ip, lr
 8006080:	d816      	bhi.n	80060b0 <rshift+0x80>
 8006082:	1a9a      	subs	r2, r3, r2
 8006084:	0092      	lsls	r2, r2, #2
 8006086:	3a04      	subs	r2, #4
 8006088:	3501      	adds	r5, #1
 800608a:	42ae      	cmp	r6, r5
 800608c:	bf38      	it	cc
 800608e:	2200      	movcc	r2, #0
 8006090:	18a3      	adds	r3, r4, r2
 8006092:	50a7      	str	r7, [r4, r2]
 8006094:	b107      	cbz	r7, 8006098 <rshift+0x68>
 8006096:	3304      	adds	r3, #4
 8006098:	42a3      	cmp	r3, r4
 800609a:	eba3 0204 	sub.w	r2, r3, r4
 800609e:	bf08      	it	eq
 80060a0:	2300      	moveq	r3, #0
 80060a2:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80060a6:	6102      	str	r2, [r0, #16]
 80060a8:	bf08      	it	eq
 80060aa:	6143      	streq	r3, [r0, #20]
 80060ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80060b0:	f8dc c000 	ldr.w	ip, [ip]
 80060b4:	fa0c fc08 	lsl.w	ip, ip, r8
 80060b8:	ea4c 0707 	orr.w	r7, ip, r7
 80060bc:	f849 7b04 	str.w	r7, [r9], #4
 80060c0:	f85e 7b04 	ldr.w	r7, [lr], #4
 80060c4:	40cf      	lsrs	r7, r1
 80060c6:	e7d9      	b.n	800607c <rshift+0x4c>
 80060c8:	f851 cb04 	ldr.w	ip, [r1], #4
 80060cc:	f847 cf04 	str.w	ip, [r7, #4]!
 80060d0:	e7c2      	b.n	8006058 <rshift+0x28>
 80060d2:	4623      	mov	r3, r4
 80060d4:	e7e0      	b.n	8006098 <rshift+0x68>

080060d6 <__hexdig_fun>:
 80060d6:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 80060da:	2b09      	cmp	r3, #9
 80060dc:	d802      	bhi.n	80060e4 <__hexdig_fun+0xe>
 80060de:	3820      	subs	r0, #32
 80060e0:	b2c0      	uxtb	r0, r0
 80060e2:	4770      	bx	lr
 80060e4:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 80060e8:	2b05      	cmp	r3, #5
 80060ea:	d801      	bhi.n	80060f0 <__hexdig_fun+0x1a>
 80060ec:	3847      	subs	r0, #71	@ 0x47
 80060ee:	e7f7      	b.n	80060e0 <__hexdig_fun+0xa>
 80060f0:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 80060f4:	2b05      	cmp	r3, #5
 80060f6:	d801      	bhi.n	80060fc <__hexdig_fun+0x26>
 80060f8:	3827      	subs	r0, #39	@ 0x27
 80060fa:	e7f1      	b.n	80060e0 <__hexdig_fun+0xa>
 80060fc:	2000      	movs	r0, #0
 80060fe:	4770      	bx	lr

08006100 <__gethex>:
 8006100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006104:	468a      	mov	sl, r1
 8006106:	4690      	mov	r8, r2
 8006108:	b085      	sub	sp, #20
 800610a:	9302      	str	r3, [sp, #8]
 800610c:	680b      	ldr	r3, [r1, #0]
 800610e:	9001      	str	r0, [sp, #4]
 8006110:	1c9c      	adds	r4, r3, #2
 8006112:	46a1      	mov	r9, r4
 8006114:	f814 0b01 	ldrb.w	r0, [r4], #1
 8006118:	2830      	cmp	r0, #48	@ 0x30
 800611a:	d0fa      	beq.n	8006112 <__gethex+0x12>
 800611c:	eba9 0303 	sub.w	r3, r9, r3
 8006120:	f1a3 0b02 	sub.w	fp, r3, #2
 8006124:	f7ff ffd7 	bl	80060d6 <__hexdig_fun>
 8006128:	4605      	mov	r5, r0
 800612a:	2800      	cmp	r0, #0
 800612c:	d168      	bne.n	8006200 <__gethex+0x100>
 800612e:	2201      	movs	r2, #1
 8006130:	4648      	mov	r0, r9
 8006132:	499f      	ldr	r1, [pc, #636]	@ (80063b0 <__gethex+0x2b0>)
 8006134:	f7ff ff14 	bl	8005f60 <strncmp>
 8006138:	4607      	mov	r7, r0
 800613a:	2800      	cmp	r0, #0
 800613c:	d167      	bne.n	800620e <__gethex+0x10e>
 800613e:	f899 0001 	ldrb.w	r0, [r9, #1]
 8006142:	4626      	mov	r6, r4
 8006144:	f7ff ffc7 	bl	80060d6 <__hexdig_fun>
 8006148:	2800      	cmp	r0, #0
 800614a:	d062      	beq.n	8006212 <__gethex+0x112>
 800614c:	4623      	mov	r3, r4
 800614e:	7818      	ldrb	r0, [r3, #0]
 8006150:	4699      	mov	r9, r3
 8006152:	2830      	cmp	r0, #48	@ 0x30
 8006154:	f103 0301 	add.w	r3, r3, #1
 8006158:	d0f9      	beq.n	800614e <__gethex+0x4e>
 800615a:	f7ff ffbc 	bl	80060d6 <__hexdig_fun>
 800615e:	fab0 f580 	clz	r5, r0
 8006162:	f04f 0b01 	mov.w	fp, #1
 8006166:	096d      	lsrs	r5, r5, #5
 8006168:	464a      	mov	r2, r9
 800616a:	4616      	mov	r6, r2
 800616c:	7830      	ldrb	r0, [r6, #0]
 800616e:	3201      	adds	r2, #1
 8006170:	f7ff ffb1 	bl	80060d6 <__hexdig_fun>
 8006174:	2800      	cmp	r0, #0
 8006176:	d1f8      	bne.n	800616a <__gethex+0x6a>
 8006178:	2201      	movs	r2, #1
 800617a:	4630      	mov	r0, r6
 800617c:	498c      	ldr	r1, [pc, #560]	@ (80063b0 <__gethex+0x2b0>)
 800617e:	f7ff feef 	bl	8005f60 <strncmp>
 8006182:	2800      	cmp	r0, #0
 8006184:	d13f      	bne.n	8006206 <__gethex+0x106>
 8006186:	b944      	cbnz	r4, 800619a <__gethex+0x9a>
 8006188:	1c74      	adds	r4, r6, #1
 800618a:	4622      	mov	r2, r4
 800618c:	4616      	mov	r6, r2
 800618e:	7830      	ldrb	r0, [r6, #0]
 8006190:	3201      	adds	r2, #1
 8006192:	f7ff ffa0 	bl	80060d6 <__hexdig_fun>
 8006196:	2800      	cmp	r0, #0
 8006198:	d1f8      	bne.n	800618c <__gethex+0x8c>
 800619a:	1ba4      	subs	r4, r4, r6
 800619c:	00a7      	lsls	r7, r4, #2
 800619e:	7833      	ldrb	r3, [r6, #0]
 80061a0:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 80061a4:	2b50      	cmp	r3, #80	@ 0x50
 80061a6:	d13e      	bne.n	8006226 <__gethex+0x126>
 80061a8:	7873      	ldrb	r3, [r6, #1]
 80061aa:	2b2b      	cmp	r3, #43	@ 0x2b
 80061ac:	d033      	beq.n	8006216 <__gethex+0x116>
 80061ae:	2b2d      	cmp	r3, #45	@ 0x2d
 80061b0:	d034      	beq.n	800621c <__gethex+0x11c>
 80061b2:	2400      	movs	r4, #0
 80061b4:	1c71      	adds	r1, r6, #1
 80061b6:	7808      	ldrb	r0, [r1, #0]
 80061b8:	f7ff ff8d 	bl	80060d6 <__hexdig_fun>
 80061bc:	1e43      	subs	r3, r0, #1
 80061be:	b2db      	uxtb	r3, r3
 80061c0:	2b18      	cmp	r3, #24
 80061c2:	d830      	bhi.n	8006226 <__gethex+0x126>
 80061c4:	f1a0 0210 	sub.w	r2, r0, #16
 80061c8:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80061cc:	f7ff ff83 	bl	80060d6 <__hexdig_fun>
 80061d0:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 80061d4:	fa5f fc8c 	uxtb.w	ip, ip
 80061d8:	f1bc 0f18 	cmp.w	ip, #24
 80061dc:	f04f 030a 	mov.w	r3, #10
 80061e0:	d91e      	bls.n	8006220 <__gethex+0x120>
 80061e2:	b104      	cbz	r4, 80061e6 <__gethex+0xe6>
 80061e4:	4252      	negs	r2, r2
 80061e6:	4417      	add	r7, r2
 80061e8:	f8ca 1000 	str.w	r1, [sl]
 80061ec:	b1ed      	cbz	r5, 800622a <__gethex+0x12a>
 80061ee:	f1bb 0f00 	cmp.w	fp, #0
 80061f2:	bf0c      	ite	eq
 80061f4:	2506      	moveq	r5, #6
 80061f6:	2500      	movne	r5, #0
 80061f8:	4628      	mov	r0, r5
 80061fa:	b005      	add	sp, #20
 80061fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006200:	2500      	movs	r5, #0
 8006202:	462c      	mov	r4, r5
 8006204:	e7b0      	b.n	8006168 <__gethex+0x68>
 8006206:	2c00      	cmp	r4, #0
 8006208:	d1c7      	bne.n	800619a <__gethex+0x9a>
 800620a:	4627      	mov	r7, r4
 800620c:	e7c7      	b.n	800619e <__gethex+0x9e>
 800620e:	464e      	mov	r6, r9
 8006210:	462f      	mov	r7, r5
 8006212:	2501      	movs	r5, #1
 8006214:	e7c3      	b.n	800619e <__gethex+0x9e>
 8006216:	2400      	movs	r4, #0
 8006218:	1cb1      	adds	r1, r6, #2
 800621a:	e7cc      	b.n	80061b6 <__gethex+0xb6>
 800621c:	2401      	movs	r4, #1
 800621e:	e7fb      	b.n	8006218 <__gethex+0x118>
 8006220:	fb03 0002 	mla	r0, r3, r2, r0
 8006224:	e7ce      	b.n	80061c4 <__gethex+0xc4>
 8006226:	4631      	mov	r1, r6
 8006228:	e7de      	b.n	80061e8 <__gethex+0xe8>
 800622a:	4629      	mov	r1, r5
 800622c:	eba6 0309 	sub.w	r3, r6, r9
 8006230:	3b01      	subs	r3, #1
 8006232:	2b07      	cmp	r3, #7
 8006234:	dc0a      	bgt.n	800624c <__gethex+0x14c>
 8006236:	9801      	ldr	r0, [sp, #4]
 8006238:	f7fe f954 	bl	80044e4 <_Balloc>
 800623c:	4604      	mov	r4, r0
 800623e:	b940      	cbnz	r0, 8006252 <__gethex+0x152>
 8006240:	4602      	mov	r2, r0
 8006242:	21e4      	movs	r1, #228	@ 0xe4
 8006244:	4b5b      	ldr	r3, [pc, #364]	@ (80063b4 <__gethex+0x2b4>)
 8006246:	485c      	ldr	r0, [pc, #368]	@ (80063b8 <__gethex+0x2b8>)
 8006248:	f7ff fec0 	bl	8005fcc <__assert_func>
 800624c:	3101      	adds	r1, #1
 800624e:	105b      	asrs	r3, r3, #1
 8006250:	e7ef      	b.n	8006232 <__gethex+0x132>
 8006252:	2300      	movs	r3, #0
 8006254:	f100 0a14 	add.w	sl, r0, #20
 8006258:	4655      	mov	r5, sl
 800625a:	469b      	mov	fp, r3
 800625c:	45b1      	cmp	r9, r6
 800625e:	d337      	bcc.n	80062d0 <__gethex+0x1d0>
 8006260:	f845 bb04 	str.w	fp, [r5], #4
 8006264:	eba5 050a 	sub.w	r5, r5, sl
 8006268:	10ad      	asrs	r5, r5, #2
 800626a:	6125      	str	r5, [r4, #16]
 800626c:	4658      	mov	r0, fp
 800626e:	f7fe fa2b 	bl	80046c8 <__hi0bits>
 8006272:	016d      	lsls	r5, r5, #5
 8006274:	f8d8 6000 	ldr.w	r6, [r8]
 8006278:	1a2d      	subs	r5, r5, r0
 800627a:	42b5      	cmp	r5, r6
 800627c:	dd54      	ble.n	8006328 <__gethex+0x228>
 800627e:	1bad      	subs	r5, r5, r6
 8006280:	4629      	mov	r1, r5
 8006282:	4620      	mov	r0, r4
 8006284:	f7fe fdb3 	bl	8004dee <__any_on>
 8006288:	4681      	mov	r9, r0
 800628a:	b178      	cbz	r0, 80062ac <__gethex+0x1ac>
 800628c:	f04f 0901 	mov.w	r9, #1
 8006290:	1e6b      	subs	r3, r5, #1
 8006292:	1159      	asrs	r1, r3, #5
 8006294:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8006298:	f003 021f 	and.w	r2, r3, #31
 800629c:	fa09 f202 	lsl.w	r2, r9, r2
 80062a0:	420a      	tst	r2, r1
 80062a2:	d003      	beq.n	80062ac <__gethex+0x1ac>
 80062a4:	454b      	cmp	r3, r9
 80062a6:	dc36      	bgt.n	8006316 <__gethex+0x216>
 80062a8:	f04f 0902 	mov.w	r9, #2
 80062ac:	4629      	mov	r1, r5
 80062ae:	4620      	mov	r0, r4
 80062b0:	f7ff febe 	bl	8006030 <rshift>
 80062b4:	442f      	add	r7, r5
 80062b6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80062ba:	42bb      	cmp	r3, r7
 80062bc:	da42      	bge.n	8006344 <__gethex+0x244>
 80062be:	4621      	mov	r1, r4
 80062c0:	9801      	ldr	r0, [sp, #4]
 80062c2:	f7fe f94f 	bl	8004564 <_Bfree>
 80062c6:	2300      	movs	r3, #0
 80062c8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80062ca:	25a3      	movs	r5, #163	@ 0xa3
 80062cc:	6013      	str	r3, [r2, #0]
 80062ce:	e793      	b.n	80061f8 <__gethex+0xf8>
 80062d0:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 80062d4:	2a2e      	cmp	r2, #46	@ 0x2e
 80062d6:	d012      	beq.n	80062fe <__gethex+0x1fe>
 80062d8:	2b20      	cmp	r3, #32
 80062da:	d104      	bne.n	80062e6 <__gethex+0x1e6>
 80062dc:	f845 bb04 	str.w	fp, [r5], #4
 80062e0:	f04f 0b00 	mov.w	fp, #0
 80062e4:	465b      	mov	r3, fp
 80062e6:	7830      	ldrb	r0, [r6, #0]
 80062e8:	9303      	str	r3, [sp, #12]
 80062ea:	f7ff fef4 	bl	80060d6 <__hexdig_fun>
 80062ee:	9b03      	ldr	r3, [sp, #12]
 80062f0:	f000 000f 	and.w	r0, r0, #15
 80062f4:	4098      	lsls	r0, r3
 80062f6:	ea4b 0b00 	orr.w	fp, fp, r0
 80062fa:	3304      	adds	r3, #4
 80062fc:	e7ae      	b.n	800625c <__gethex+0x15c>
 80062fe:	45b1      	cmp	r9, r6
 8006300:	d8ea      	bhi.n	80062d8 <__gethex+0x1d8>
 8006302:	2201      	movs	r2, #1
 8006304:	4630      	mov	r0, r6
 8006306:	492a      	ldr	r1, [pc, #168]	@ (80063b0 <__gethex+0x2b0>)
 8006308:	9303      	str	r3, [sp, #12]
 800630a:	f7ff fe29 	bl	8005f60 <strncmp>
 800630e:	9b03      	ldr	r3, [sp, #12]
 8006310:	2800      	cmp	r0, #0
 8006312:	d1e1      	bne.n	80062d8 <__gethex+0x1d8>
 8006314:	e7a2      	b.n	800625c <__gethex+0x15c>
 8006316:	4620      	mov	r0, r4
 8006318:	1ea9      	subs	r1, r5, #2
 800631a:	f7fe fd68 	bl	8004dee <__any_on>
 800631e:	2800      	cmp	r0, #0
 8006320:	d0c2      	beq.n	80062a8 <__gethex+0x1a8>
 8006322:	f04f 0903 	mov.w	r9, #3
 8006326:	e7c1      	b.n	80062ac <__gethex+0x1ac>
 8006328:	da09      	bge.n	800633e <__gethex+0x23e>
 800632a:	1b75      	subs	r5, r6, r5
 800632c:	4621      	mov	r1, r4
 800632e:	462a      	mov	r2, r5
 8006330:	9801      	ldr	r0, [sp, #4]
 8006332:	f7fe fb2d 	bl	8004990 <__lshift>
 8006336:	4604      	mov	r4, r0
 8006338:	1b7f      	subs	r7, r7, r5
 800633a:	f100 0a14 	add.w	sl, r0, #20
 800633e:	f04f 0900 	mov.w	r9, #0
 8006342:	e7b8      	b.n	80062b6 <__gethex+0x1b6>
 8006344:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8006348:	42bd      	cmp	r5, r7
 800634a:	dd6f      	ble.n	800642c <__gethex+0x32c>
 800634c:	1bed      	subs	r5, r5, r7
 800634e:	42ae      	cmp	r6, r5
 8006350:	dc34      	bgt.n	80063bc <__gethex+0x2bc>
 8006352:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006356:	2b02      	cmp	r3, #2
 8006358:	d022      	beq.n	80063a0 <__gethex+0x2a0>
 800635a:	2b03      	cmp	r3, #3
 800635c:	d024      	beq.n	80063a8 <__gethex+0x2a8>
 800635e:	2b01      	cmp	r3, #1
 8006360:	d115      	bne.n	800638e <__gethex+0x28e>
 8006362:	42ae      	cmp	r6, r5
 8006364:	d113      	bne.n	800638e <__gethex+0x28e>
 8006366:	2e01      	cmp	r6, #1
 8006368:	d10b      	bne.n	8006382 <__gethex+0x282>
 800636a:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800636e:	9a02      	ldr	r2, [sp, #8]
 8006370:	2562      	movs	r5, #98	@ 0x62
 8006372:	6013      	str	r3, [r2, #0]
 8006374:	2301      	movs	r3, #1
 8006376:	6123      	str	r3, [r4, #16]
 8006378:	f8ca 3000 	str.w	r3, [sl]
 800637c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800637e:	601c      	str	r4, [r3, #0]
 8006380:	e73a      	b.n	80061f8 <__gethex+0xf8>
 8006382:	4620      	mov	r0, r4
 8006384:	1e71      	subs	r1, r6, #1
 8006386:	f7fe fd32 	bl	8004dee <__any_on>
 800638a:	2800      	cmp	r0, #0
 800638c:	d1ed      	bne.n	800636a <__gethex+0x26a>
 800638e:	4621      	mov	r1, r4
 8006390:	9801      	ldr	r0, [sp, #4]
 8006392:	f7fe f8e7 	bl	8004564 <_Bfree>
 8006396:	2300      	movs	r3, #0
 8006398:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800639a:	2550      	movs	r5, #80	@ 0x50
 800639c:	6013      	str	r3, [r2, #0]
 800639e:	e72b      	b.n	80061f8 <__gethex+0xf8>
 80063a0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80063a2:	2b00      	cmp	r3, #0
 80063a4:	d1f3      	bne.n	800638e <__gethex+0x28e>
 80063a6:	e7e0      	b.n	800636a <__gethex+0x26a>
 80063a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80063aa:	2b00      	cmp	r3, #0
 80063ac:	d1dd      	bne.n	800636a <__gethex+0x26a>
 80063ae:	e7ee      	b.n	800638e <__gethex+0x28e>
 80063b0:	08006f30 	.word	0x08006f30
 80063b4:	08006dc4 	.word	0x08006dc4
 80063b8:	080070de 	.word	0x080070de
 80063bc:	1e6f      	subs	r7, r5, #1
 80063be:	f1b9 0f00 	cmp.w	r9, #0
 80063c2:	d130      	bne.n	8006426 <__gethex+0x326>
 80063c4:	b127      	cbz	r7, 80063d0 <__gethex+0x2d0>
 80063c6:	4639      	mov	r1, r7
 80063c8:	4620      	mov	r0, r4
 80063ca:	f7fe fd10 	bl	8004dee <__any_on>
 80063ce:	4681      	mov	r9, r0
 80063d0:	2301      	movs	r3, #1
 80063d2:	4629      	mov	r1, r5
 80063d4:	1b76      	subs	r6, r6, r5
 80063d6:	2502      	movs	r5, #2
 80063d8:	117a      	asrs	r2, r7, #5
 80063da:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 80063de:	f007 071f 	and.w	r7, r7, #31
 80063e2:	40bb      	lsls	r3, r7
 80063e4:	4213      	tst	r3, r2
 80063e6:	4620      	mov	r0, r4
 80063e8:	bf18      	it	ne
 80063ea:	f049 0902 	orrne.w	r9, r9, #2
 80063ee:	f7ff fe1f 	bl	8006030 <rshift>
 80063f2:	f8d8 7004 	ldr.w	r7, [r8, #4]
 80063f6:	f1b9 0f00 	cmp.w	r9, #0
 80063fa:	d047      	beq.n	800648c <__gethex+0x38c>
 80063fc:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006400:	2b02      	cmp	r3, #2
 8006402:	d015      	beq.n	8006430 <__gethex+0x330>
 8006404:	2b03      	cmp	r3, #3
 8006406:	d017      	beq.n	8006438 <__gethex+0x338>
 8006408:	2b01      	cmp	r3, #1
 800640a:	d109      	bne.n	8006420 <__gethex+0x320>
 800640c:	f019 0f02 	tst.w	r9, #2
 8006410:	d006      	beq.n	8006420 <__gethex+0x320>
 8006412:	f8da 3000 	ldr.w	r3, [sl]
 8006416:	ea49 0903 	orr.w	r9, r9, r3
 800641a:	f019 0f01 	tst.w	r9, #1
 800641e:	d10e      	bne.n	800643e <__gethex+0x33e>
 8006420:	f045 0510 	orr.w	r5, r5, #16
 8006424:	e032      	b.n	800648c <__gethex+0x38c>
 8006426:	f04f 0901 	mov.w	r9, #1
 800642a:	e7d1      	b.n	80063d0 <__gethex+0x2d0>
 800642c:	2501      	movs	r5, #1
 800642e:	e7e2      	b.n	80063f6 <__gethex+0x2f6>
 8006430:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006432:	f1c3 0301 	rsb	r3, r3, #1
 8006436:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006438:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800643a:	2b00      	cmp	r3, #0
 800643c:	d0f0      	beq.n	8006420 <__gethex+0x320>
 800643e:	f04f 0c00 	mov.w	ip, #0
 8006442:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8006446:	f104 0314 	add.w	r3, r4, #20
 800644a:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800644e:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8006452:	4618      	mov	r0, r3
 8006454:	f853 2b04 	ldr.w	r2, [r3], #4
 8006458:	f1b2 3fff 	cmp.w	r2, #4294967295	@ 0xffffffff
 800645c:	d01b      	beq.n	8006496 <__gethex+0x396>
 800645e:	3201      	adds	r2, #1
 8006460:	6002      	str	r2, [r0, #0]
 8006462:	2d02      	cmp	r5, #2
 8006464:	f104 0314 	add.w	r3, r4, #20
 8006468:	d13c      	bne.n	80064e4 <__gethex+0x3e4>
 800646a:	f8d8 2000 	ldr.w	r2, [r8]
 800646e:	3a01      	subs	r2, #1
 8006470:	42b2      	cmp	r2, r6
 8006472:	d109      	bne.n	8006488 <__gethex+0x388>
 8006474:	2201      	movs	r2, #1
 8006476:	1171      	asrs	r1, r6, #5
 8006478:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800647c:	f006 061f 	and.w	r6, r6, #31
 8006480:	fa02 f606 	lsl.w	r6, r2, r6
 8006484:	421e      	tst	r6, r3
 8006486:	d13a      	bne.n	80064fe <__gethex+0x3fe>
 8006488:	f045 0520 	orr.w	r5, r5, #32
 800648c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800648e:	601c      	str	r4, [r3, #0]
 8006490:	9b02      	ldr	r3, [sp, #8]
 8006492:	601f      	str	r7, [r3, #0]
 8006494:	e6b0      	b.n	80061f8 <__gethex+0xf8>
 8006496:	4299      	cmp	r1, r3
 8006498:	f843 cc04 	str.w	ip, [r3, #-4]
 800649c:	d8d9      	bhi.n	8006452 <__gethex+0x352>
 800649e:	68a3      	ldr	r3, [r4, #8]
 80064a0:	459b      	cmp	fp, r3
 80064a2:	db17      	blt.n	80064d4 <__gethex+0x3d4>
 80064a4:	6861      	ldr	r1, [r4, #4]
 80064a6:	9801      	ldr	r0, [sp, #4]
 80064a8:	3101      	adds	r1, #1
 80064aa:	f7fe f81b 	bl	80044e4 <_Balloc>
 80064ae:	4681      	mov	r9, r0
 80064b0:	b918      	cbnz	r0, 80064ba <__gethex+0x3ba>
 80064b2:	4602      	mov	r2, r0
 80064b4:	2184      	movs	r1, #132	@ 0x84
 80064b6:	4b19      	ldr	r3, [pc, #100]	@ (800651c <__gethex+0x41c>)
 80064b8:	e6c5      	b.n	8006246 <__gethex+0x146>
 80064ba:	6922      	ldr	r2, [r4, #16]
 80064bc:	f104 010c 	add.w	r1, r4, #12
 80064c0:	3202      	adds	r2, #2
 80064c2:	0092      	lsls	r2, r2, #2
 80064c4:	300c      	adds	r0, #12
 80064c6:	f7ff fd6d 	bl	8005fa4 <memcpy>
 80064ca:	4621      	mov	r1, r4
 80064cc:	9801      	ldr	r0, [sp, #4]
 80064ce:	f7fe f849 	bl	8004564 <_Bfree>
 80064d2:	464c      	mov	r4, r9
 80064d4:	6923      	ldr	r3, [r4, #16]
 80064d6:	1c5a      	adds	r2, r3, #1
 80064d8:	6122      	str	r2, [r4, #16]
 80064da:	2201      	movs	r2, #1
 80064dc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80064e0:	615a      	str	r2, [r3, #20]
 80064e2:	e7be      	b.n	8006462 <__gethex+0x362>
 80064e4:	6922      	ldr	r2, [r4, #16]
 80064e6:	455a      	cmp	r2, fp
 80064e8:	dd0b      	ble.n	8006502 <__gethex+0x402>
 80064ea:	2101      	movs	r1, #1
 80064ec:	4620      	mov	r0, r4
 80064ee:	f7ff fd9f 	bl	8006030 <rshift>
 80064f2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80064f6:	3701      	adds	r7, #1
 80064f8:	42bb      	cmp	r3, r7
 80064fa:	f6ff aee0 	blt.w	80062be <__gethex+0x1be>
 80064fe:	2501      	movs	r5, #1
 8006500:	e7c2      	b.n	8006488 <__gethex+0x388>
 8006502:	f016 061f 	ands.w	r6, r6, #31
 8006506:	d0fa      	beq.n	80064fe <__gethex+0x3fe>
 8006508:	4453      	add	r3, sl
 800650a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800650e:	f7fe f8db 	bl	80046c8 <__hi0bits>
 8006512:	f1c6 0620 	rsb	r6, r6, #32
 8006516:	42b0      	cmp	r0, r6
 8006518:	dbe7      	blt.n	80064ea <__gethex+0x3ea>
 800651a:	e7f0      	b.n	80064fe <__gethex+0x3fe>
 800651c:	08006dc4 	.word	0x08006dc4

08006520 <L_shift>:
 8006520:	f1c2 0208 	rsb	r2, r2, #8
 8006524:	0092      	lsls	r2, r2, #2
 8006526:	b570      	push	{r4, r5, r6, lr}
 8006528:	f1c2 0620 	rsb	r6, r2, #32
 800652c:	6843      	ldr	r3, [r0, #4]
 800652e:	6804      	ldr	r4, [r0, #0]
 8006530:	fa03 f506 	lsl.w	r5, r3, r6
 8006534:	432c      	orrs	r4, r5
 8006536:	40d3      	lsrs	r3, r2
 8006538:	6004      	str	r4, [r0, #0]
 800653a:	f840 3f04 	str.w	r3, [r0, #4]!
 800653e:	4288      	cmp	r0, r1
 8006540:	d3f4      	bcc.n	800652c <L_shift+0xc>
 8006542:	bd70      	pop	{r4, r5, r6, pc}

08006544 <__match>:
 8006544:	b530      	push	{r4, r5, lr}
 8006546:	6803      	ldr	r3, [r0, #0]
 8006548:	3301      	adds	r3, #1
 800654a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800654e:	b914      	cbnz	r4, 8006556 <__match+0x12>
 8006550:	6003      	str	r3, [r0, #0]
 8006552:	2001      	movs	r0, #1
 8006554:	bd30      	pop	{r4, r5, pc}
 8006556:	f813 2b01 	ldrb.w	r2, [r3], #1
 800655a:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 800655e:	2d19      	cmp	r5, #25
 8006560:	bf98      	it	ls
 8006562:	3220      	addls	r2, #32
 8006564:	42a2      	cmp	r2, r4
 8006566:	d0f0      	beq.n	800654a <__match+0x6>
 8006568:	2000      	movs	r0, #0
 800656a:	e7f3      	b.n	8006554 <__match+0x10>

0800656c <__hexnan>:
 800656c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006570:	2500      	movs	r5, #0
 8006572:	680b      	ldr	r3, [r1, #0]
 8006574:	4682      	mov	sl, r0
 8006576:	115e      	asrs	r6, r3, #5
 8006578:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800657c:	f013 031f 	ands.w	r3, r3, #31
 8006580:	bf18      	it	ne
 8006582:	3604      	addne	r6, #4
 8006584:	1f37      	subs	r7, r6, #4
 8006586:	4690      	mov	r8, r2
 8006588:	46b9      	mov	r9, r7
 800658a:	463c      	mov	r4, r7
 800658c:	46ab      	mov	fp, r5
 800658e:	b087      	sub	sp, #28
 8006590:	6801      	ldr	r1, [r0, #0]
 8006592:	9301      	str	r3, [sp, #4]
 8006594:	f846 5c04 	str.w	r5, [r6, #-4]
 8006598:	9502      	str	r5, [sp, #8]
 800659a:	784a      	ldrb	r2, [r1, #1]
 800659c:	1c4b      	adds	r3, r1, #1
 800659e:	9303      	str	r3, [sp, #12]
 80065a0:	b342      	cbz	r2, 80065f4 <__hexnan+0x88>
 80065a2:	4610      	mov	r0, r2
 80065a4:	9105      	str	r1, [sp, #20]
 80065a6:	9204      	str	r2, [sp, #16]
 80065a8:	f7ff fd95 	bl	80060d6 <__hexdig_fun>
 80065ac:	2800      	cmp	r0, #0
 80065ae:	d151      	bne.n	8006654 <__hexnan+0xe8>
 80065b0:	9a04      	ldr	r2, [sp, #16]
 80065b2:	9905      	ldr	r1, [sp, #20]
 80065b4:	2a20      	cmp	r2, #32
 80065b6:	d818      	bhi.n	80065ea <__hexnan+0x7e>
 80065b8:	9b02      	ldr	r3, [sp, #8]
 80065ba:	459b      	cmp	fp, r3
 80065bc:	dd13      	ble.n	80065e6 <__hexnan+0x7a>
 80065be:	454c      	cmp	r4, r9
 80065c0:	d206      	bcs.n	80065d0 <__hexnan+0x64>
 80065c2:	2d07      	cmp	r5, #7
 80065c4:	dc04      	bgt.n	80065d0 <__hexnan+0x64>
 80065c6:	462a      	mov	r2, r5
 80065c8:	4649      	mov	r1, r9
 80065ca:	4620      	mov	r0, r4
 80065cc:	f7ff ffa8 	bl	8006520 <L_shift>
 80065d0:	4544      	cmp	r4, r8
 80065d2:	d952      	bls.n	800667a <__hexnan+0x10e>
 80065d4:	2300      	movs	r3, #0
 80065d6:	f1a4 0904 	sub.w	r9, r4, #4
 80065da:	f844 3c04 	str.w	r3, [r4, #-4]
 80065de:	461d      	mov	r5, r3
 80065e0:	464c      	mov	r4, r9
 80065e2:	f8cd b008 	str.w	fp, [sp, #8]
 80065e6:	9903      	ldr	r1, [sp, #12]
 80065e8:	e7d7      	b.n	800659a <__hexnan+0x2e>
 80065ea:	2a29      	cmp	r2, #41	@ 0x29
 80065ec:	d157      	bne.n	800669e <__hexnan+0x132>
 80065ee:	3102      	adds	r1, #2
 80065f0:	f8ca 1000 	str.w	r1, [sl]
 80065f4:	f1bb 0f00 	cmp.w	fp, #0
 80065f8:	d051      	beq.n	800669e <__hexnan+0x132>
 80065fa:	454c      	cmp	r4, r9
 80065fc:	d206      	bcs.n	800660c <__hexnan+0xa0>
 80065fe:	2d07      	cmp	r5, #7
 8006600:	dc04      	bgt.n	800660c <__hexnan+0xa0>
 8006602:	462a      	mov	r2, r5
 8006604:	4649      	mov	r1, r9
 8006606:	4620      	mov	r0, r4
 8006608:	f7ff ff8a 	bl	8006520 <L_shift>
 800660c:	4544      	cmp	r4, r8
 800660e:	d936      	bls.n	800667e <__hexnan+0x112>
 8006610:	4623      	mov	r3, r4
 8006612:	f1a8 0204 	sub.w	r2, r8, #4
 8006616:	f853 1b04 	ldr.w	r1, [r3], #4
 800661a:	429f      	cmp	r7, r3
 800661c:	f842 1f04 	str.w	r1, [r2, #4]!
 8006620:	d2f9      	bcs.n	8006616 <__hexnan+0xaa>
 8006622:	1b3b      	subs	r3, r7, r4
 8006624:	f023 0303 	bic.w	r3, r3, #3
 8006628:	3304      	adds	r3, #4
 800662a:	3401      	adds	r4, #1
 800662c:	3e03      	subs	r6, #3
 800662e:	42b4      	cmp	r4, r6
 8006630:	bf88      	it	hi
 8006632:	2304      	movhi	r3, #4
 8006634:	2200      	movs	r2, #0
 8006636:	4443      	add	r3, r8
 8006638:	f843 2b04 	str.w	r2, [r3], #4
 800663c:	429f      	cmp	r7, r3
 800663e:	d2fb      	bcs.n	8006638 <__hexnan+0xcc>
 8006640:	683b      	ldr	r3, [r7, #0]
 8006642:	b91b      	cbnz	r3, 800664c <__hexnan+0xe0>
 8006644:	4547      	cmp	r7, r8
 8006646:	d128      	bne.n	800669a <__hexnan+0x12e>
 8006648:	2301      	movs	r3, #1
 800664a:	603b      	str	r3, [r7, #0]
 800664c:	2005      	movs	r0, #5
 800664e:	b007      	add	sp, #28
 8006650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006654:	3501      	adds	r5, #1
 8006656:	2d08      	cmp	r5, #8
 8006658:	f10b 0b01 	add.w	fp, fp, #1
 800665c:	dd06      	ble.n	800666c <__hexnan+0x100>
 800665e:	4544      	cmp	r4, r8
 8006660:	d9c1      	bls.n	80065e6 <__hexnan+0x7a>
 8006662:	2300      	movs	r3, #0
 8006664:	2501      	movs	r5, #1
 8006666:	f844 3c04 	str.w	r3, [r4, #-4]
 800666a:	3c04      	subs	r4, #4
 800666c:	6822      	ldr	r2, [r4, #0]
 800666e:	f000 000f 	and.w	r0, r0, #15
 8006672:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8006676:	6020      	str	r0, [r4, #0]
 8006678:	e7b5      	b.n	80065e6 <__hexnan+0x7a>
 800667a:	2508      	movs	r5, #8
 800667c:	e7b3      	b.n	80065e6 <__hexnan+0x7a>
 800667e:	9b01      	ldr	r3, [sp, #4]
 8006680:	2b00      	cmp	r3, #0
 8006682:	d0dd      	beq.n	8006640 <__hexnan+0xd4>
 8006684:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8006688:	f1c3 0320 	rsb	r3, r3, #32
 800668c:	40da      	lsrs	r2, r3
 800668e:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8006692:	4013      	ands	r3, r2
 8006694:	f846 3c04 	str.w	r3, [r6, #-4]
 8006698:	e7d2      	b.n	8006640 <__hexnan+0xd4>
 800669a:	3f04      	subs	r7, #4
 800669c:	e7d0      	b.n	8006640 <__hexnan+0xd4>
 800669e:	2004      	movs	r0, #4
 80066a0:	e7d5      	b.n	800664e <__hexnan+0xe2>

080066a2 <__ascii_mbtowc>:
 80066a2:	b082      	sub	sp, #8
 80066a4:	b901      	cbnz	r1, 80066a8 <__ascii_mbtowc+0x6>
 80066a6:	a901      	add	r1, sp, #4
 80066a8:	b142      	cbz	r2, 80066bc <__ascii_mbtowc+0x1a>
 80066aa:	b14b      	cbz	r3, 80066c0 <__ascii_mbtowc+0x1e>
 80066ac:	7813      	ldrb	r3, [r2, #0]
 80066ae:	600b      	str	r3, [r1, #0]
 80066b0:	7812      	ldrb	r2, [r2, #0]
 80066b2:	1e10      	subs	r0, r2, #0
 80066b4:	bf18      	it	ne
 80066b6:	2001      	movne	r0, #1
 80066b8:	b002      	add	sp, #8
 80066ba:	4770      	bx	lr
 80066bc:	4610      	mov	r0, r2
 80066be:	e7fb      	b.n	80066b8 <__ascii_mbtowc+0x16>
 80066c0:	f06f 0001 	mvn.w	r0, #1
 80066c4:	e7f8      	b.n	80066b8 <__ascii_mbtowc+0x16>

080066c6 <_realloc_r>:
 80066c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80066ca:	4680      	mov	r8, r0
 80066cc:	4615      	mov	r5, r2
 80066ce:	460c      	mov	r4, r1
 80066d0:	b921      	cbnz	r1, 80066dc <_realloc_r+0x16>
 80066d2:	4611      	mov	r1, r2
 80066d4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80066d8:	f7fd be78 	b.w	80043cc <_malloc_r>
 80066dc:	b92a      	cbnz	r2, 80066ea <_realloc_r+0x24>
 80066de:	f7fd fe03 	bl	80042e8 <_free_r>
 80066e2:	2400      	movs	r4, #0
 80066e4:	4620      	mov	r0, r4
 80066e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80066ea:	f000 f840 	bl	800676e <_malloc_usable_size_r>
 80066ee:	4285      	cmp	r5, r0
 80066f0:	4606      	mov	r6, r0
 80066f2:	d802      	bhi.n	80066fa <_realloc_r+0x34>
 80066f4:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80066f8:	d8f4      	bhi.n	80066e4 <_realloc_r+0x1e>
 80066fa:	4629      	mov	r1, r5
 80066fc:	4640      	mov	r0, r8
 80066fe:	f7fd fe65 	bl	80043cc <_malloc_r>
 8006702:	4607      	mov	r7, r0
 8006704:	2800      	cmp	r0, #0
 8006706:	d0ec      	beq.n	80066e2 <_realloc_r+0x1c>
 8006708:	42b5      	cmp	r5, r6
 800670a:	462a      	mov	r2, r5
 800670c:	4621      	mov	r1, r4
 800670e:	bf28      	it	cs
 8006710:	4632      	movcs	r2, r6
 8006712:	f7ff fc47 	bl	8005fa4 <memcpy>
 8006716:	4621      	mov	r1, r4
 8006718:	4640      	mov	r0, r8
 800671a:	f7fd fde5 	bl	80042e8 <_free_r>
 800671e:	463c      	mov	r4, r7
 8006720:	e7e0      	b.n	80066e4 <_realloc_r+0x1e>

08006722 <__ascii_wctomb>:
 8006722:	4603      	mov	r3, r0
 8006724:	4608      	mov	r0, r1
 8006726:	b141      	cbz	r1, 800673a <__ascii_wctomb+0x18>
 8006728:	2aff      	cmp	r2, #255	@ 0xff
 800672a:	d904      	bls.n	8006736 <__ascii_wctomb+0x14>
 800672c:	228a      	movs	r2, #138	@ 0x8a
 800672e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8006732:	601a      	str	r2, [r3, #0]
 8006734:	4770      	bx	lr
 8006736:	2001      	movs	r0, #1
 8006738:	700a      	strb	r2, [r1, #0]
 800673a:	4770      	bx	lr

0800673c <fiprintf>:
 800673c:	b40e      	push	{r1, r2, r3}
 800673e:	b503      	push	{r0, r1, lr}
 8006740:	4601      	mov	r1, r0
 8006742:	ab03      	add	r3, sp, #12
 8006744:	4805      	ldr	r0, [pc, #20]	@ (800675c <fiprintf+0x20>)
 8006746:	f853 2b04 	ldr.w	r2, [r3], #4
 800674a:	6800      	ldr	r0, [r0, #0]
 800674c:	9301      	str	r3, [sp, #4]
 800674e:	f000 f83d 	bl	80067cc <_vfiprintf_r>
 8006752:	b002      	add	sp, #8
 8006754:	f85d eb04 	ldr.w	lr, [sp], #4
 8006758:	b003      	add	sp, #12
 800675a:	4770      	bx	lr
 800675c:	20000018 	.word	0x20000018

08006760 <abort>:
 8006760:	2006      	movs	r0, #6
 8006762:	b508      	push	{r3, lr}
 8006764:	f000 fa06 	bl	8006b74 <raise>
 8006768:	2001      	movs	r0, #1
 800676a:	f7fa fe51 	bl	8001410 <_exit>

0800676e <_malloc_usable_size_r>:
 800676e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006772:	1f18      	subs	r0, r3, #4
 8006774:	2b00      	cmp	r3, #0
 8006776:	bfbc      	itt	lt
 8006778:	580b      	ldrlt	r3, [r1, r0]
 800677a:	18c0      	addlt	r0, r0, r3
 800677c:	4770      	bx	lr

0800677e <__sfputc_r>:
 800677e:	6893      	ldr	r3, [r2, #8]
 8006780:	b410      	push	{r4}
 8006782:	3b01      	subs	r3, #1
 8006784:	2b00      	cmp	r3, #0
 8006786:	6093      	str	r3, [r2, #8]
 8006788:	da07      	bge.n	800679a <__sfputc_r+0x1c>
 800678a:	6994      	ldr	r4, [r2, #24]
 800678c:	42a3      	cmp	r3, r4
 800678e:	db01      	blt.n	8006794 <__sfputc_r+0x16>
 8006790:	290a      	cmp	r1, #10
 8006792:	d102      	bne.n	800679a <__sfputc_r+0x1c>
 8006794:	bc10      	pop	{r4}
 8006796:	f000 b931 	b.w	80069fc <__swbuf_r>
 800679a:	6813      	ldr	r3, [r2, #0]
 800679c:	1c58      	adds	r0, r3, #1
 800679e:	6010      	str	r0, [r2, #0]
 80067a0:	7019      	strb	r1, [r3, #0]
 80067a2:	4608      	mov	r0, r1
 80067a4:	bc10      	pop	{r4}
 80067a6:	4770      	bx	lr

080067a8 <__sfputs_r>:
 80067a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80067aa:	4606      	mov	r6, r0
 80067ac:	460f      	mov	r7, r1
 80067ae:	4614      	mov	r4, r2
 80067b0:	18d5      	adds	r5, r2, r3
 80067b2:	42ac      	cmp	r4, r5
 80067b4:	d101      	bne.n	80067ba <__sfputs_r+0x12>
 80067b6:	2000      	movs	r0, #0
 80067b8:	e007      	b.n	80067ca <__sfputs_r+0x22>
 80067ba:	463a      	mov	r2, r7
 80067bc:	4630      	mov	r0, r6
 80067be:	f814 1b01 	ldrb.w	r1, [r4], #1
 80067c2:	f7ff ffdc 	bl	800677e <__sfputc_r>
 80067c6:	1c43      	adds	r3, r0, #1
 80067c8:	d1f3      	bne.n	80067b2 <__sfputs_r+0xa>
 80067ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080067cc <_vfiprintf_r>:
 80067cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067d0:	460d      	mov	r5, r1
 80067d2:	4614      	mov	r4, r2
 80067d4:	4698      	mov	r8, r3
 80067d6:	4606      	mov	r6, r0
 80067d8:	b09d      	sub	sp, #116	@ 0x74
 80067da:	b118      	cbz	r0, 80067e4 <_vfiprintf_r+0x18>
 80067dc:	6a03      	ldr	r3, [r0, #32]
 80067de:	b90b      	cbnz	r3, 80067e4 <_vfiprintf_r+0x18>
 80067e0:	f7fc fe06 	bl	80033f0 <__sinit>
 80067e4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80067e6:	07d9      	lsls	r1, r3, #31
 80067e8:	d405      	bmi.n	80067f6 <_vfiprintf_r+0x2a>
 80067ea:	89ab      	ldrh	r3, [r5, #12]
 80067ec:	059a      	lsls	r2, r3, #22
 80067ee:	d402      	bmi.n	80067f6 <_vfiprintf_r+0x2a>
 80067f0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80067f2:	f7fc ff14 	bl	800361e <__retarget_lock_acquire_recursive>
 80067f6:	89ab      	ldrh	r3, [r5, #12]
 80067f8:	071b      	lsls	r3, r3, #28
 80067fa:	d501      	bpl.n	8006800 <_vfiprintf_r+0x34>
 80067fc:	692b      	ldr	r3, [r5, #16]
 80067fe:	b99b      	cbnz	r3, 8006828 <_vfiprintf_r+0x5c>
 8006800:	4629      	mov	r1, r5
 8006802:	4630      	mov	r0, r6
 8006804:	f000 f938 	bl	8006a78 <__swsetup_r>
 8006808:	b170      	cbz	r0, 8006828 <_vfiprintf_r+0x5c>
 800680a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800680c:	07dc      	lsls	r4, r3, #31
 800680e:	d504      	bpl.n	800681a <_vfiprintf_r+0x4e>
 8006810:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8006814:	b01d      	add	sp, #116	@ 0x74
 8006816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800681a:	89ab      	ldrh	r3, [r5, #12]
 800681c:	0598      	lsls	r0, r3, #22
 800681e:	d4f7      	bmi.n	8006810 <_vfiprintf_r+0x44>
 8006820:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006822:	f7fc fefd 	bl	8003620 <__retarget_lock_release_recursive>
 8006826:	e7f3      	b.n	8006810 <_vfiprintf_r+0x44>
 8006828:	2300      	movs	r3, #0
 800682a:	9309      	str	r3, [sp, #36]	@ 0x24
 800682c:	2320      	movs	r3, #32
 800682e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006832:	2330      	movs	r3, #48	@ 0x30
 8006834:	f04f 0901 	mov.w	r9, #1
 8006838:	f8cd 800c 	str.w	r8, [sp, #12]
 800683c:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 80069e8 <_vfiprintf_r+0x21c>
 8006840:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006844:	4623      	mov	r3, r4
 8006846:	469a      	mov	sl, r3
 8006848:	f813 2b01 	ldrb.w	r2, [r3], #1
 800684c:	b10a      	cbz	r2, 8006852 <_vfiprintf_r+0x86>
 800684e:	2a25      	cmp	r2, #37	@ 0x25
 8006850:	d1f9      	bne.n	8006846 <_vfiprintf_r+0x7a>
 8006852:	ebba 0b04 	subs.w	fp, sl, r4
 8006856:	d00b      	beq.n	8006870 <_vfiprintf_r+0xa4>
 8006858:	465b      	mov	r3, fp
 800685a:	4622      	mov	r2, r4
 800685c:	4629      	mov	r1, r5
 800685e:	4630      	mov	r0, r6
 8006860:	f7ff ffa2 	bl	80067a8 <__sfputs_r>
 8006864:	3001      	adds	r0, #1
 8006866:	f000 80a7 	beq.w	80069b8 <_vfiprintf_r+0x1ec>
 800686a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800686c:	445a      	add	r2, fp
 800686e:	9209      	str	r2, [sp, #36]	@ 0x24
 8006870:	f89a 3000 	ldrb.w	r3, [sl]
 8006874:	2b00      	cmp	r3, #0
 8006876:	f000 809f 	beq.w	80069b8 <_vfiprintf_r+0x1ec>
 800687a:	2300      	movs	r3, #0
 800687c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8006880:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006884:	f10a 0a01 	add.w	sl, sl, #1
 8006888:	9304      	str	r3, [sp, #16]
 800688a:	9307      	str	r3, [sp, #28]
 800688c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006890:	931a      	str	r3, [sp, #104]	@ 0x68
 8006892:	4654      	mov	r4, sl
 8006894:	2205      	movs	r2, #5
 8006896:	f814 1b01 	ldrb.w	r1, [r4], #1
 800689a:	4853      	ldr	r0, [pc, #332]	@ (80069e8 <_vfiprintf_r+0x21c>)
 800689c:	f7fc fec1 	bl	8003622 <memchr>
 80068a0:	9a04      	ldr	r2, [sp, #16]
 80068a2:	b9d8      	cbnz	r0, 80068dc <_vfiprintf_r+0x110>
 80068a4:	06d1      	lsls	r1, r2, #27
 80068a6:	bf44      	itt	mi
 80068a8:	2320      	movmi	r3, #32
 80068aa:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80068ae:	0713      	lsls	r3, r2, #28
 80068b0:	bf44      	itt	mi
 80068b2:	232b      	movmi	r3, #43	@ 0x2b
 80068b4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80068b8:	f89a 3000 	ldrb.w	r3, [sl]
 80068bc:	2b2a      	cmp	r3, #42	@ 0x2a
 80068be:	d015      	beq.n	80068ec <_vfiprintf_r+0x120>
 80068c0:	4654      	mov	r4, sl
 80068c2:	2000      	movs	r0, #0
 80068c4:	f04f 0c0a 	mov.w	ip, #10
 80068c8:	9a07      	ldr	r2, [sp, #28]
 80068ca:	4621      	mov	r1, r4
 80068cc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80068d0:	3b30      	subs	r3, #48	@ 0x30
 80068d2:	2b09      	cmp	r3, #9
 80068d4:	d94b      	bls.n	800696e <_vfiprintf_r+0x1a2>
 80068d6:	b1b0      	cbz	r0, 8006906 <_vfiprintf_r+0x13a>
 80068d8:	9207      	str	r2, [sp, #28]
 80068da:	e014      	b.n	8006906 <_vfiprintf_r+0x13a>
 80068dc:	eba0 0308 	sub.w	r3, r0, r8
 80068e0:	fa09 f303 	lsl.w	r3, r9, r3
 80068e4:	4313      	orrs	r3, r2
 80068e6:	46a2      	mov	sl, r4
 80068e8:	9304      	str	r3, [sp, #16]
 80068ea:	e7d2      	b.n	8006892 <_vfiprintf_r+0xc6>
 80068ec:	9b03      	ldr	r3, [sp, #12]
 80068ee:	1d19      	adds	r1, r3, #4
 80068f0:	681b      	ldr	r3, [r3, #0]
 80068f2:	9103      	str	r1, [sp, #12]
 80068f4:	2b00      	cmp	r3, #0
 80068f6:	bfbb      	ittet	lt
 80068f8:	425b      	neglt	r3, r3
 80068fa:	f042 0202 	orrlt.w	r2, r2, #2
 80068fe:	9307      	strge	r3, [sp, #28]
 8006900:	9307      	strlt	r3, [sp, #28]
 8006902:	bfb8      	it	lt
 8006904:	9204      	strlt	r2, [sp, #16]
 8006906:	7823      	ldrb	r3, [r4, #0]
 8006908:	2b2e      	cmp	r3, #46	@ 0x2e
 800690a:	d10a      	bne.n	8006922 <_vfiprintf_r+0x156>
 800690c:	7863      	ldrb	r3, [r4, #1]
 800690e:	2b2a      	cmp	r3, #42	@ 0x2a
 8006910:	d132      	bne.n	8006978 <_vfiprintf_r+0x1ac>
 8006912:	9b03      	ldr	r3, [sp, #12]
 8006914:	3402      	adds	r4, #2
 8006916:	1d1a      	adds	r2, r3, #4
 8006918:	681b      	ldr	r3, [r3, #0]
 800691a:	9203      	str	r2, [sp, #12]
 800691c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006920:	9305      	str	r3, [sp, #20]
 8006922:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 80069ec <_vfiprintf_r+0x220>
 8006926:	2203      	movs	r2, #3
 8006928:	4650      	mov	r0, sl
 800692a:	7821      	ldrb	r1, [r4, #0]
 800692c:	f7fc fe79 	bl	8003622 <memchr>
 8006930:	b138      	cbz	r0, 8006942 <_vfiprintf_r+0x176>
 8006932:	2240      	movs	r2, #64	@ 0x40
 8006934:	9b04      	ldr	r3, [sp, #16]
 8006936:	eba0 000a 	sub.w	r0, r0, sl
 800693a:	4082      	lsls	r2, r0
 800693c:	4313      	orrs	r3, r2
 800693e:	3401      	adds	r4, #1
 8006940:	9304      	str	r3, [sp, #16]
 8006942:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006946:	2206      	movs	r2, #6
 8006948:	4829      	ldr	r0, [pc, #164]	@ (80069f0 <_vfiprintf_r+0x224>)
 800694a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800694e:	f7fc fe68 	bl	8003622 <memchr>
 8006952:	2800      	cmp	r0, #0
 8006954:	d03f      	beq.n	80069d6 <_vfiprintf_r+0x20a>
 8006956:	4b27      	ldr	r3, [pc, #156]	@ (80069f4 <_vfiprintf_r+0x228>)
 8006958:	bb1b      	cbnz	r3, 80069a2 <_vfiprintf_r+0x1d6>
 800695a:	9b03      	ldr	r3, [sp, #12]
 800695c:	3307      	adds	r3, #7
 800695e:	f023 0307 	bic.w	r3, r3, #7
 8006962:	3308      	adds	r3, #8
 8006964:	9303      	str	r3, [sp, #12]
 8006966:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006968:	443b      	add	r3, r7
 800696a:	9309      	str	r3, [sp, #36]	@ 0x24
 800696c:	e76a      	b.n	8006844 <_vfiprintf_r+0x78>
 800696e:	460c      	mov	r4, r1
 8006970:	2001      	movs	r0, #1
 8006972:	fb0c 3202 	mla	r2, ip, r2, r3
 8006976:	e7a8      	b.n	80068ca <_vfiprintf_r+0xfe>
 8006978:	2300      	movs	r3, #0
 800697a:	f04f 0c0a 	mov.w	ip, #10
 800697e:	4619      	mov	r1, r3
 8006980:	3401      	adds	r4, #1
 8006982:	9305      	str	r3, [sp, #20]
 8006984:	4620      	mov	r0, r4
 8006986:	f810 2b01 	ldrb.w	r2, [r0], #1
 800698a:	3a30      	subs	r2, #48	@ 0x30
 800698c:	2a09      	cmp	r2, #9
 800698e:	d903      	bls.n	8006998 <_vfiprintf_r+0x1cc>
 8006990:	2b00      	cmp	r3, #0
 8006992:	d0c6      	beq.n	8006922 <_vfiprintf_r+0x156>
 8006994:	9105      	str	r1, [sp, #20]
 8006996:	e7c4      	b.n	8006922 <_vfiprintf_r+0x156>
 8006998:	4604      	mov	r4, r0
 800699a:	2301      	movs	r3, #1
 800699c:	fb0c 2101 	mla	r1, ip, r1, r2
 80069a0:	e7f0      	b.n	8006984 <_vfiprintf_r+0x1b8>
 80069a2:	ab03      	add	r3, sp, #12
 80069a4:	9300      	str	r3, [sp, #0]
 80069a6:	462a      	mov	r2, r5
 80069a8:	4630      	mov	r0, r6
 80069aa:	4b13      	ldr	r3, [pc, #76]	@ (80069f8 <_vfiprintf_r+0x22c>)
 80069ac:	a904      	add	r1, sp, #16
 80069ae:	f7fb fec5 	bl	800273c <_printf_float>
 80069b2:	4607      	mov	r7, r0
 80069b4:	1c78      	adds	r0, r7, #1
 80069b6:	d1d6      	bne.n	8006966 <_vfiprintf_r+0x19a>
 80069b8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80069ba:	07d9      	lsls	r1, r3, #31
 80069bc:	d405      	bmi.n	80069ca <_vfiprintf_r+0x1fe>
 80069be:	89ab      	ldrh	r3, [r5, #12]
 80069c0:	059a      	lsls	r2, r3, #22
 80069c2:	d402      	bmi.n	80069ca <_vfiprintf_r+0x1fe>
 80069c4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80069c6:	f7fc fe2b 	bl	8003620 <__retarget_lock_release_recursive>
 80069ca:	89ab      	ldrh	r3, [r5, #12]
 80069cc:	065b      	lsls	r3, r3, #25
 80069ce:	f53f af1f 	bmi.w	8006810 <_vfiprintf_r+0x44>
 80069d2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80069d4:	e71e      	b.n	8006814 <_vfiprintf_r+0x48>
 80069d6:	ab03      	add	r3, sp, #12
 80069d8:	9300      	str	r3, [sp, #0]
 80069da:	462a      	mov	r2, r5
 80069dc:	4630      	mov	r0, r6
 80069de:	4b06      	ldr	r3, [pc, #24]	@ (80069f8 <_vfiprintf_r+0x22c>)
 80069e0:	a904      	add	r1, sp, #16
 80069e2:	f7fc f949 	bl	8002c78 <_printf_i>
 80069e6:	e7e4      	b.n	80069b2 <_vfiprintf_r+0x1e6>
 80069e8:	08007089 	.word	0x08007089
 80069ec:	0800708f 	.word	0x0800708f
 80069f0:	08007093 	.word	0x08007093
 80069f4:	0800273d 	.word	0x0800273d
 80069f8:	080067a9 	.word	0x080067a9

080069fc <__swbuf_r>:
 80069fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80069fe:	460e      	mov	r6, r1
 8006a00:	4614      	mov	r4, r2
 8006a02:	4605      	mov	r5, r0
 8006a04:	b118      	cbz	r0, 8006a0e <__swbuf_r+0x12>
 8006a06:	6a03      	ldr	r3, [r0, #32]
 8006a08:	b90b      	cbnz	r3, 8006a0e <__swbuf_r+0x12>
 8006a0a:	f7fc fcf1 	bl	80033f0 <__sinit>
 8006a0e:	69a3      	ldr	r3, [r4, #24]
 8006a10:	60a3      	str	r3, [r4, #8]
 8006a12:	89a3      	ldrh	r3, [r4, #12]
 8006a14:	071a      	lsls	r2, r3, #28
 8006a16:	d501      	bpl.n	8006a1c <__swbuf_r+0x20>
 8006a18:	6923      	ldr	r3, [r4, #16]
 8006a1a:	b943      	cbnz	r3, 8006a2e <__swbuf_r+0x32>
 8006a1c:	4621      	mov	r1, r4
 8006a1e:	4628      	mov	r0, r5
 8006a20:	f000 f82a 	bl	8006a78 <__swsetup_r>
 8006a24:	b118      	cbz	r0, 8006a2e <__swbuf_r+0x32>
 8006a26:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8006a2a:	4638      	mov	r0, r7
 8006a2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006a2e:	6823      	ldr	r3, [r4, #0]
 8006a30:	6922      	ldr	r2, [r4, #16]
 8006a32:	b2f6      	uxtb	r6, r6
 8006a34:	1a98      	subs	r0, r3, r2
 8006a36:	6963      	ldr	r3, [r4, #20]
 8006a38:	4637      	mov	r7, r6
 8006a3a:	4283      	cmp	r3, r0
 8006a3c:	dc05      	bgt.n	8006a4a <__swbuf_r+0x4e>
 8006a3e:	4621      	mov	r1, r4
 8006a40:	4628      	mov	r0, r5
 8006a42:	f7ff fa4b 	bl	8005edc <_fflush_r>
 8006a46:	2800      	cmp	r0, #0
 8006a48:	d1ed      	bne.n	8006a26 <__swbuf_r+0x2a>
 8006a4a:	68a3      	ldr	r3, [r4, #8]
 8006a4c:	3b01      	subs	r3, #1
 8006a4e:	60a3      	str	r3, [r4, #8]
 8006a50:	6823      	ldr	r3, [r4, #0]
 8006a52:	1c5a      	adds	r2, r3, #1
 8006a54:	6022      	str	r2, [r4, #0]
 8006a56:	701e      	strb	r6, [r3, #0]
 8006a58:	6962      	ldr	r2, [r4, #20]
 8006a5a:	1c43      	adds	r3, r0, #1
 8006a5c:	429a      	cmp	r2, r3
 8006a5e:	d004      	beq.n	8006a6a <__swbuf_r+0x6e>
 8006a60:	89a3      	ldrh	r3, [r4, #12]
 8006a62:	07db      	lsls	r3, r3, #31
 8006a64:	d5e1      	bpl.n	8006a2a <__swbuf_r+0x2e>
 8006a66:	2e0a      	cmp	r6, #10
 8006a68:	d1df      	bne.n	8006a2a <__swbuf_r+0x2e>
 8006a6a:	4621      	mov	r1, r4
 8006a6c:	4628      	mov	r0, r5
 8006a6e:	f7ff fa35 	bl	8005edc <_fflush_r>
 8006a72:	2800      	cmp	r0, #0
 8006a74:	d0d9      	beq.n	8006a2a <__swbuf_r+0x2e>
 8006a76:	e7d6      	b.n	8006a26 <__swbuf_r+0x2a>

08006a78 <__swsetup_r>:
 8006a78:	b538      	push	{r3, r4, r5, lr}
 8006a7a:	4b29      	ldr	r3, [pc, #164]	@ (8006b20 <__swsetup_r+0xa8>)
 8006a7c:	4605      	mov	r5, r0
 8006a7e:	6818      	ldr	r0, [r3, #0]
 8006a80:	460c      	mov	r4, r1
 8006a82:	b118      	cbz	r0, 8006a8c <__swsetup_r+0x14>
 8006a84:	6a03      	ldr	r3, [r0, #32]
 8006a86:	b90b      	cbnz	r3, 8006a8c <__swsetup_r+0x14>
 8006a88:	f7fc fcb2 	bl	80033f0 <__sinit>
 8006a8c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006a90:	0719      	lsls	r1, r3, #28
 8006a92:	d422      	bmi.n	8006ada <__swsetup_r+0x62>
 8006a94:	06da      	lsls	r2, r3, #27
 8006a96:	d407      	bmi.n	8006aa8 <__swsetup_r+0x30>
 8006a98:	2209      	movs	r2, #9
 8006a9a:	602a      	str	r2, [r5, #0]
 8006a9c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006aa0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8006aa4:	81a3      	strh	r3, [r4, #12]
 8006aa6:	e033      	b.n	8006b10 <__swsetup_r+0x98>
 8006aa8:	0758      	lsls	r0, r3, #29
 8006aaa:	d512      	bpl.n	8006ad2 <__swsetup_r+0x5a>
 8006aac:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006aae:	b141      	cbz	r1, 8006ac2 <__swsetup_r+0x4a>
 8006ab0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006ab4:	4299      	cmp	r1, r3
 8006ab6:	d002      	beq.n	8006abe <__swsetup_r+0x46>
 8006ab8:	4628      	mov	r0, r5
 8006aba:	f7fd fc15 	bl	80042e8 <_free_r>
 8006abe:	2300      	movs	r3, #0
 8006ac0:	6363      	str	r3, [r4, #52]	@ 0x34
 8006ac2:	89a3      	ldrh	r3, [r4, #12]
 8006ac4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006ac8:	81a3      	strh	r3, [r4, #12]
 8006aca:	2300      	movs	r3, #0
 8006acc:	6063      	str	r3, [r4, #4]
 8006ace:	6923      	ldr	r3, [r4, #16]
 8006ad0:	6023      	str	r3, [r4, #0]
 8006ad2:	89a3      	ldrh	r3, [r4, #12]
 8006ad4:	f043 0308 	orr.w	r3, r3, #8
 8006ad8:	81a3      	strh	r3, [r4, #12]
 8006ada:	6923      	ldr	r3, [r4, #16]
 8006adc:	b94b      	cbnz	r3, 8006af2 <__swsetup_r+0x7a>
 8006ade:	89a3      	ldrh	r3, [r4, #12]
 8006ae0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8006ae4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006ae8:	d003      	beq.n	8006af2 <__swsetup_r+0x7a>
 8006aea:	4621      	mov	r1, r4
 8006aec:	4628      	mov	r0, r5
 8006aee:	f000 f882 	bl	8006bf6 <__smakebuf_r>
 8006af2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006af6:	f013 0201 	ands.w	r2, r3, #1
 8006afa:	d00a      	beq.n	8006b12 <__swsetup_r+0x9a>
 8006afc:	2200      	movs	r2, #0
 8006afe:	60a2      	str	r2, [r4, #8]
 8006b00:	6962      	ldr	r2, [r4, #20]
 8006b02:	4252      	negs	r2, r2
 8006b04:	61a2      	str	r2, [r4, #24]
 8006b06:	6922      	ldr	r2, [r4, #16]
 8006b08:	b942      	cbnz	r2, 8006b1c <__swsetup_r+0xa4>
 8006b0a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006b0e:	d1c5      	bne.n	8006a9c <__swsetup_r+0x24>
 8006b10:	bd38      	pop	{r3, r4, r5, pc}
 8006b12:	0799      	lsls	r1, r3, #30
 8006b14:	bf58      	it	pl
 8006b16:	6962      	ldrpl	r2, [r4, #20]
 8006b18:	60a2      	str	r2, [r4, #8]
 8006b1a:	e7f4      	b.n	8006b06 <__swsetup_r+0x8e>
 8006b1c:	2000      	movs	r0, #0
 8006b1e:	e7f7      	b.n	8006b10 <__swsetup_r+0x98>
 8006b20:	20000018 	.word	0x20000018

08006b24 <_raise_r>:
 8006b24:	291f      	cmp	r1, #31
 8006b26:	b538      	push	{r3, r4, r5, lr}
 8006b28:	4605      	mov	r5, r0
 8006b2a:	460c      	mov	r4, r1
 8006b2c:	d904      	bls.n	8006b38 <_raise_r+0x14>
 8006b2e:	2316      	movs	r3, #22
 8006b30:	6003      	str	r3, [r0, #0]
 8006b32:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8006b36:	bd38      	pop	{r3, r4, r5, pc}
 8006b38:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8006b3a:	b112      	cbz	r2, 8006b42 <_raise_r+0x1e>
 8006b3c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006b40:	b94b      	cbnz	r3, 8006b56 <_raise_r+0x32>
 8006b42:	4628      	mov	r0, r5
 8006b44:	f000 f830 	bl	8006ba8 <_getpid_r>
 8006b48:	4622      	mov	r2, r4
 8006b4a:	4601      	mov	r1, r0
 8006b4c:	4628      	mov	r0, r5
 8006b4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006b52:	f000 b817 	b.w	8006b84 <_kill_r>
 8006b56:	2b01      	cmp	r3, #1
 8006b58:	d00a      	beq.n	8006b70 <_raise_r+0x4c>
 8006b5a:	1c59      	adds	r1, r3, #1
 8006b5c:	d103      	bne.n	8006b66 <_raise_r+0x42>
 8006b5e:	2316      	movs	r3, #22
 8006b60:	6003      	str	r3, [r0, #0]
 8006b62:	2001      	movs	r0, #1
 8006b64:	e7e7      	b.n	8006b36 <_raise_r+0x12>
 8006b66:	2100      	movs	r1, #0
 8006b68:	4620      	mov	r0, r4
 8006b6a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8006b6e:	4798      	blx	r3
 8006b70:	2000      	movs	r0, #0
 8006b72:	e7e0      	b.n	8006b36 <_raise_r+0x12>

08006b74 <raise>:
 8006b74:	4b02      	ldr	r3, [pc, #8]	@ (8006b80 <raise+0xc>)
 8006b76:	4601      	mov	r1, r0
 8006b78:	6818      	ldr	r0, [r3, #0]
 8006b7a:	f7ff bfd3 	b.w	8006b24 <_raise_r>
 8006b7e:	bf00      	nop
 8006b80:	20000018 	.word	0x20000018

08006b84 <_kill_r>:
 8006b84:	b538      	push	{r3, r4, r5, lr}
 8006b86:	2300      	movs	r3, #0
 8006b88:	4d06      	ldr	r5, [pc, #24]	@ (8006ba4 <_kill_r+0x20>)
 8006b8a:	4604      	mov	r4, r0
 8006b8c:	4608      	mov	r0, r1
 8006b8e:	4611      	mov	r1, r2
 8006b90:	602b      	str	r3, [r5, #0]
 8006b92:	f7fa fc35 	bl	8001400 <_kill>
 8006b96:	1c43      	adds	r3, r0, #1
 8006b98:	d102      	bne.n	8006ba0 <_kill_r+0x1c>
 8006b9a:	682b      	ldr	r3, [r5, #0]
 8006b9c:	b103      	cbz	r3, 8006ba0 <_kill_r+0x1c>
 8006b9e:	6023      	str	r3, [r4, #0]
 8006ba0:	bd38      	pop	{r3, r4, r5, pc}
 8006ba2:	bf00      	nop
 8006ba4:	200003e0 	.word	0x200003e0

08006ba8 <_getpid_r>:
 8006ba8:	f7fa bc28 	b.w	80013fc <_getpid>

08006bac <__swhatbuf_r>:
 8006bac:	b570      	push	{r4, r5, r6, lr}
 8006bae:	460c      	mov	r4, r1
 8006bb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006bb4:	4615      	mov	r5, r2
 8006bb6:	2900      	cmp	r1, #0
 8006bb8:	461e      	mov	r6, r3
 8006bba:	b096      	sub	sp, #88	@ 0x58
 8006bbc:	da0c      	bge.n	8006bd8 <__swhatbuf_r+0x2c>
 8006bbe:	89a3      	ldrh	r3, [r4, #12]
 8006bc0:	2100      	movs	r1, #0
 8006bc2:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8006bc6:	bf14      	ite	ne
 8006bc8:	2340      	movne	r3, #64	@ 0x40
 8006bca:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006bce:	2000      	movs	r0, #0
 8006bd0:	6031      	str	r1, [r6, #0]
 8006bd2:	602b      	str	r3, [r5, #0]
 8006bd4:	b016      	add	sp, #88	@ 0x58
 8006bd6:	bd70      	pop	{r4, r5, r6, pc}
 8006bd8:	466a      	mov	r2, sp
 8006bda:	f000 f849 	bl	8006c70 <_fstat_r>
 8006bde:	2800      	cmp	r0, #0
 8006be0:	dbed      	blt.n	8006bbe <__swhatbuf_r+0x12>
 8006be2:	9901      	ldr	r1, [sp, #4]
 8006be4:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006be8:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006bec:	4259      	negs	r1, r3
 8006bee:	4159      	adcs	r1, r3
 8006bf0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8006bf4:	e7eb      	b.n	8006bce <__swhatbuf_r+0x22>

08006bf6 <__smakebuf_r>:
 8006bf6:	898b      	ldrh	r3, [r1, #12]
 8006bf8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006bfa:	079d      	lsls	r5, r3, #30
 8006bfc:	4606      	mov	r6, r0
 8006bfe:	460c      	mov	r4, r1
 8006c00:	d507      	bpl.n	8006c12 <__smakebuf_r+0x1c>
 8006c02:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006c06:	6023      	str	r3, [r4, #0]
 8006c08:	6123      	str	r3, [r4, #16]
 8006c0a:	2301      	movs	r3, #1
 8006c0c:	6163      	str	r3, [r4, #20]
 8006c0e:	b003      	add	sp, #12
 8006c10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c12:	466a      	mov	r2, sp
 8006c14:	ab01      	add	r3, sp, #4
 8006c16:	f7ff ffc9 	bl	8006bac <__swhatbuf_r>
 8006c1a:	9f00      	ldr	r7, [sp, #0]
 8006c1c:	4605      	mov	r5, r0
 8006c1e:	4639      	mov	r1, r7
 8006c20:	4630      	mov	r0, r6
 8006c22:	f7fd fbd3 	bl	80043cc <_malloc_r>
 8006c26:	b948      	cbnz	r0, 8006c3c <__smakebuf_r+0x46>
 8006c28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006c2c:	059a      	lsls	r2, r3, #22
 8006c2e:	d4ee      	bmi.n	8006c0e <__smakebuf_r+0x18>
 8006c30:	f023 0303 	bic.w	r3, r3, #3
 8006c34:	f043 0302 	orr.w	r3, r3, #2
 8006c38:	81a3      	strh	r3, [r4, #12]
 8006c3a:	e7e2      	b.n	8006c02 <__smakebuf_r+0xc>
 8006c3c:	89a3      	ldrh	r3, [r4, #12]
 8006c3e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8006c42:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006c46:	81a3      	strh	r3, [r4, #12]
 8006c48:	9b01      	ldr	r3, [sp, #4]
 8006c4a:	6020      	str	r0, [r4, #0]
 8006c4c:	b15b      	cbz	r3, 8006c66 <__smakebuf_r+0x70>
 8006c4e:	4630      	mov	r0, r6
 8006c50:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006c54:	f000 f81e 	bl	8006c94 <_isatty_r>
 8006c58:	b128      	cbz	r0, 8006c66 <__smakebuf_r+0x70>
 8006c5a:	89a3      	ldrh	r3, [r4, #12]
 8006c5c:	f023 0303 	bic.w	r3, r3, #3
 8006c60:	f043 0301 	orr.w	r3, r3, #1
 8006c64:	81a3      	strh	r3, [r4, #12]
 8006c66:	89a3      	ldrh	r3, [r4, #12]
 8006c68:	431d      	orrs	r5, r3
 8006c6a:	81a5      	strh	r5, [r4, #12]
 8006c6c:	e7cf      	b.n	8006c0e <__smakebuf_r+0x18>
	...

08006c70 <_fstat_r>:
 8006c70:	b538      	push	{r3, r4, r5, lr}
 8006c72:	2300      	movs	r3, #0
 8006c74:	4d06      	ldr	r5, [pc, #24]	@ (8006c90 <_fstat_r+0x20>)
 8006c76:	4604      	mov	r4, r0
 8006c78:	4608      	mov	r0, r1
 8006c7a:	4611      	mov	r1, r2
 8006c7c:	602b      	str	r3, [r5, #0]
 8006c7e:	f7fa fbec 	bl	800145a <_fstat>
 8006c82:	1c43      	adds	r3, r0, #1
 8006c84:	d102      	bne.n	8006c8c <_fstat_r+0x1c>
 8006c86:	682b      	ldr	r3, [r5, #0]
 8006c88:	b103      	cbz	r3, 8006c8c <_fstat_r+0x1c>
 8006c8a:	6023      	str	r3, [r4, #0]
 8006c8c:	bd38      	pop	{r3, r4, r5, pc}
 8006c8e:	bf00      	nop
 8006c90:	200003e0 	.word	0x200003e0

08006c94 <_isatty_r>:
 8006c94:	b538      	push	{r3, r4, r5, lr}
 8006c96:	2300      	movs	r3, #0
 8006c98:	4d05      	ldr	r5, [pc, #20]	@ (8006cb0 <_isatty_r+0x1c>)
 8006c9a:	4604      	mov	r4, r0
 8006c9c:	4608      	mov	r0, r1
 8006c9e:	602b      	str	r3, [r5, #0]
 8006ca0:	f7fa fbe0 	bl	8001464 <_isatty>
 8006ca4:	1c43      	adds	r3, r0, #1
 8006ca6:	d102      	bne.n	8006cae <_isatty_r+0x1a>
 8006ca8:	682b      	ldr	r3, [r5, #0]
 8006caa:	b103      	cbz	r3, 8006cae <_isatty_r+0x1a>
 8006cac:	6023      	str	r3, [r4, #0]
 8006cae:	bd38      	pop	{r3, r4, r5, pc}
 8006cb0:	200003e0 	.word	0x200003e0

08006cb4 <_init>:
 8006cb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006cb6:	bf00      	nop
 8006cb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006cba:	bc08      	pop	{r3}
 8006cbc:	469e      	mov	lr, r3
 8006cbe:	4770      	bx	lr

08006cc0 <_fini>:
 8006cc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006cc2:	bf00      	nop
 8006cc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006cc6:	bc08      	pop	{r3}
 8006cc8:	469e      	mov	lr, r3
 8006cca:	4770      	bx	lr
